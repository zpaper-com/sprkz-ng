{"ast":null,"code":"import { getCurrentScope, getClient } from './currentScopes.js';\n\n/**\n * Send user feedback to Sentry.\n */\nfunction captureFeedback(params, hint = {}, scope = getCurrentScope()) {\n  const {\n    message,\n    name,\n    email,\n    url,\n    source,\n    associatedEventId,\n    tags\n  } = params;\n  const feedbackEvent = {\n    contexts: {\n      feedback: {\n        contact_email: email,\n        name,\n        message,\n        url,\n        source,\n        associated_event_id: associatedEventId\n      }\n    },\n    type: 'feedback',\n    level: 'info',\n    tags\n  };\n  const client = scope?.getClient() || getClient();\n  if (client) {\n    client.emit('beforeSendFeedback', feedbackEvent, hint);\n  }\n  const eventId = scope.captureEvent(feedbackEvent, hint);\n  return eventId;\n}\nexport { captureFeedback };","map":{"version":3,"names":["captureFeedback","params","hint","scope","getCurrentScope","message","name","email","url","source","associatedEventId","tags","feedbackEvent","contexts","feedback","contact_email","associated_event_id","type","level","client","getClient","emit","eventId","captureEvent"],"sources":["/home/shawnstorie/sprkz-ng/sprkz-pdf-forms/node_modules/@sentry/core/src/feedback.ts"],"sourcesContent":["import { getClient, getCurrentScope } from './currentScopes';\nimport type { EventHint } from './types-hoist/event';\nimport type { FeedbackEvent, SendFeedbackParams } from './types-hoist/feedback';\n\n/**\n * Send user feedback to Sentry.\n */\nexport function captureFeedback(\n  params: SendFeedbackParams,\n  hint: EventHint & { includeReplay?: boolean } = {},\n  scope = getCurrentScope(),\n): string {\n  const { message, name, email, url, source, associatedEventId, tags } = params;\n\n  const feedbackEvent: FeedbackEvent = {\n    contexts: {\n      feedback: {\n        contact_email: email,\n        name,\n        message,\n        url,\n        source,\n        associated_event_id: associatedEventId,\n      },\n    },\n    type: 'feedback',\n    level: 'info',\n    tags,\n  };\n\n  const client = scope?.getClient() || getClient();\n\n  if (client) {\n    client.emit('beforeSendFeedback', feedbackEvent, hint);\n  }\n\n  const eventId = scope.captureEvent(feedbackEvent, hint);\n\n  return eventId;\n}\n"],"mappings":";;AAIA;AACA;AACA;AACO,SAASA,eAAeA,CAC7BC,MAAM,EACNC,IAAI,GAA4C,EAAE,EAClDC,KAAA,GAAQC,eAAe,EAAE,EACjB;EACR,MAAM;IAAEC,OAAO;IAAEC,IAAI;IAAEC,KAAK;IAAEC,GAAG;IAAEC,MAAM;IAAEC,iBAAiB;IAAEC;EAAA,CAAK,GAAIV,MAAM;EAE7E,MAAMW,aAAa,GAAkB;IACnCC,QAAQ,EAAE;MACRC,QAAQ,EAAE;QACRC,aAAa,EAAER,KAAK;QACpBD,IAAI;QACJD,OAAO;QACPG,GAAG;QACHC,MAAM;QACNO,mBAAmB,EAAEN;MAC7B;IACA,CAAK;IACDO,IAAI,EAAE,UAAU;IAChBC,KAAK,EAAE,MAAM;IACbP;EACJ,CAAG;EAED,MAAMQ,MAAA,GAAShB,KAAK,EAAEiB,SAAS,EAAC,IAAKA,SAAS,EAAE;EAEhD,IAAID,MAAM,EAAE;IACVA,MAAM,CAACE,IAAI,CAAC,oBAAoB,EAAET,aAAa,EAAEV,IAAI,CAAC;EAC1D;EAEE,MAAMoB,OAAA,GAAUnB,KAAK,CAACoB,YAAY,CAACX,aAAa,EAAEV,IAAI,CAAC;EAEvD,OAAOoB,OAAO;AAChB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}