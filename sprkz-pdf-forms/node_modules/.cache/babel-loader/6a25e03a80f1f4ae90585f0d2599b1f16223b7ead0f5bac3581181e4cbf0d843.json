{"ast":null,"code":"import { defineIntegration, debug, startSession, captureSession } from '@sentry/core';\nimport { addHistoryInstrumentationHandler } from '@sentry-internal/browser-utils';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { WINDOW } from '../helpers.js';\n\n/**\n * When added, automatically creates sessions which allow you to track adoption and crashes (crash free rate) in your Releases in Sentry.\n * More information: https://docs.sentry.io/product/releases/health/\n *\n * Note: In order for session tracking to work, you need to set up Releases: https://docs.sentry.io/product/releases/\n */\nconst browserSessionIntegration = defineIntegration(() => {\n  return {\n    name: 'BrowserSession',\n    setupOnce() {\n      if (typeof WINDOW.document === 'undefined') {\n        DEBUG_BUILD && debug.warn('Using the `browserSessionIntegration` in non-browser environments is not supported.');\n        return;\n      }\n\n      // The session duration for browser sessions does not track a meaningful\n      // concept that can be used as a metric.\n      // Automatically captured sessions are akin to page views, and thus we\n      // discard their duration.\n      startSession({\n        ignoreDuration: true\n      });\n      captureSession();\n\n      // We want to create a session for every navigation as well\n      addHistoryInstrumentationHandler(({\n        from,\n        to\n      }) => {\n        // Don't create an additional session for the initial route or if the location did not change\n        if (from !== undefined && from !== to) {\n          startSession({\n            ignoreDuration: true\n          });\n          captureSession();\n        }\n      });\n    }\n  };\n});\nexport { browserSessionIntegration };","map":{"version":3,"names":["browserSessionIntegration","defineIntegration","name","setupOnce","WINDOW","document","DEBUG_BUILD","debug","warn","startSession","ignoreDuration","captureSession","addHistoryInstrumentationHandler","from","to","undefined"],"sources":["/home/shawnstorie/sprkz-ng/sprkz-pdf-forms/node_modules/@sentry/browser/src/integrations/browsersession.ts"],"sourcesContent":["import { captureSession, debug, defineIntegration, startSession } from '@sentry/core';\nimport { addHistoryInstrumentationHandler } from '@sentry-internal/browser-utils';\nimport { DEBUG_BUILD } from '../debug-build';\nimport { WINDOW } from '../helpers';\n\n/**\n * When added, automatically creates sessions which allow you to track adoption and crashes (crash free rate) in your Releases in Sentry.\n * More information: https://docs.sentry.io/product/releases/health/\n *\n * Note: In order for session tracking to work, you need to set up Releases: https://docs.sentry.io/product/releases/\n */\nexport const browserSessionIntegration = defineIntegration(() => {\n  return {\n    name: 'BrowserSession',\n    setupOnce() {\n      if (typeof WINDOW.document === 'undefined') {\n        DEBUG_BUILD &&\n          debug.warn('Using the `browserSessionIntegration` in non-browser environments is not supported.');\n        return;\n      }\n\n      // The session duration for browser sessions does not track a meaningful\n      // concept that can be used as a metric.\n      // Automatically captured sessions are akin to page views, and thus we\n      // discard their duration.\n      startSession({ ignoreDuration: true });\n      captureSession();\n\n      // We want to create a session for every navigation as well\n      addHistoryInstrumentationHandler(({ from, to }) => {\n        // Don't create an additional session for the initial route or if the location did not change\n        if (from !== undefined && from !== to) {\n          startSession({ ignoreDuration: true });\n          captureSession();\n        }\n      });\n    },\n  };\n});\n"],"mappings":";;;;;AAKA;AACA;AACA;AACA;AACA;AACA;MACaA,yBAAA,GAA4BC,iBAAiB,CAAC,MAAM;EAC/D,OAAO;IACLC,IAAI,EAAE,gBAAgB;IACtBC,SAASA,CAAA,EAAG;MACV,IAAI,OAAOC,MAAM,CAACC,QAAA,KAAa,WAAW,EAAE;QAC1CC,WAAA,IACEC,KAAK,CAACC,IAAI,CAAC,qFAAqF,CAAC;QACnG;MACR;;MAEA;MACA;MACA;MACA;MACMC,YAAY,CAAC;QAAEC,cAAc,EAAE;MAAA,CAAM,CAAC;MACtCC,cAAc,EAAE;;MAEtB;MACMC,gCAAgC,CAAC,CAAC;QAAEC,IAAI;QAAEC;MAAA,CAAI,KAAK;QACzD;QACQ,IAAID,IAAA,KAASE,SAAA,IAAaF,IAAA,KAASC,EAAE,EAAE;UACrCL,YAAY,CAAC;YAAEC,cAAc,EAAE;UAAA,CAAM,CAAC;UACtCC,cAAc,EAAE;QAC1B;MACA,CAAO,CAAC;IACR;EACA,CAAG;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}