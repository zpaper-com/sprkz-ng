{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$(),\n  _s5 = $RefreshSig$(),\n  _s6 = $RefreshSig$(),\n  _s7 = $RefreshSig$(),\n  _s8 = $RefreshSig$(),\n  _s9 = $RefreshSig$(),\n  _s0 = $RefreshSig$();\nimport { useState, useEffect, useCallback, useContext } from 'react';\nimport { unleashService } from '../services/unleashService';\nimport { FeatureFlagsContext } from '../contexts/FeatureFlagsContext';\n\n// Hook for accessing feature flags\nexport const useFeatureFlags = () => {\n  _s();\n  const context = useContext(FeatureFlagsContext);\n  if (!context) {\n    throw new Error('useFeatureFlags must be used within a FeatureFlagsProvider');\n  }\n  return context;\n};\n\n// Hook for checking a single feature flag\n_s(useFeatureFlags, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const useFeatureFlag = (flagName, context) => {\n  _s2();\n  const [isEnabled, setIsEnabled] = useState(() => unleashService.isEnabled(flagName, context));\n  const [variant, setVariant] = useState(() => unleashService.getVariant(flagName, context));\n  useEffect(() => {\n    // Update when flags change\n    const updateFlag = () => {\n      setIsEnabled(unleashService.isEnabled(flagName, context));\n      setVariant(unleashService.getVariant(flagName, context));\n    };\n\n    // Subscribe to changes\n    const unsubscribe = unleashService.subscribe(updateFlag);\n\n    // Initial update\n    updateFlag();\n    return unsubscribe;\n  }, [flagName, context]);\n  return {\n    isEnabled,\n    variant\n  };\n};\n\n// Hook for checking multiple feature flags\n_s2(useFeatureFlag, \"KVpBLZPzEUjs2jckugxHGCYV8VI=\");\nexport const useFeatureFlags_Multiple = (flagNames, context) => {\n  _s3();\n  const [flags, setFlags] = useState(() => {\n    const initialFlags = {};\n    flagNames.forEach(flagName => {\n      initialFlags[flagName] = unleashService.isEnabled(flagName, context);\n    });\n    return initialFlags;\n  });\n  useEffect(() => {\n    const updateFlags = () => {\n      const updatedFlags = {};\n      flagNames.forEach(flagName => {\n        updatedFlags[flagName] = unleashService.isEnabled(flagName, context);\n      });\n      setFlags(updatedFlags);\n    };\n\n    // Subscribe to changes\n    const unsubscribe = unleashService.subscribe(updateFlags);\n\n    // Initial update\n    updateFlags();\n    return unsubscribe;\n  }, [flagNames, context]);\n  return flags;\n};\n\n// Hook for conditional feature rendering\n_s3(useFeatureFlags_Multiple, \"TQoZuJ5+6rkhYTWqRzcDvjGsw/4=\");\nexport const useConditionalFeature = (flagName, context) => {\n  _s4();\n  const {\n    isEnabled\n  } = useFeatureFlag(flagName, context);\n  const ConditionalComponent = useCallback(({\n    children,\n    fallback = null\n  }) => {\n    if (isEnabled) {\n      return React.createElement(React.Fragment, null, children);\n    }\n    return React.createElement(React.Fragment, null, fallback);\n  }, [isEnabled]);\n  return {\n    isEnabled,\n    ConditionalComponent\n  };\n};\n\n// Hook for feature flag variants with type safety\n_s4(useConditionalFeature, \"VMHuDPYn/YmtaSf+d5nshNFEAww=\", false, function () {\n  return [useFeatureFlag];\n});\nexport const useFeatureVariant = (flagName, defaultValue, context) => {\n  _s5();\n  const [variant, setVariant] = useState(() => {\n    var _flagVariant$payload$, _flagVariant$payload;\n    const flagVariant = unleashService.getVariant(flagName, context);\n    return (_flagVariant$payload$ = flagVariant === null || flagVariant === void 0 ? void 0 : (_flagVariant$payload = flagVariant.payload) === null || _flagVariant$payload === void 0 ? void 0 : _flagVariant$payload.value) !== null && _flagVariant$payload$ !== void 0 ? _flagVariant$payload$ : defaultValue;\n  });\n  useEffect(() => {\n    const updateVariant = () => {\n      var _flagVariant$payload$2, _flagVariant$payload2;\n      const flagVariant = unleashService.getVariant(flagName, context);\n      setVariant((_flagVariant$payload$2 = flagVariant === null || flagVariant === void 0 ? void 0 : (_flagVariant$payload2 = flagVariant.payload) === null || _flagVariant$payload2 === void 0 ? void 0 : _flagVariant$payload2.value) !== null && _flagVariant$payload$2 !== void 0 ? _flagVariant$payload$2 : defaultValue);\n    };\n    const unsubscribe = unleashService.subscribe(updateVariant);\n    updateVariant();\n    return unsubscribe;\n  }, [flagName, defaultValue, context]);\n  return variant;\n};\n\n// Hook for feature flag experimentation\n_s5(useFeatureVariant, \"OIUgcgAZkt2Xjn7mYrYAFBXZhCM=\");\nexport const useExperiment = (experimentName, variants, context) => {\n  _s6();\n  const [activeVariant, setActiveVariant] = useState(() => {\n    const variant = unleashService.getVariant(experimentName, context);\n    return variants[variant === null || variant === void 0 ? void 0 : variant.name] || variants.default || null;\n  });\n  useEffect(() => {\n    const updateExperiment = () => {\n      const variant = unleashService.getVariant(experimentName, context);\n      setActiveVariant(variants[variant === null || variant === void 0 ? void 0 : variant.name] || variants.default || null);\n    };\n    const unsubscribe = unleashService.subscribe(updateExperiment);\n    updateExperiment();\n    return unsubscribe;\n  }, [experimentName, variants, context]);\n  return activeVariant;\n};\n\n// Hook for gradual rollouts\n_s6(useExperiment, \"9oo/1efaPxf+xiv82raWdbHxr+k=\");\nexport const useGradualRollout = (flagName, userId, context) => {\n  _s7();\n  const rolloutContext = userId ? {\n    ...context,\n    userId\n  } : context;\n  const {\n    isEnabled\n  } = useFeatureFlag(flagName, rolloutContext);\n  return isEnabled;\n};\n\n// Hook for A/B testing\n_s7(useGradualRollout, \"YYWgjq5yCtQd91NMBzzX3ahz3GY=\", false, function () {\n  return [useFeatureFlag];\n});\nexport const useABTest = (experimentFlag, variants, context) => {\n  _s8();\n  const [activeVariant, setActiveVariant] = useState('A');\n  const [variantData, setVariantData] = useState(variants.A);\n  useEffect(() => {\n    const updateTest = () => {\n      const variant = unleashService.getVariant(experimentFlag, context);\n      const variantName = variant === null || variant === void 0 ? void 0 : variant.name;\n      if (variantName && variants[variantName]) {\n        setActiveVariant(variantName);\n        setVariantData(variants[variantName]);\n      } else {\n        // Default to A if variant not found\n        setActiveVariant('A');\n        setVariantData(variants.A);\n      }\n    };\n    const unsubscribe = unleashService.subscribe(updateTest);\n    updateTest();\n    return unsubscribe;\n  }, [experimentFlag, variants, context]);\n  return {\n    variant: activeVariant,\n    data: variantData\n  };\n};\n\n// Hook for debugging feature flags\n_s8(useABTest, \"G/Oo2bVT1eROtSNbFk9nQthkzLU=\");\nexport const useFeatureFlagsDebug = () => {\n  _s9();\n  const [debugInfo, setDebugInfo] = useState(() => unleashService.getStatus());\n  const [allFlags, setAllFlags] = useState(() => unleashService.getAllFlags());\n  useEffect(() => {\n    const updateDebugInfo = () => {\n      setDebugInfo(unleashService.getStatus());\n      setAllFlags(unleashService.getAllFlags());\n    };\n    const unsubscribe = unleashService.subscribe(updateDebugInfo);\n    updateDebugInfo();\n    return unsubscribe;\n  }, []);\n  const refreshFlags = useCallback(() => {\n    setDebugInfo(unleashService.getStatus());\n    setAllFlags(unleashService.getAllFlags());\n  }, []);\n  return {\n    status: debugInfo,\n    flags: allFlags,\n    refresh: refreshFlags\n  };\n};\n\n// Utility hook for performance-sensitive feature checks\n_s9(useFeatureFlagsDebug, \"N+0gv0CqhKmPSfCYRmQHB7M0y/s=\");\nexport const useOptimizedFeatureFlag = (flagName, context) => {\n  _s0();\n  // Use a ref to avoid unnecessary re-renders\n  const [isEnabled, setIsEnabled] = useState(() => unleashService.isEnabled(flagName, context));\n  useEffect(() => {\n    let timeoutId;\n    const updateFlag = () => {\n      // Debounce updates to avoid excessive re-renders\n      clearTimeout(timeoutId);\n      timeoutId = setTimeout(() => {\n        const newValue = unleashService.isEnabled(flagName, context);\n        setIsEnabled(current => current !== newValue ? newValue : current);\n      }, 100);\n    };\n    const unsubscribe = unleashService.subscribe(updateFlag);\n    updateFlag();\n    return () => {\n      clearTimeout(timeoutId);\n      unsubscribe();\n    };\n  }, [flagName, context]);\n  return isEnabled;\n};\n_s0(useOptimizedFeatureFlag, \"Upo3+G3LxR5pKV2wK7SOxRX7/bo=\");\nexport default useFeatureFlags;","map":{"version":3,"names":["useState","useEffect","useCallback","useContext","unleashService","FeatureFlagsContext","useFeatureFlags","_s","context","Error","useFeatureFlag","flagName","_s2","isEnabled","setIsEnabled","variant","setVariant","getVariant","updateFlag","unsubscribe","subscribe","useFeatureFlags_Multiple","flagNames","_s3","flags","setFlags","initialFlags","forEach","updateFlags","updatedFlags","useConditionalFeature","_s4","ConditionalComponent","children","fallback","React","createElement","Fragment","useFeatureVariant","defaultValue","_s5","_flagVariant$payload$","_flagVariant$payload","flagVariant","payload","value","updateVariant","_flagVariant$payload$2","_flagVariant$payload2","useExperiment","experimentName","variants","_s6","activeVariant","setActiveVariant","name","default","updateExperiment","useGradualRollout","userId","_s7","rolloutContext","useABTest","experimentFlag","_s8","variantData","setVariantData","A","updateTest","variantName","data","useFeatureFlagsDebug","_s9","debugInfo","setDebugInfo","getStatus","allFlags","setAllFlags","getAllFlags","updateDebugInfo","refreshFlags","status","refresh","useOptimizedFeatureFlag","_s0","timeoutId","clearTimeout","setTimeout","newValue","current"],"sources":["/home/shawnstorie/sprkz-ng/sprkz-pdf-forms/src/hooks/useFeatureFlags.ts"],"sourcesContent":["import { useState, useEffect, useCallback, useContext } from 'react';\nimport { unleashService, FeatureFlags, isFeatureEnabled, getFeatureVariant } from '../services/unleashService';\nimport { FeatureFlagsContext } from '../contexts/FeatureFlagsContext';\n\n// Hook for accessing feature flags\nexport const useFeatureFlags = () => {\n  const context = useContext(FeatureFlagsContext);\n  \n  if (!context) {\n    throw new Error('useFeatureFlags must be used within a FeatureFlagsProvider');\n  }\n  \n  return context;\n};\n\n// Hook for checking a single feature flag\nexport const useFeatureFlag = (flagName: keyof FeatureFlags, context?: Record<string, string>) => {\n  const [isEnabled, setIsEnabled] = useState<boolean>(() => \n    unleashService.isEnabled(flagName, context)\n  );\n  const [variant, setVariant] = useState<any>(() => \n    unleashService.getVariant(flagName, context)\n  );\n\n  useEffect(() => {\n    // Update when flags change\n    const updateFlag = () => {\n      setIsEnabled(unleashService.isEnabled(flagName, context));\n      setVariant(unleashService.getVariant(flagName, context));\n    };\n\n    // Subscribe to changes\n    const unsubscribe = unleashService.subscribe(updateFlag);\n\n    // Initial update\n    updateFlag();\n\n    return unsubscribe;\n  }, [flagName, context]);\n\n  return { isEnabled, variant };\n};\n\n// Hook for checking multiple feature flags\nexport const useFeatureFlags_Multiple = (flagNames: Array<keyof FeatureFlags>, context?: Record<string, string>) => {\n  const [flags, setFlags] = useState<Partial<FeatureFlags>>(() => {\n    const initialFlags = {} as Partial<FeatureFlags>;\n    flagNames.forEach(flagName => {\n      initialFlags[flagName] = unleashService.isEnabled(flagName, context);\n    });\n    return initialFlags;\n  });\n\n  useEffect(() => {\n    const updateFlags = () => {\n      const updatedFlags = {} as Partial<FeatureFlags>;\n      flagNames.forEach(flagName => {\n        updatedFlags[flagName] = unleashService.isEnabled(flagName, context);\n      });\n      setFlags(updatedFlags);\n    };\n\n    // Subscribe to changes\n    const unsubscribe = unleashService.subscribe(updateFlags);\n\n    // Initial update\n    updateFlags();\n\n    return unsubscribe;\n  }, [flagNames, context]);\n\n  return flags;\n};\n\n// Hook for conditional feature rendering\nexport const useConditionalFeature = (flagName: keyof FeatureFlags, context?: Record<string, string>) => {\n  const { isEnabled } = useFeatureFlag(flagName, context);\n\n  const ConditionalComponent = useCallback(({ children, fallback = null }: {\n    children: React.ReactNode;\n    fallback?: React.ReactNode;\n  }) => {\n    if (isEnabled) {\n      return React.createElement(React.Fragment, null, children);\n    }\n    return React.createElement(React.Fragment, null, fallback);\n  }, [isEnabled]);\n\n  return { isEnabled, ConditionalComponent };\n};\n\n// Hook for feature flag variants with type safety\nexport const useFeatureVariant = <T = any>(\n  flagName: keyof FeatureFlags, \n  defaultValue: T, \n  context?: Record<string, string>\n) => {\n  const [variant, setVariant] = useState<T>(() => {\n    const flagVariant = unleashService.getVariant(flagName, context);\n    return flagVariant?.payload?.value ?? defaultValue;\n  });\n\n  useEffect(() => {\n    const updateVariant = () => {\n      const flagVariant = unleashService.getVariant(flagName, context);\n      setVariant(flagVariant?.payload?.value ?? defaultValue);\n    };\n\n    const unsubscribe = unleashService.subscribe(updateVariant);\n    updateVariant();\n\n    return unsubscribe;\n  }, [flagName, defaultValue, context]);\n\n  return variant;\n};\n\n// Hook for feature flag experimentation\nexport const useExperiment = (\n  experimentName: keyof FeatureFlags,\n  variants: Record<string, any>,\n  context?: Record<string, string>\n) => {\n  const [activeVariant, setActiveVariant] = useState<any>(() => {\n    const variant = unleashService.getVariant(experimentName, context);\n    return variants[variant?.name] || variants.default || null;\n  });\n\n  useEffect(() => {\n    const updateExperiment = () => {\n      const variant = unleashService.getVariant(experimentName, context);\n      setActiveVariant(variants[variant?.name] || variants.default || null);\n    };\n\n    const unsubscribe = unleashService.subscribe(updateExperiment);\n    updateExperiment();\n\n    return unsubscribe;\n  }, [experimentName, variants, context]);\n\n  return activeVariant;\n};\n\n// Hook for gradual rollouts\nexport const useGradualRollout = (\n  flagName: keyof FeatureFlags,\n  userId?: string,\n  context?: Record<string, string>\n) => {\n  const rolloutContext = userId ? { ...context, userId } : context;\n  const { isEnabled } = useFeatureFlag(flagName, rolloutContext);\n  \n  return isEnabled;\n};\n\n// Hook for A/B testing\nexport const useABTest = (\n  experimentFlag: keyof FeatureFlags,\n  variants: { A: any; B: any },\n  context?: Record<string, string>\n) => {\n  const [activeVariant, setActiveVariant] = useState<'A' | 'B'>('A');\n  const [variantData, setVariantData] = useState<any>(variants.A);\n\n  useEffect(() => {\n    const updateTest = () => {\n      const variant = unleashService.getVariant(experimentFlag, context);\n      const variantName = variant?.name as 'A' | 'B';\n      \n      if (variantName && variants[variantName]) {\n        setActiveVariant(variantName);\n        setVariantData(variants[variantName]);\n      } else {\n        // Default to A if variant not found\n        setActiveVariant('A');\n        setVariantData(variants.A);\n      }\n    };\n\n    const unsubscribe = unleashService.subscribe(updateTest);\n    updateTest();\n\n    return unsubscribe;\n  }, [experimentFlag, variants, context]);\n\n  return { variant: activeVariant, data: variantData };\n};\n\n// Hook for debugging feature flags\nexport const useFeatureFlagsDebug = () => {\n  const [debugInfo, setDebugInfo] = useState(() => unleashService.getStatus());\n  const [allFlags, setAllFlags] = useState<FeatureFlags>(() => unleashService.getAllFlags());\n\n  useEffect(() => {\n    const updateDebugInfo = () => {\n      setDebugInfo(unleashService.getStatus());\n      setAllFlags(unleashService.getAllFlags());\n    };\n\n    const unsubscribe = unleashService.subscribe(updateDebugInfo);\n    updateDebugInfo();\n\n    return unsubscribe;\n  }, []);\n\n  const refreshFlags = useCallback(() => {\n    setDebugInfo(unleashService.getStatus());\n    setAllFlags(unleashService.getAllFlags());\n  }, []);\n\n  return {\n    status: debugInfo,\n    flags: allFlags,\n    refresh: refreshFlags\n  };\n};\n\n// Utility hook for performance-sensitive feature checks\nexport const useOptimizedFeatureFlag = (flagName: keyof FeatureFlags, context?: Record<string, string>) => {\n  // Use a ref to avoid unnecessary re-renders\n  const [isEnabled, setIsEnabled] = useState<boolean>(() => \n    unleashService.isEnabled(flagName, context)\n  );\n\n  useEffect(() => {\n    let timeoutId: NodeJS.Timeout;\n\n    const updateFlag = () => {\n      // Debounce updates to avoid excessive re-renders\n      clearTimeout(timeoutId);\n      timeoutId = setTimeout(() => {\n        const newValue = unleashService.isEnabled(flagName, context);\n        setIsEnabled(current => current !== newValue ? newValue : current);\n      }, 100);\n    };\n\n    const unsubscribe = unleashService.subscribe(updateFlag);\n    updateFlag();\n\n    return () => {\n      clearTimeout(timeoutId);\n      unsubscribe();\n    };\n  }, [flagName, context]);\n\n  return isEnabled;\n};\n\nexport default useFeatureFlags;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}