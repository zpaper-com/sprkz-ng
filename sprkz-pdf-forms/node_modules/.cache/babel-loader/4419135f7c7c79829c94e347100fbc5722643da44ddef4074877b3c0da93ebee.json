{"ast":null,"code":"import { dsnToString } from './utils/dsn.js';\nimport { createEnvelope } from './utils/envelope.js';\n\n/**\n * Create envelope from check in item.\n */\nfunction createCheckInEnvelope(checkIn, dynamicSamplingContext, metadata, tunnel, dsn) {\n  const headers = {\n    sent_at: new Date().toISOString()\n  };\n  if (metadata?.sdk) {\n    headers.sdk = {\n      name: metadata.sdk.name,\n      version: metadata.sdk.version\n    };\n  }\n  if (!!tunnel && !!dsn) {\n    headers.dsn = dsnToString(dsn);\n  }\n  if (dynamicSamplingContext) {\n    headers.trace = dynamicSamplingContext;\n  }\n  const item = createCheckInEnvelopeItem(checkIn);\n  return createEnvelope(headers, [item]);\n}\nfunction createCheckInEnvelopeItem(checkIn) {\n  const checkInHeaders = {\n    type: 'check_in'\n  };\n  return [checkInHeaders, checkIn];\n}\nexport { createCheckInEnvelope };","map":{"version":3,"names":["createCheckInEnvelope","checkIn","dynamicSamplingContext","metadata","tunnel","dsn","headers","sent_at","Date","toISOString","sdk","name","version","dsnToString","trace","item","createCheckInEnvelopeItem","createEnvelope","checkInHeaders","type"],"sources":["/home/shawnstorie/sprkz-ng/sprkz-pdf-forms/node_modules/@sentry/core/src/checkin.ts"],"sourcesContent":["import type { SerializedCheckIn } from './types-hoist/checkin';\nimport type { DsnComponents } from './types-hoist/dsn';\nimport type { CheckInEnvelope, CheckInItem, DynamicSamplingContext } from './types-hoist/envelope';\nimport type { SdkMetadata } from './types-hoist/sdkmetadata';\nimport { dsnToString } from './utils/dsn';\nimport { createEnvelope } from './utils/envelope';\n\n/**\n * Create envelope from check in item.\n */\nexport function createCheckInEnvelope(\n  checkIn: SerializedCheckIn,\n  dynamicSamplingContext?: Partial<DynamicSamplingContext>,\n  metadata?: SdkMetadata,\n  tunnel?: string,\n  dsn?: DsnComponents,\n): CheckInEnvelope {\n  const headers: CheckInEnvelope[0] = {\n    sent_at: new Date().toISOString(),\n  };\n\n  if (metadata?.sdk) {\n    headers.sdk = {\n      name: metadata.sdk.name,\n      version: metadata.sdk.version,\n    };\n  }\n\n  if (!!tunnel && !!dsn) {\n    headers.dsn = dsnToString(dsn);\n  }\n\n  if (dynamicSamplingContext) {\n    headers.trace = dynamicSamplingContext as DynamicSamplingContext;\n  }\n\n  const item = createCheckInEnvelopeItem(checkIn);\n  return createEnvelope<CheckInEnvelope>(headers, [item]);\n}\n\nfunction createCheckInEnvelopeItem(checkIn: SerializedCheckIn): CheckInItem {\n  const checkInHeaders: CheckInItem[0] = {\n    type: 'check_in',\n  };\n  return [checkInHeaders, checkIn];\n}\n"],"mappings":";;;AAOA;AACA;AACA;AACO,SAASA,qBAAqBA,CACnCC,OAAO,EACPC,sBAAsB,EACtBC,QAAQ,EACRC,MAAM,EACNC,GAAG,EACc;EACjB,MAAMC,OAAO,GAAuB;IAClCC,OAAO,EAAE,IAAIC,IAAI,EAAE,CAACC,WAAW;EACnC,CAAG;EAED,IAAIN,QAAQ,EAAEO,GAAG,EAAE;IACjBJ,OAAO,CAACI,GAAA,GAAM;MACZC,IAAI,EAAER,QAAQ,CAACO,GAAG,CAACC,IAAI;MACvBC,OAAO,EAAET,QAAQ,CAACO,GAAG,CAACE;IAC5B,CAAK;EACL;EAEE,IAAI,CAAC,CAACR,MAAA,IAAU,CAAC,CAACC,GAAG,EAAE;IACrBC,OAAO,CAACD,GAAA,GAAMQ,WAAW,CAACR,GAAG,CAAC;EAClC;EAEE,IAAIH,sBAAsB,EAAE;IAC1BI,OAAO,CAACQ,KAAA,GAAQZ,sBAAA;EACpB;EAEE,MAAMa,IAAA,GAAOC,yBAAyB,CAACf,OAAO,CAAC;EAC/C,OAAOgB,cAAc,CAAkBX,OAAO,EAAE,CAACS,IAAI,CAAC,CAAC;AACzD;AAEA,SAASC,yBAAyBA,CAACf,OAAO,EAAkC;EAC1E,MAAMiB,cAAc,GAAmB;IACrCC,IAAI,EAAE;EACV,CAAG;EACD,OAAO,CAACD,cAAc,EAAEjB,OAAO,CAAC;AAClC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}