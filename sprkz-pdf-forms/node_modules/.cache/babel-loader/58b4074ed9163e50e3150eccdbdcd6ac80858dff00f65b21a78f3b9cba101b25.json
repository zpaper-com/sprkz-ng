{"ast":null,"code":"/* eslint-disable jsdoc/require-jsdoc */\n/*\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nclass LayoutShiftManager {\n  constructor() {\n    LayoutShiftManager.prototype.__init.call(this);\n    LayoutShiftManager.prototype.__init2.call(this);\n  }\n  // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n\n  // eslint-disable-next-line @sentry-internal/sdk/no-class-field-initializers, @typescript-eslint/explicit-member-accessibility\n  __init() {\n    this._sessionValue = 0;\n  }\n  // eslint-disable-next-line @sentry-internal/sdk/no-class-field-initializers, @typescript-eslint/explicit-member-accessibility\n  __init2() {\n    this._sessionEntries = [];\n  }\n\n  // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n  _processEntry(entry) {\n    // Only count layout shifts without recent user input.\n    if (entry.hadRecentInput) return;\n    const firstSessionEntry = this._sessionEntries[0];\n    // This previously used `this._sessionEntries.at(-1)` but that is ES2022. We support ES2021 and earlier.\n    const lastSessionEntry = this._sessionEntries[this._sessionEntries.length - 1];\n\n    // If the entry occurred less than 1 second after the previous entry\n    // and less than 5 seconds after the first entry in the session,\n    // include the entry in the current session. Otherwise, start a new\n    // session.\n    if (this._sessionValue && firstSessionEntry && lastSessionEntry && entry.startTime - lastSessionEntry.startTime < 1000 && entry.startTime - firstSessionEntry.startTime < 5000) {\n      this._sessionValue += entry.value;\n      this._sessionEntries.push(entry);\n    } else {\n      this._sessionValue = entry.value;\n      this._sessionEntries = [entry];\n    }\n    this._onAfterProcessingUnexpectedShift?.(entry);\n  }\n}\nexport { LayoutShiftManager };","map":{"version":3,"names":["LayoutShiftManager","constructor","prototype","__init","call","__init2","_sessionValue","_sessionEntries","_processEntry","entry","hadRecentInput","firstSessionEntry","lastSessionEntry","length","startTime","value","push","_onAfterProcessingUnexpectedShift"],"sources":["/home/shawnstorie/sprkz-ng/sprkz-pdf-forms/node_modules/@sentry-internal/browser-utils/src/metrics/web-vitals/lib/LayoutShiftManager.ts"],"sourcesContent":["/* eslint-disable jsdoc/require-jsdoc */\n/*\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class LayoutShiftManager {\n  // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n  _onAfterProcessingUnexpectedShift?: (entry: LayoutShift) => void;\n\n  // eslint-disable-next-line @sentry-internal/sdk/no-class-field-initializers, @typescript-eslint/explicit-member-accessibility\n  _sessionValue = 0;\n  // eslint-disable-next-line @sentry-internal/sdk/no-class-field-initializers, @typescript-eslint/explicit-member-accessibility\n  _sessionEntries: LayoutShift[] = [];\n\n  // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n  _processEntry(entry: LayoutShift) {\n    // Only count layout shifts without recent user input.\n    if (entry.hadRecentInput) return;\n\n    const firstSessionEntry = this._sessionEntries[0];\n    // This previously used `this._sessionEntries.at(-1)` but that is ES2022. We support ES2021 and earlier.\n    const lastSessionEntry = this._sessionEntries[this._sessionEntries.length - 1];\n\n    // If the entry occurred less than 1 second after the previous entry\n    // and less than 5 seconds after the first entry in the session,\n    // include the entry in the current session. Otherwise, start a new\n    // session.\n    if (\n      this._sessionValue &&\n      firstSessionEntry &&\n      lastSessionEntry &&\n      entry.startTime - lastSessionEntry.startTime < 1000 &&\n      entry.startTime - firstSessionEntry.startTime < 5000\n    ) {\n      this._sessionValue += entry.value;\n      this._sessionEntries.push(entry);\n    } else {\n      this._sessionValue = entry.value;\n      this._sessionEntries = [entry];\n    }\n\n    this._onAfterProcessingUnexpectedShift?.(entry);\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO,MAAMA,kBAAA,CAAmB;EAAAC,YAAA;IAAAD,kBAAA,CAAAE,SAAA,CAAAC,MAAA,CAAAC,IAAA;IAAAJ,kBAAA,CAAAE,SAAA,CAAAG,OAAA,CAAAD,IAAA;EAAA;EAChC;;EAGA;EACAD,OAAA;IAAA,KAAEG,aAAA,GAAgB;EAAA;EAClB;EACAD,QAAA;IAAA,KAAEE,eAAe,GAAkB;EAAC;;EAEpC;EACEC,aAAaA,CAACC,KAAK,EAAe;IACpC;IACI,IAAIA,KAAK,CAACC,cAAc,EAAE;IAE1B,MAAMC,iBAAA,GAAoB,IAAI,CAACJ,eAAe,CAAC,CAAC,CAAC;IACrD;IACI,MAAMK,gBAAA,GAAmB,IAAI,CAACL,eAAe,CAAC,IAAI,CAACA,eAAe,CAACM,MAAA,GAAS,CAAC,CAAC;;IAElF;IACA;IACA;IACA;IACI,IACE,IAAI,CAACP,aAAA,IACLK,iBAAA,IACAC,gBAAA,IACAH,KAAK,CAACK,SAAA,GAAYF,gBAAgB,CAACE,SAAA,GAAY,QAC/CL,KAAK,CAACK,SAAA,GAAYH,iBAAiB,CAACG,SAAA,GAAY,MAChD;MACA,IAAI,CAACR,aAAA,IAAiBG,KAAK,CAACM,KAAK;MACjC,IAAI,CAACR,eAAe,CAACS,IAAI,CAACP,KAAK,CAAC;IACtC,OAAW;MACL,IAAI,CAACH,aAAA,GAAgBG,KAAK,CAACM,KAAK;MAChC,IAAI,CAACR,eAAA,GAAkB,CAACE,KAAK,CAAC;IACpC;IAEI,IAAI,CAACQ,iCAAiC,GAAGR,KAAK,CAAC;EACnD;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}