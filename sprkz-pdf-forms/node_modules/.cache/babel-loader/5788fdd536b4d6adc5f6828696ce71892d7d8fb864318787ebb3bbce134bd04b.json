{"ast":null,"code":"import { SDK_VERSION } from './version.js';\n\n/**\n * A builder for the SDK metadata in the options for the SDK initialization.\n *\n * Note: This function is identical to `buildMetadata` in Remix and NextJS and SvelteKit.\n * We don't extract it for bundle size reasons.\n * @see https://github.com/getsentry/sentry-javascript/pull/7404\n * @see https://github.com/getsentry/sentry-javascript/pull/4196\n *\n * If you make changes to this function consider updating the others as well.\n *\n * @param options SDK options object that gets mutated\n * @param names list of package names\n */\nfunction applySdkMetadata(options, name, names = [name], source = 'npm') {\n  const metadata = options._metadata || {};\n  if (!metadata.sdk) {\n    metadata.sdk = {\n      name: `sentry.javascript.${name}`,\n      packages: names.map(name => ({\n        name: `${source}:@sentry/${name}`,\n        version: SDK_VERSION\n      })),\n      version: SDK_VERSION\n    };\n  }\n  options._metadata = metadata;\n}\nexport { applySdkMetadata };","map":{"version":3,"names":["applySdkMetadata","options","name","names","source","metadata","_metadata","sdk","packages","map","version","SDK_VERSION"],"sources":["/home/shawnstorie/sprkz-ng/sprkz-pdf-forms/node_modules/@sentry/core/src/utils/sdkMetadata.ts"],"sourcesContent":["import type { Options } from '../types-hoist/options';\nimport { SDK_VERSION } from '../utils/version';\n\n/**\n * A builder for the SDK metadata in the options for the SDK initialization.\n *\n * Note: This function is identical to `buildMetadata` in Remix and NextJS and SvelteKit.\n * We don't extract it for bundle size reasons.\n * @see https://github.com/getsentry/sentry-javascript/pull/7404\n * @see https://github.com/getsentry/sentry-javascript/pull/4196\n *\n * If you make changes to this function consider updating the others as well.\n *\n * @param options SDK options object that gets mutated\n * @param names list of package names\n */\nexport function applySdkMetadata(options: Options, name: string, names = [name], source = 'npm'): void {\n  const metadata = options._metadata || {};\n\n  if (!metadata.sdk) {\n    metadata.sdk = {\n      name: `sentry.javascript.${name}`,\n      packages: names.map(name => ({\n        name: `${source}:@sentry/${name}`,\n        version: SDK_VERSION,\n      })),\n      version: SDK_VERSION,\n    };\n  }\n\n  options._metadata = metadata;\n}\n"],"mappings":";;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASA,gBAAgBA,CAACC,OAAO,EAAWC,IAAI,EAAUC,KAAA,GAAQ,CAACD,IAAI,CAAC,EAAEE,MAAA,GAAS,KAAK,EAAQ;EACrG,MAAMC,QAAA,GAAWJ,OAAO,CAACK,SAAA,IAAa,EAAE;EAExC,IAAI,CAACD,QAAQ,CAACE,GAAG,EAAE;IACjBF,QAAQ,CAACE,GAAA,GAAM;MACbL,IAAI,EAAE,qBAAqBA,IAAI,EAAC;MACAM,QAAA,EAAAL,KAAA,CAAAM,GAAA,CAAAP,IAAA;QACAA,IAAA,KAAAE,MAAA,YAAAF,IAAA;QACAQ,OAAA,EAAAC;MACA;MACAD,OAAA,EAAAC;IACA;EACA;EAEAV,OAAA,CAAAK,SAAA,GAAAD,QAAA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}