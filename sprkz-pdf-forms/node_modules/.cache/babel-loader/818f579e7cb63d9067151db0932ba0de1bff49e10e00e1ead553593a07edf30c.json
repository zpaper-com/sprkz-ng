{"ast":null,"code":"export { feedbackAsyncIntegration } from './feedbackAsync.js';\nexport { feedbackSyncIntegration as feedbackIntegration, feedbackSyncIntegration } from './feedbackSync.js';\nimport * as log from './log.js';\nexport { log as logger };\nexport { SDK_VERSION, SEMANTIC_ATTRIBUTE_SENTRY_OP, SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE, SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, Scope, addBreadcrumb, addEventProcessor, addIntegration, captureConsoleIntegration, captureEvent, captureException, captureFeedback, captureMessage, captureSession, close, consoleLoggingIntegration, continueTrace, createTransport, dedupeIntegration, endSession, eventFiltersIntegration, extraErrorDataIntegration, featureFlagsIntegration, flush, functionToStringIntegration, getActiveSpan, getClient, getCurrentScope, getGlobalScope, getIsolationScope, getRootSpan, getSpanDescendants, getSpanStatusFromHttpCode, getTraceData, inboundFiltersIntegration, instrumentSupabaseClient, isEnabled, isInitialized, lastEventId, makeMultiplexedTransport, moduleMetadataIntegration, parameterize, registerSpanErrorInstrumentation, rewriteFramesIntegration, setContext, setCurrentClient, setExtra, setExtras, setHttpStatus, setMeasurement, setTag, setTags, setUser, spanToBaggageHeader, spanToJSON, spanToTraceHeader, startInactiveSpan, startNewTrace, startSession, startSpan, startSpanManual, supabaseIntegration, suppressTracing, thirdPartyErrorFilterIntegration, updateSpanName, withActiveSpan, withIsolationScope, withScope, zodErrorsIntegration } from '@sentry/core';\nexport { WINDOW } from './helpers.js';\nexport { BrowserClient } from './client.js';\nexport { makeFetchTransport } from './transports/fetch.js';\nexport { chromeStackLineParser, defaultStackLineParsers, defaultStackParser, geckoStackLineParser, opera10StackLineParser, opera11StackLineParser, winjsStackLineParser } from './stack-parsers.js';\nexport { eventFromException, eventFromMessage, exceptionFromError } from './eventbuilder.js';\nexport { createUserFeedbackEnvelope } from './userfeedback.js';\nexport { forceLoad, getDefaultIntegrations, init, onLoad } from './sdk.js';\nexport { showReportDialog } from './report-dialog.js';\nexport { breadcrumbsIntegration } from './integrations/breadcrumbs.js';\nexport { globalHandlersIntegration } from './integrations/globalhandlers.js';\nexport { httpContextIntegration } from './integrations/httpcontext.js';\nexport { linkedErrorsIntegration } from './integrations/linkederrors.js';\nexport { browserApiErrorsIntegration } from './integrations/browserapierrors.js';\nexport { lazyLoadIntegration } from './utils/lazyLoadIntegration.js';\nexport { reportingObserverIntegration } from './integrations/reportingobserver.js';\nexport { httpClientIntegration } from './integrations/httpclient.js';\nexport { contextLinesIntegration } from './integrations/contextlines.js';\nexport { graphqlClientIntegration } from './integrations/graphqlClient.js';\nexport { getReplay, replayIntegration } from '@sentry-internal/replay';\nexport { replayCanvasIntegration } from '@sentry-internal/replay-canvas';\nexport { getFeedback, sendFeedback } from '@sentry-internal/feedback';\nexport { defaultRequestInstrumentationOptions, instrumentOutgoingRequests } from './tracing/request.js';\nexport { browserTracingIntegration, startBrowserTracingNavigationSpan, startBrowserTracingPageLoadSpan } from './tracing/browserTracingIntegration.js';\nexport { makeBrowserOfflineTransport } from './transports/offline.js';\nexport { browserProfilingIntegration } from './profiling/integration.js';\nexport { spotlightBrowserIntegration } from './integrations/spotlight.js';\nexport { browserSessionIntegration } from './integrations/browsersession.js';\nexport { buildLaunchDarklyFlagUsedHandler, launchDarklyIntegration } from './integrations/featureFlags/launchdarkly/integration.js';\nexport { OpenFeatureIntegrationHook, openFeatureIntegration } from './integrations/featureFlags/openfeature/integration.js';\nexport { unleashIntegration } from './integrations/featureFlags/unleash/integration.js';\nexport { statsigIntegration } from './integrations/featureFlags/statsig/integration.js';\nexport { diagnoseSdkConnectivity } from './diagnose-sdk.js';\nexport { registerWebWorker, webWorkerIntegration } from './integrations/webWorker.js';\n//# sourceMappingURL=index.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}