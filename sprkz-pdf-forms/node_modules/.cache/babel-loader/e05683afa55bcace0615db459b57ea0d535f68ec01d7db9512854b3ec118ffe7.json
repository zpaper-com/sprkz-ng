{"ast":null,"code":"import { DEBUG_BUILD } from '../debug-build.js';\nimport { defineIntegration } from '../integration.js';\nimport { debug } from '../utils/debug-logger.js';\nimport { getPossibleEventMessages } from '../utils/eventUtils.js';\nimport { getEventDescription } from '../utils/misc.js';\nimport { stringMatchesSomePattern } from '../utils/string.js';\n\n// \"Script error.\" is hard coded into browsers for errors that it can't read.\n// this is the result of a script being pulled in from an external domain and CORS.\nconst DEFAULT_IGNORE_ERRORS = [/^Script error\\.?$/, /^Javascript error: Script error\\.? on line 0$/, /^ResizeObserver loop completed with undelivered notifications.$/,\n// The browser logs this when a ResizeObserver handler takes a bit longer. Usually this is not an actual issue though. It indicates slowness.\n/^Cannot redefine property: googletag$/,\n// This is thrown when google tag manager is used in combination with an ad blocker\n/^Can't find variable: gmo$/,\n// Error from Google Search App https://issuetracker.google.com/issues/396043331\n/^undefined is not an object \\(evaluating 'a\\.[A-Z]'\\)$/,\n// Random error that happens but not actionable or noticeable to end-users.\n'can\\'t redefine non-configurable property \"solana\"',\n// Probably a browser extension or custom browser (Brave) throwing this error\n\"vv().getRestrictions is not a function. (In 'vv().getRestrictions(1,a)', 'vv().getRestrictions' is undefined)\",\n// Error thrown by GTM, seemingly not affecting end-users\n\"Can't find variable: _AutofillCallbackHandler\",\n// Unactionable error in instagram webview https://developers.facebook.com/community/threads/320013549791141/\n/^Non-Error promise rejection captured with value: Object Not Found Matching Id:\\d+, MethodName:simulateEvent, ParamCount:\\d+$/,\n// unactionable error from CEFSharp, a .NET library that embeds chromium in .NET apps\n/^Java exception was raised during method invocation$/ // error from Facebook Mobile browser (https://github.com/getsentry/sentry-javascript/issues/15065)\n];\n\n/** Options for the EventFilters integration */\n\nconst INTEGRATION_NAME = 'EventFilters';\n\n/**\n * An integration that filters out events (errors and transactions) based on:\n *\n * - (Errors) A curated list of known low-value or irrelevant errors (see {@link DEFAULT_IGNORE_ERRORS})\n * - (Errors) A list of error messages or urls/filenames passed in via\n *   - Top level Sentry.init options (`ignoreErrors`, `denyUrls`, `allowUrls`)\n *   - The same options passed to the integration directly via @param options\n * - (Transactions/Spans) A list of root span (transaction) names passed in via\n *   - Top level Sentry.init option (`ignoreTransactions`)\n *   - The same option passed to the integration directly via @param options\n *\n * Events filtered by this integration will not be sent to Sentry.\n */\nconst eventFiltersIntegration = defineIntegration((options = {}) => {\n  let mergedOptions;\n  return {\n    name: INTEGRATION_NAME,\n    setup(client) {\n      const clientOptions = client.getOptions();\n      mergedOptions = _mergeOptions(options, clientOptions);\n    },\n    processEvent(event, _hint, client) {\n      if (!mergedOptions) {\n        const clientOptions = client.getOptions();\n        mergedOptions = _mergeOptions(options, clientOptions);\n      }\n      return _shouldDropEvent(event, mergedOptions) ? null : event;\n    }\n  };\n});\n\n/**\n * An integration that filters out events (errors and transactions) based on:\n *\n * - (Errors) A curated list of known low-value or irrelevant errors (see {@link DEFAULT_IGNORE_ERRORS})\n * - (Errors) A list of error messages or urls/filenames passed in via\n *   - Top level Sentry.init options (`ignoreErrors`, `denyUrls`, `allowUrls`)\n *   - The same options passed to the integration directly via @param options\n * - (Transactions/Spans) A list of root span (transaction) names passed in via\n *   - Top level Sentry.init option (`ignoreTransactions`)\n *   - The same option passed to the integration directly via @param options\n *\n * Events filtered by this integration will not be sent to Sentry.\n *\n * @deprecated this integration was renamed and will be removed in a future major version.\n * Use `eventFiltersIntegration` instead.\n */\nconst inboundFiltersIntegration = defineIntegration((options = {}) => {\n  return {\n    ...eventFiltersIntegration(options),\n    name: 'InboundFilters'\n  };\n});\nfunction _mergeOptions(internalOptions = {}, clientOptions = {}) {\n  return {\n    allowUrls: [...(internalOptions.allowUrls || []), ...(clientOptions.allowUrls || [])],\n    denyUrls: [...(internalOptions.denyUrls || []), ...(clientOptions.denyUrls || [])],\n    ignoreErrors: [...(internalOptions.ignoreErrors || []), ...(clientOptions.ignoreErrors || []), ...(internalOptions.disableErrorDefaults ? [] : DEFAULT_IGNORE_ERRORS)],\n    ignoreTransactions: [...(internalOptions.ignoreTransactions || []), ...(clientOptions.ignoreTransactions || [])]\n  };\n}\nfunction _shouldDropEvent(event, options) {\n  if (!event.type) {\n    // Filter errors\n    if (_isIgnoredError(event, options.ignoreErrors)) {\n      DEBUG_BUILD && debug.warn(`Event dropped due to being matched by \\`ignoreErrors\\` option.\\nEvent: ${getEventDescription(event)}`);\n      return true;\n    }\n    if (_isUselessError(event)) {\n      DEBUG_BUILD && debug.warn(`Event dropped due to not having an error message, error type or stacktrace.\\nEvent: ${getEventDescription(event)}`);\n      return true;\n    }\n    if (_isDeniedUrl(event, options.denyUrls)) {\n      DEBUG_BUILD && debug.warn(`Event dropped due to being matched by \\`denyUrls\\` option.\\nEvent: ${getEventDescription(event)}.\\nUrl: ${_getEventFilterUrl(event)}`);\n      return true;\n    }\n    if (!_isAllowedUrl(event, options.allowUrls)) {\n      DEBUG_BUILD && debug.warn(`Event dropped due to not being matched by \\`allowUrls\\` option.\\nEvent: ${getEventDescription(event)}.\\nUrl: ${_getEventFilterUrl(event)}`);\n      return true;\n    }\n  } else if (event.type === 'transaction') {\n    // Filter transactions\n\n    if (_isIgnoredTransaction(event, options.ignoreTransactions)) {\n      DEBUG_BUILD && debug.warn(`Event dropped due to being matched by \\`ignoreTransactions\\` option.\\nEvent: ${getEventDescription(event)}`);\n      return true;\n    }\n  }\n  return false;\n}\nfunction _isIgnoredError(event, ignoreErrors) {\n  if (!ignoreErrors?.length) {\n    return false;\n  }\n  return getPossibleEventMessages(event).some(message => stringMatchesSomePattern(message, ignoreErrors));\n}\nfunction _isIgnoredTransaction(event, ignoreTransactions) {\n  if (!ignoreTransactions?.length) {\n    return false;\n  }\n  const name = event.transaction;\n  return name ? stringMatchesSomePattern(name, ignoreTransactions) : false;\n}\nfunction _isDeniedUrl(event, denyUrls) {\n  if (!denyUrls?.length) {\n    return false;\n  }\n  const url = _getEventFilterUrl(event);\n  return !url ? false : stringMatchesSomePattern(url, denyUrls);\n}\nfunction _isAllowedUrl(event, allowUrls) {\n  if (!allowUrls?.length) {\n    return true;\n  }\n  const url = _getEventFilterUrl(event);\n  return !url ? true : stringMatchesSomePattern(url, allowUrls);\n}\nfunction _getLastValidUrl(frames = []) {\n  for (let i = frames.length - 1; i >= 0; i--) {\n    const frame = frames[i];\n    if (frame && frame.filename !== '<anonymous>' && frame.filename !== '[native code]') {\n      return frame.filename || null;\n    }\n  }\n  return null;\n}\nfunction _getEventFilterUrl(event) {\n  try {\n    // If there are linked exceptions or exception aggregates we only want to match against the top frame of the \"root\" (the main exception)\n    // The root always comes last in linked exceptions\n    const rootException = [...(event.exception?.values ?? [])].reverse().find(value => value.mechanism?.parent_id === undefined && value.stacktrace?.frames?.length);\n    const frames = rootException?.stacktrace?.frames;\n    return frames ? _getLastValidUrl(frames) : null;\n  } catch {\n    DEBUG_BUILD && debug.error(`Cannot extract url for event ${getEventDescription(event)}`);\n    return null;\n  }\n}\nfunction _isUselessError(event) {\n  // We only want to consider events for dropping that actually have recorded exception values.\n  if (!event.exception?.values?.length) {\n    return false;\n  }\n  return (\n    // No top-level message\n    !event.message &&\n    // There are no exception values that have a stacktrace, a non-generic-Error type or value\n    !event.exception.values.some(value => value.stacktrace || value.type && value.type !== 'Error' || value.value)\n  );\n}\nexport { eventFiltersIntegration, inboundFiltersIntegration };","map":{"version":3,"names":["DEFAULT_IGNORE_ERRORS","INTEGRATION_NAME","eventFiltersIntegration","defineIntegration","options","mergedOptions","name","setup","client","clientOptions","getOptions","_mergeOptions","processEvent","event","_hint","_shouldDropEvent","inboundFiltersIntegration","internalOptions","allowUrls","denyUrls","ignoreErrors","disableErrorDefaults","ignoreTransactions","type","_isIgnoredError","DEBUG_BUILD","debug","warn","getEventDescription","_isUselessError","_isDeniedUrl","_getEventFilterUrl","_isAllowedUrl","_isIgnoredTransaction","length","getPossibleEventMessages","some","message","stringMatchesSomePattern","transaction","url","_getLastValidUrl","frames","i","frame","filename","rootException","exception","values","reverse","find","value","mechanism","parent_id","undefined","stacktrace","error"],"sources":["/home/shawnstorie/sprkz-ng/sprkz-pdf-forms/node_modules/@sentry/core/src/integrations/eventFilters.ts"],"sourcesContent":["import { DEBUG_BUILD } from '../debug-build';\nimport { defineIntegration } from '../integration';\nimport type { Event } from '../types-hoist/event';\nimport type { IntegrationFn } from '../types-hoist/integration';\nimport type { StackFrame } from '../types-hoist/stackframe';\nimport { debug } from '../utils/debug-logger';\nimport { getPossibleEventMessages } from '../utils/eventUtils';\nimport { getEventDescription } from '../utils/misc';\nimport { stringMatchesSomePattern } from '../utils/string';\n\n// \"Script error.\" is hard coded into browsers for errors that it can't read.\n// this is the result of a script being pulled in from an external domain and CORS.\nconst DEFAULT_IGNORE_ERRORS = [\n  /^Script error\\.?$/,\n  /^Javascript error: Script error\\.? on line 0$/,\n  /^ResizeObserver loop completed with undelivered notifications.$/, // The browser logs this when a ResizeObserver handler takes a bit longer. Usually this is not an actual issue though. It indicates slowness.\n  /^Cannot redefine property: googletag$/, // This is thrown when google tag manager is used in combination with an ad blocker\n  /^Can't find variable: gmo$/, // Error from Google Search App https://issuetracker.google.com/issues/396043331\n  /^undefined is not an object \\(evaluating 'a\\.[A-Z]'\\)$/, // Random error that happens but not actionable or noticeable to end-users.\n  'can\\'t redefine non-configurable property \"solana\"', // Probably a browser extension or custom browser (Brave) throwing this error\n  \"vv().getRestrictions is not a function. (In 'vv().getRestrictions(1,a)', 'vv().getRestrictions' is undefined)\", // Error thrown by GTM, seemingly not affecting end-users\n  \"Can't find variable: _AutofillCallbackHandler\", // Unactionable error in instagram webview https://developers.facebook.com/community/threads/320013549791141/\n  /^Non-Error promise rejection captured with value: Object Not Found Matching Id:\\d+, MethodName:simulateEvent, ParamCount:\\d+$/, // unactionable error from CEFSharp, a .NET library that embeds chromium in .NET apps\n  /^Java exception was raised during method invocation$/, // error from Facebook Mobile browser (https://github.com/getsentry/sentry-javascript/issues/15065)\n];\n\n/** Options for the EventFilters integration */\nexport interface EventFiltersOptions {\n  allowUrls: Array<string | RegExp>;\n  denyUrls: Array<string | RegExp>;\n  ignoreErrors: Array<string | RegExp>;\n  ignoreTransactions: Array<string | RegExp>;\n  ignoreInternal: boolean;\n  disableErrorDefaults: boolean;\n}\n\nconst INTEGRATION_NAME = 'EventFilters';\n\n/**\n * An integration that filters out events (errors and transactions) based on:\n *\n * - (Errors) A curated list of known low-value or irrelevant errors (see {@link DEFAULT_IGNORE_ERRORS})\n * - (Errors) A list of error messages or urls/filenames passed in via\n *   - Top level Sentry.init options (`ignoreErrors`, `denyUrls`, `allowUrls`)\n *   - The same options passed to the integration directly via @param options\n * - (Transactions/Spans) A list of root span (transaction) names passed in via\n *   - Top level Sentry.init option (`ignoreTransactions`)\n *   - The same option passed to the integration directly via @param options\n *\n * Events filtered by this integration will not be sent to Sentry.\n */\nexport const eventFiltersIntegration = defineIntegration((options: Partial<EventFiltersOptions> = {}) => {\n  let mergedOptions: Partial<EventFiltersOptions> | undefined;\n  return {\n    name: INTEGRATION_NAME,\n    setup(client) {\n      const clientOptions = client.getOptions();\n      mergedOptions = _mergeOptions(options, clientOptions);\n    },\n    processEvent(event, _hint, client) {\n      if (!mergedOptions) {\n        const clientOptions = client.getOptions();\n        mergedOptions = _mergeOptions(options, clientOptions);\n      }\n      return _shouldDropEvent(event, mergedOptions) ? null : event;\n    },\n  };\n});\n\n/**\n * An integration that filters out events (errors and transactions) based on:\n *\n * - (Errors) A curated list of known low-value or irrelevant errors (see {@link DEFAULT_IGNORE_ERRORS})\n * - (Errors) A list of error messages or urls/filenames passed in via\n *   - Top level Sentry.init options (`ignoreErrors`, `denyUrls`, `allowUrls`)\n *   - The same options passed to the integration directly via @param options\n * - (Transactions/Spans) A list of root span (transaction) names passed in via\n *   - Top level Sentry.init option (`ignoreTransactions`)\n *   - The same option passed to the integration directly via @param options\n *\n * Events filtered by this integration will not be sent to Sentry.\n *\n * @deprecated this integration was renamed and will be removed in a future major version.\n * Use `eventFiltersIntegration` instead.\n */\nexport const inboundFiltersIntegration = defineIntegration(((options: Partial<EventFiltersOptions> = {}) => {\n  return {\n    ...eventFiltersIntegration(options),\n    name: 'InboundFilters',\n  };\n}) satisfies IntegrationFn);\n\nfunction _mergeOptions(\n  internalOptions: Partial<EventFiltersOptions> = {},\n  clientOptions: Partial<EventFiltersOptions> = {},\n): Partial<EventFiltersOptions> {\n  return {\n    allowUrls: [...(internalOptions.allowUrls || []), ...(clientOptions.allowUrls || [])],\n    denyUrls: [...(internalOptions.denyUrls || []), ...(clientOptions.denyUrls || [])],\n    ignoreErrors: [\n      ...(internalOptions.ignoreErrors || []),\n      ...(clientOptions.ignoreErrors || []),\n      ...(internalOptions.disableErrorDefaults ? [] : DEFAULT_IGNORE_ERRORS),\n    ],\n    ignoreTransactions: [...(internalOptions.ignoreTransactions || []), ...(clientOptions.ignoreTransactions || [])],\n  };\n}\n\nfunction _shouldDropEvent(event: Event, options: Partial<EventFiltersOptions>): boolean {\n  if (!event.type) {\n    // Filter errors\n    if (_isIgnoredError(event, options.ignoreErrors)) {\n      DEBUG_BUILD &&\n        debug.warn(\n          `Event dropped due to being matched by \\`ignoreErrors\\` option.\\nEvent: ${getEventDescription(event)}`,\n        );\n      return true;\n    }\n    if (_isUselessError(event)) {\n      DEBUG_BUILD &&\n        debug.warn(\n          `Event dropped due to not having an error message, error type or stacktrace.\\nEvent: ${getEventDescription(\n            event,\n          )}`,\n        );\n      return true;\n    }\n    if (_isDeniedUrl(event, options.denyUrls)) {\n      DEBUG_BUILD &&\n        debug.warn(\n          `Event dropped due to being matched by \\`denyUrls\\` option.\\nEvent: ${getEventDescription(\n            event,\n          )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n        );\n      return true;\n    }\n    if (!_isAllowedUrl(event, options.allowUrls)) {\n      DEBUG_BUILD &&\n        debug.warn(\n          `Event dropped due to not being matched by \\`allowUrls\\` option.\\nEvent: ${getEventDescription(\n            event,\n          )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n        );\n      return true;\n    }\n  } else if (event.type === 'transaction') {\n    // Filter transactions\n\n    if (_isIgnoredTransaction(event, options.ignoreTransactions)) {\n      DEBUG_BUILD &&\n        debug.warn(\n          `Event dropped due to being matched by \\`ignoreTransactions\\` option.\\nEvent: ${getEventDescription(event)}`,\n        );\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction _isIgnoredError(event: Event, ignoreErrors?: Array<string | RegExp>): boolean {\n  if (!ignoreErrors?.length) {\n    return false;\n  }\n\n  return getPossibleEventMessages(event).some(message => stringMatchesSomePattern(message, ignoreErrors));\n}\n\nfunction _isIgnoredTransaction(event: Event, ignoreTransactions?: Array<string | RegExp>): boolean {\n  if (!ignoreTransactions?.length) {\n    return false;\n  }\n\n  const name = event.transaction;\n  return name ? stringMatchesSomePattern(name, ignoreTransactions) : false;\n}\n\nfunction _isDeniedUrl(event: Event, denyUrls?: Array<string | RegExp>): boolean {\n  if (!denyUrls?.length) {\n    return false;\n  }\n  const url = _getEventFilterUrl(event);\n  return !url ? false : stringMatchesSomePattern(url, denyUrls);\n}\n\nfunction _isAllowedUrl(event: Event, allowUrls?: Array<string | RegExp>): boolean {\n  if (!allowUrls?.length) {\n    return true;\n  }\n  const url = _getEventFilterUrl(event);\n  return !url ? true : stringMatchesSomePattern(url, allowUrls);\n}\n\nfunction _getLastValidUrl(frames: StackFrame[] = []): string | null {\n  for (let i = frames.length - 1; i >= 0; i--) {\n    const frame = frames[i];\n\n    if (frame && frame.filename !== '<anonymous>' && frame.filename !== '[native code]') {\n      return frame.filename || null;\n    }\n  }\n\n  return null;\n}\n\nfunction _getEventFilterUrl(event: Event): string | null {\n  try {\n    // If there are linked exceptions or exception aggregates we only want to match against the top frame of the \"root\" (the main exception)\n    // The root always comes last in linked exceptions\n    const rootException = [...(event.exception?.values ?? [])]\n      .reverse()\n      .find(value => value.mechanism?.parent_id === undefined && value.stacktrace?.frames?.length);\n    const frames = rootException?.stacktrace?.frames;\n    return frames ? _getLastValidUrl(frames) : null;\n  } catch {\n    DEBUG_BUILD && debug.error(`Cannot extract url for event ${getEventDescription(event)}`);\n    return null;\n  }\n}\n\nfunction _isUselessError(event: Event): boolean {\n  // We only want to consider events for dropping that actually have recorded exception values.\n  if (!event.exception?.values?.length) {\n    return false;\n  }\n\n  return (\n    // No top-level message\n    !event.message &&\n    // There are no exception values that have a stacktrace, a non-generic-Error type or value\n    !event.exception.values.some(value => value.stacktrace || (value.type && value.type !== 'Error') || value.value)\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}