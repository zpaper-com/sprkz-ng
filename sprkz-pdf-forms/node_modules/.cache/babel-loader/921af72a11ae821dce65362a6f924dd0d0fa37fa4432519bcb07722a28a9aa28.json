{"ast":null,"code":"import { Client, getSDKSource, applySdkMetadata, _INTERNAL_flushLogsBuffer, addAutoIpAddressToUser, addAutoIpAddressToSession } from '@sentry/core';\nimport { eventFromException, eventFromMessage } from './eventbuilder.js';\nimport { WINDOW } from './helpers.js';\n\n/**\n * A magic string that build tooling can leverage in order to inject a release value into the SDK.\n */\n\nconst DEFAULT_FLUSH_INTERVAL = 5000;\n\n/**\n * The Sentry Browser SDK Client.\n *\n * @see BrowserOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nclass BrowserClient extends Client {\n  /**\n   * Creates a new Browser SDK instance.\n   *\n   * @param options Configuration options for this SDK.\n   */\n  constructor(options) {\n    const opts = applyDefaultOptions(options);\n    const sdkSource = WINDOW.SENTRY_SDK_SOURCE || getSDKSource();\n    applySdkMetadata(opts, 'browser', ['browser'], sdkSource);\n    super(opts);\n    const {\n      sendDefaultPii,\n      sendClientReports,\n      _experiments\n    } = this._options;\n    const enableLogs = _experiments?.enableLogs;\n    if (WINDOW.document && (sendClientReports || enableLogs)) {\n      WINDOW.document.addEventListener('visibilitychange', () => {\n        if (WINDOW.document.visibilityState === 'hidden') {\n          if (sendClientReports) {\n            this._flushOutcomes();\n          }\n          if (enableLogs) {\n            _INTERNAL_flushLogsBuffer(this);\n          }\n        }\n      });\n    }\n    if (enableLogs) {\n      this.on('flush', () => {\n        _INTERNAL_flushLogsBuffer(this);\n      });\n      this.on('afterCaptureLog', () => {\n        if (this._logFlushIdleTimeout) {\n          clearTimeout(this._logFlushIdleTimeout);\n        }\n        this._logFlushIdleTimeout = setTimeout(() => {\n          _INTERNAL_flushLogsBuffer(this);\n        }, DEFAULT_FLUSH_INTERVAL);\n      });\n    }\n    if (sendDefaultPii) {\n      this.on('postprocessEvent', addAutoIpAddressToUser);\n      this.on('beforeSendSession', addAutoIpAddressToSession);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  eventFromException(exception, hint) {\n    return eventFromException(this._options.stackParser, exception, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  eventFromMessage(message, level = 'info', hint) {\n    return eventFromMessage(this._options.stackParser, message, level, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  _prepareEvent(event, hint, currentScope, isolationScope) {\n    event.platform = event.platform || 'javascript';\n    return super._prepareEvent(event, hint, currentScope, isolationScope);\n  }\n}\n\n/** Exported only for tests. */\nfunction applyDefaultOptions(optionsArg) {\n  return {\n    release: typeof __SENTRY_RELEASE__ === 'string' // This allows build tooling to find-and-replace __SENTRY_RELEASE__ to inject a release value\n    ? __SENTRY_RELEASE__ : WINDOW.SENTRY_RELEASE?.id,\n    // This supports the variable that sentry-webpack-plugin injects\n    sendClientReports: true,\n    // We default this to true, as it is the safer scenario\n    parentSpanIsAlwaysRootSpan: true,\n    ...optionsArg\n  };\n}\nexport { BrowserClient, applyDefaultOptions };","map":{"version":3,"names":["DEFAULT_FLUSH_INTERVAL","BrowserClient","Client","constructor","options","opts","applyDefaultOptions","sdkSource","WINDOW","SENTRY_SDK_SOURCE","getSDKSource","applySdkMetadata","sendDefaultPii","sendClientReports","_experiments","_options","enableLogs","document","addEventListener","visibilityState","_flushOutcomes","_INTERNAL_flushLogsBuffer","on","_logFlushIdleTimeout","clearTimeout","setTimeout","addAutoIpAddressToUser","addAutoIpAddressToSession","eventFromException","exception","hint","stackParser","attachStacktrace","eventFromMessage","message","level","_prepareEvent","event","currentScope","isolationScope","platform","optionsArg","release","__SENTRY_RELEASE__","SENTRY_RELEASE","id","parentSpanIsAlwaysRootSpan"],"sources":["/home/shawnstorie/sprkz-ng/sprkz-pdf-forms/node_modules/@sentry/browser/src/client.ts"],"sourcesContent":["import type {\n  BrowserClientProfilingOptions,\n  BrowserClientReplayOptions,\n  ClientOptions,\n  Event,\n  EventHint,\n  Options,\n  ParameterizedString,\n  Scope,\n  SeverityLevel,\n} from '@sentry/core';\nimport {\n  _INTERNAL_flushLogsBuffer,\n  addAutoIpAddressToSession,\n  addAutoIpAddressToUser,\n  applySdkMetadata,\n  Client,\n  getSDKSource,\n} from '@sentry/core';\nimport { eventFromException, eventFromMessage } from './eventbuilder';\nimport { WINDOW } from './helpers';\nimport type { BrowserTransportOptions } from './transports/types';\n\n/**\n * A magic string that build tooling can leverage in order to inject a release value into the SDK.\n */\ndeclare const __SENTRY_RELEASE__: string | undefined;\n\nconst DEFAULT_FLUSH_INTERVAL = 5000;\n\ntype BrowserSpecificOptions = BrowserClientReplayOptions &\n  BrowserClientProfilingOptions & {\n    /** If configured, this URL will be used as base URL for lazy loading integration. */\n    cdnBaseUrl?: string;\n  };\n/**\n * Configuration options for the Sentry Browser SDK.\n * @see @sentry/core Options for more information.\n */\nexport type BrowserOptions = Options<BrowserTransportOptions> &\n  BrowserSpecificOptions & {\n    /**\n     * Important: Only set this option if you know what you are doing!\n     *\n     * By default, the SDK will check if `Sentry.init` is called in a browser extension.\n     * In case it is, it will stop initialization and log a warning\n     * because browser extensions require a different Sentry initialization process:\n     * https://docs.sentry.io/platforms/javascript/best-practices/shared-environments/\n     *\n     * Setting up the SDK in a browser extension with global error monitoring is not recommended\n     * and will likely flood you with errors from other web sites or extensions. This can heavily\n     * impact your quota and cause interference with your and other Sentry SDKs in shared environments.\n     *\n     * If this check wrongfully flags your setup as a browser extension, you can set this\n     * option to `true` to skip the check.\n     *\n     * @default false\n     */\n    skipBrowserExtensionCheck?: boolean;\n  };\n\n/**\n * Configuration options for the Sentry Browser SDK Client class\n * @see BrowserClient for more information.\n */\nexport type BrowserClientOptions = ClientOptions<BrowserTransportOptions> & BrowserSpecificOptions;\n\n/**\n * The Sentry Browser SDK Client.\n *\n * @see BrowserOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nexport class BrowserClient extends Client<BrowserClientOptions> {\n  private _logFlushIdleTimeout: ReturnType<typeof setTimeout> | undefined;\n  /**\n   * Creates a new Browser SDK instance.\n   *\n   * @param options Configuration options for this SDK.\n   */\n  public constructor(options: BrowserClientOptions) {\n    const opts = applyDefaultOptions(options);\n    const sdkSource = WINDOW.SENTRY_SDK_SOURCE || getSDKSource();\n    applySdkMetadata(opts, 'browser', ['browser'], sdkSource);\n\n    super(opts);\n\n    const { sendDefaultPii, sendClientReports, _experiments } = this._options;\n    const enableLogs = _experiments?.enableLogs;\n\n    if (WINDOW.document && (sendClientReports || enableLogs)) {\n      WINDOW.document.addEventListener('visibilitychange', () => {\n        if (WINDOW.document.visibilityState === 'hidden') {\n          if (sendClientReports) {\n            this._flushOutcomes();\n          }\n          if (enableLogs) {\n            _INTERNAL_flushLogsBuffer(this);\n          }\n        }\n      });\n    }\n\n    if (enableLogs) {\n      this.on('flush', () => {\n        _INTERNAL_flushLogsBuffer(this);\n      });\n\n      this.on('afterCaptureLog', () => {\n        if (this._logFlushIdleTimeout) {\n          clearTimeout(this._logFlushIdleTimeout);\n        }\n\n        this._logFlushIdleTimeout = setTimeout(() => {\n          _INTERNAL_flushLogsBuffer(this);\n        }, DEFAULT_FLUSH_INTERVAL);\n      });\n    }\n\n    if (sendDefaultPii) {\n      this.on('postprocessEvent', addAutoIpAddressToUser);\n      this.on('beforeSendSession', addAutoIpAddressToSession);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public eventFromException(exception: unknown, hint?: EventHint): PromiseLike<Event> {\n    return eventFromException(this._options.stackParser, exception, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public eventFromMessage(\n    message: ParameterizedString,\n    level: SeverityLevel = 'info',\n    hint?: EventHint,\n  ): PromiseLike<Event> {\n    return eventFromMessage(this._options.stackParser, message, level, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  protected _prepareEvent(\n    event: Event,\n    hint: EventHint,\n    currentScope: Scope,\n    isolationScope: Scope,\n  ): PromiseLike<Event | null> {\n    event.platform = event.platform || 'javascript';\n\n    return super._prepareEvent(event, hint, currentScope, isolationScope);\n  }\n}\n\n/** Exported only for tests. */\nexport function applyDefaultOptions<T extends Partial<BrowserClientOptions>>(optionsArg: T): T {\n  return {\n    release:\n      typeof __SENTRY_RELEASE__ === 'string' // This allows build tooling to find-and-replace __SENTRY_RELEASE__ to inject a release value\n        ? __SENTRY_RELEASE__\n        : WINDOW.SENTRY_RELEASE?.id, // This supports the variable that sentry-webpack-plugin injects\n    sendClientReports: true,\n    // We default this to true, as it is the safer scenario\n    parentSpanIsAlwaysRootSpan: true,\n    ...optionsArg,\n  };\n}\n"],"mappings":";;;;AAuBA;AACA;AACA;;AAGA,MAAMA,sBAAA,GAAyB,IAAI;;AAuCnC;AACA;AACA;AACA;AACA;AACA;AACO,MAAMC,aAAA,SAAsBC,MAAM,CAAuB;EAEhE;AACA;AACA;AACA;AACA;EACSC,WAAWA,CAACC,OAAO,EAAwB;IAChD,MAAMC,IAAA,GAAOC,mBAAmB,CAACF,OAAO,CAAC;IACzC,MAAMG,SAAA,GAAYC,MAAM,CAACC,iBAAA,IAAqBC,YAAY,EAAE;IAC5DC,gBAAgB,CAACN,IAAI,EAAE,SAAS,EAAE,CAAC,SAAS,CAAC,EAAEE,SAAS,CAAC;IAEzD,KAAK,CAACF,IAAI,CAAC;IAEX,MAAM;MAAEO,cAAc;MAAEC,iBAAiB;MAAEC;IAAA,CAAa,GAAI,IAAI,CAACC,QAAQ;IACzE,MAAMC,UAAA,GAAaF,YAAY,EAAEE,UAAU;IAE3C,IAAIR,MAAM,CAACS,QAAA,KAAaJ,iBAAA,IAAqBG,UAAU,CAAC,EAAE;MACxDR,MAAM,CAACS,QAAQ,CAACC,gBAAgB,CAAC,kBAAkB,EAAE,MAAM;QACzD,IAAIV,MAAM,CAACS,QAAQ,CAACE,eAAA,KAAoB,QAAQ,EAAE;UAChD,IAAIN,iBAAiB,EAAE;YACrB,IAAI,CAACO,cAAc,EAAE;UACjC;UACU,IAAIJ,UAAU,EAAE;YACdK,yBAAyB,CAAC,IAAI,CAAC;UAC3C;QACA;MACA,CAAO,CAAC;IACR;IAEI,IAAIL,UAAU,EAAE;MACd,IAAI,CAACM,EAAE,CAAC,OAAO,EAAE,MAAM;QACrBD,yBAAyB,CAAC,IAAI,CAAC;MACvC,CAAO,CAAC;MAEF,IAAI,CAACC,EAAE,CAAC,iBAAiB,EAAE,MAAM;QAC/B,IAAI,IAAI,CAACC,oBAAoB,EAAE;UAC7BC,YAAY,CAAC,IAAI,CAACD,oBAAoB,CAAC;QACjD;QAEQ,IAAI,CAACA,oBAAA,GAAuBE,UAAU,CAAC,MAAM;UAC3CJ,yBAAyB,CAAC,IAAI,CAAC;QACzC,CAAS,EAAErB,sBAAsB,CAAC;MAClC,CAAO,CAAC;IACR;IAEI,IAAIY,cAAc,EAAE;MAClB,IAAI,CAACU,EAAE,CAAC,kBAAkB,EAAEI,sBAAsB,CAAC;MACnD,IAAI,CAACJ,EAAE,CAAC,mBAAmB,EAAEK,yBAAyB,CAAC;IAC7D;EACA;;EAEA;AACA;AACA;EACSC,kBAAkBA,CAACC,SAAS,EAAWC,IAAI,EAAkC;IAClF,OAAOF,kBAAkB,CAAC,IAAI,CAACb,QAAQ,CAACgB,WAAW,EAAEF,SAAS,EAAEC,IAAI,EAAE,IAAI,CAACf,QAAQ,CAACiB,gBAAgB,CAAC;EACzG;;EAEA;AACA;AACA;EACSC,gBAAgBA,CACrBC,OAAO,EACPC,KAAK,GAAkB,MAAM,EAC7BL,IAAI,EACgB;IACpB,OAAOG,gBAAgB,CAAC,IAAI,CAAClB,QAAQ,CAACgB,WAAW,EAAEG,OAAO,EAAEC,KAAK,EAAEL,IAAI,EAAE,IAAI,CAACf,QAAQ,CAACiB,gBAAgB,CAAC;EAC5G;;EAEA;AACA;AACA;EACYI,aAAaA,CACrBC,KAAK,EACLP,IAAI,EACJQ,YAAY,EACZC,cAAc,EACa;IAC3BF,KAAK,CAACG,QAAA,GAAWH,KAAK,CAACG,QAAA,IAAY,YAAY;IAE/C,OAAO,KAAK,CAACJ,aAAa,CAACC,KAAK,EAAEP,IAAI,EAAEQ,YAAY,EAAEC,cAAc,CAAC;EACzE;AACA;;AAEA;AACO,SAASjC,mBAAmBA,CAA0CmC,UAAU,EAAQ;EAC7F,OAAO;IACLC,OAAO,EACL,OAAOC,kBAAA,KAAuB;IAAA,EAC1BA,kBAAA,GACAnC,MAAM,CAACoC,cAAc,EAAEC,EAAE;IAAA;IAC/BhC,iBAAiB,EAAE,IAAI;IAC3B;IACIiC,0BAA0B,EAAE,IAAI;IAChC,GAAGL;EACP,CAAG;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}