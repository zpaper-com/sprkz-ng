{"ast":null,"code":"export { registerSpanErrorInstrumentation } from './tracing/errors.js';\nexport { getCapturedScopesOnSpan, setCapturedScopesOnSpan } from './tracing/utils.js';\nexport { TRACING_DEFAULTS, startIdleSpan } from './tracing/idleSpan.js';\nexport { SentrySpan } from './tracing/sentrySpan.js';\nexport { SentryNonRecordingSpan } from './tracing/sentryNonRecordingSpan.js';\nexport { SPAN_STATUS_ERROR, SPAN_STATUS_OK, SPAN_STATUS_UNSET, getSpanStatusFromHttpCode, setHttpStatus } from './tracing/spanstatus.js';\nexport { continueTrace, startInactiveSpan, startNewTrace, startSpan, startSpanManual, suppressTracing, withActiveSpan } from './tracing/trace.js';\nexport { getDynamicSamplingContextFromClient, getDynamicSamplingContextFromScope, getDynamicSamplingContextFromSpan, spanToBaggageHeader } from './tracing/dynamicSamplingContext.js';\nexport { setMeasurement, timedEventsToMeasurements } from './tracing/measurement.js';\nexport { sampleSpan } from './tracing/sampling.js';\nexport { logSpanEnd, logSpanStart } from './tracing/logSpans.js';\nexport { SEMANTIC_ATTRIBUTE_CACHE_HIT, SEMANTIC_ATTRIBUTE_CACHE_ITEM_SIZE, SEMANTIC_ATTRIBUTE_CACHE_KEY, SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME, SEMANTIC_ATTRIBUTE_HTTP_REQUEST_METHOD, SEMANTIC_ATTRIBUTE_PROFILE_ID, SEMANTIC_ATTRIBUTE_SENTRY_CUSTOM_SPAN_NAME, SEMANTIC_ATTRIBUTE_SENTRY_IDLE_SPAN_FINISH_REASON, SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT, SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE, SEMANTIC_ATTRIBUTE_SENTRY_OP, SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, SEMANTIC_ATTRIBUTE_SENTRY_PREVIOUS_TRACE_SAMPLE_RATE, SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE, SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, SEMANTIC_ATTRIBUTE_URL_FULL, SEMANTIC_LINK_ATTRIBUTE_LINK_TYPE } from './semanticAttributes.js';\nexport { createEventEnvelope, createSessionEnvelope, createSpanEnvelope } from './envelope.js';\nexport { addEventProcessor, captureCheckIn, captureEvent, captureException, captureMessage, captureSession, close, endSession, flush, isEnabled, isInitialized, lastEventId, setContext, setExtra, setExtras, setTag, setTags, setUser, startSession, withMonitor } from './exports.js';\nexport { getClient, getCurrentScope, getGlobalScope, getIsolationScope, getTraceContextFromScope, withIsolationScope, withScope } from './currentScopes.js';\nexport { getDefaultCurrentScope, getDefaultIsolationScope } from './defaultScopes.js';\nexport { setAsyncContextStrategy } from './asyncContext/index.js';\nexport { getGlobalSingleton, getMainCarrier } from './carrier.js';\nexport { closeSession, makeSession, updateSession } from './session.js';\nexport { Scope } from './scope.js';\nexport { notifyEventProcessors } from './eventProcessors.js';\nexport { getEnvelopeEndpointWithUrlEncodedAuth, getReportDialogEndpoint } from './api.js';\nexport { BaseClient, Client } from './client.js';\nexport { ServerRuntimeClient } from './server-runtime-client.js';\nexport { initAndBind, setCurrentClient } from './sdk.js';\nexport { createTransport } from './transports/base.js';\nexport { makeOfflineTransport } from './transports/offline.js';\nexport { makeMultiplexedTransport } from './transports/multiplexed.js';\nexport { addIntegration, defineIntegration, getIntegrationsToSetup } from './integration.js';\nexport { applyScopeDataToEvent, mergeScopeData } from './utils/applyScopeDataToEvent.js';\nexport { prepareEvent } from './utils/prepareEvent.js';\nexport { createCheckInEnvelope } from './checkin.js';\nexport { hasSpansEnabled, hasTracingEnabled } from './utils/hasSpansEnabled.js';\nexport { isSentryRequestUrl } from './utils/isSentryRequestUrl.js';\nexport { handleCallbackErrors } from './utils/handleCallbackErrors.js';\nexport { fmt, parameterize } from './utils/parameterize.js';\nexport { addAutoIpAddressToSession, addAutoIpAddressToUser } from './utils/ipAddress.js';\nexport { addChildSpanToSpan, convertSpanLinksForEnvelope, getActiveSpan, getRootSpan, getSpanDescendants, getStatusMessage, spanIsSampled, spanTimeInputToSeconds, spanToJSON, spanToTraceContext, spanToTraceHeader, updateSpanName } from './utils/spanUtils.js';\nexport { parseSampleRate } from './utils/parseSampleRate.js';\nexport { applySdkMetadata } from './utils/sdkMetadata.js';\nexport { getTraceData } from './utils/traceData.js';\nexport { getTraceMetaTags } from './utils/meta.js';\nexport { debounce } from './utils/debounce.js';\nexport { extractQueryParamsFromUrl, headersToDict, httpRequestToRequestData, winterCGHeadersToDict, winterCGRequestToRequestData } from './utils/request.js';\nexport { DEFAULT_ENVIRONMENT } from './constants.js';\nexport { addBreadcrumb } from './breadcrumbs.js';\nexport { functionToStringIntegration } from './integrations/functiontostring.js';\nexport { eventFiltersIntegration, inboundFiltersIntegration } from './integrations/eventFilters.js';\nexport { linkedErrorsIntegration } from './integrations/linkederrors.js';\nexport { moduleMetadataIntegration } from './integrations/metadata.js';\nexport { requestDataIntegration } from './integrations/requestdata.js';\nexport { captureConsoleIntegration } from './integrations/captureconsole.js';\nexport { dedupeIntegration } from './integrations/dedupe.js';\nexport { extraErrorDataIntegration } from './integrations/extraerrordata.js';\nexport { rewriteFramesIntegration } from './integrations/rewriteframes.js';\nexport { instrumentSupabaseClient, supabaseIntegration } from './integrations/supabase.js';\nexport { zodErrorsIntegration } from './integrations/zoderrors.js';\nexport { thirdPartyErrorFilterIntegration } from './integrations/third-party-errors-filter.js';\nexport { consoleIntegration } from './integrations/console.js';\nexport { featureFlagsIntegration } from './integrations/featureFlags/featureFlagsIntegration.js';\nexport { profiler } from './profiling.js';\nexport { instrumentFetchRequest } from './fetch.js';\nexport { trpcMiddleware } from './trpc.js';\nexport { wrapMcpServerWithSentry } from './mcp-server.js';\nexport { captureFeedback } from './feedback.js';\nexport { _INTERNAL_captureLog, _INTERNAL_captureSerializedLog, _INTERNAL_flushLogsBuffer } from './logs/exports.js';\nexport { consoleLoggingIntegration } from './logs/console-integration.js';\nexport { addVercelAiProcessors } from './utils/vercel-ai.js';\nexport { instrumentOpenAiClient } from './utils/openai/index.js';\nexport { OPENAI_INTEGRATION_NAME } from './utils/openai/constants.js';\nexport { _INTERNAL_FLAG_BUFFER_SIZE, _INTERNAL_MAX_FLAGS_PER_SPAN, _INTERNAL_addFeatureFlagToActiveSpan, _INTERNAL_copyFlagsFromScopeToEvent, _INTERNAL_insertFlagToScope } from './utils/featureFlags.js';\nexport { applyAggregateErrorsToEvent } from './utils/aggregate-errors.js';\nexport { getBreadcrumbLogLevelFromHttpStatusCode } from './utils/breadcrumb-log-level.js';\nexport { getComponentName, getLocationHref, htmlTreeAsString } from './utils/browser.js';\nexport { dsnFromString, dsnToString, makeDsn } from './utils/dsn.js';\nexport { SentryError } from './utils/error.js';\nexport { GLOBAL_OBJ } from './utils/worldwide.js';\nexport { addConsoleInstrumentationHandler } from './instrument/console.js';\nexport { addFetchEndInstrumentationHandler, addFetchInstrumentationHandler } from './instrument/fetch.js';\nexport { addGlobalErrorInstrumentationHandler } from './instrument/globalError.js';\nexport { addGlobalUnhandledRejectionInstrumentationHandler } from './instrument/globalUnhandledRejection.js';\nexport { addHandler, maybeInstrument, resetInstrumentationHandlers, triggerHandlers } from './instrument/handlers.js';\nexport { isDOMError, isDOMException, isElement, isError, isErrorEvent, isEvent, isInstanceOf, isParameterizedString, isPlainObject, isPrimitive, isRegExp, isString, isSyntheticEvent, isThenable, isVueViewModel } from './utils/is.js';\nexport { isBrowser } from './utils/isBrowser.js';\nexport { CONSOLE_LEVELS, consoleSandbox, debug, logger, originalConsoleMethods } from './utils/debug-logger.js';\nexport { addContextToFrame, addExceptionMechanism, addExceptionTypeValue, checkOrSetAlreadyCaught, getEventDescription, parseSemver, uuid4 } from './utils/misc.js';\nexport { isNodeEnv, loadModule } from './utils/node.js';\nexport { normalize, normalizeToSize, normalizeUrlToBase } from './utils/normalize.js';\nexport { addNonEnumerableProperty, convertToPlainObject, dropUndefinedKeys, extractExceptionKeysForMessage, fill, getOriginalFunction, markFunctionWrapped, objectify } from './utils/object.js';\nexport { basename, dirname, isAbsolute, join, normalizePath, relative, resolve } from './utils/path.js';\nexport { SENTRY_BUFFER_FULL_ERROR, makePromiseBuffer } from './utils/promisebuffer.js';\nexport { severityLevelFromString } from './utils/severity.js';\nexport { UNKNOWN_FUNCTION, createStackParser, getFramesFromEvent, getFunctionName, stackParserFromStackParserOptions, stripSentryFramesAndReverse } from './utils/stacktrace.js';\nexport { filenameIsInApp, node, nodeStackLineParser } from './utils/node-stack-trace.js';\nexport { isMatchingPattern, safeJoin, snipLine, stringMatchesSomePattern, truncate } from './utils/string.js';\nexport { isNativeFunction, supportsDOMError, supportsDOMException, supportsErrorEvent, supportsFetch, supportsHistory, supportsNativeFetch, supportsReferrerPolicy, supportsReportingObserver } from './utils/supports.js';\nexport { SyncPromise, rejectedSyncPromise, resolvedSyncPromise } from './utils/syncpromise.js';\nexport { browserPerformanceTimeOrigin, dateTimestampInSeconds, timestampInSeconds } from './utils/time.js';\nexport { TRACEPARENT_REGEXP, extractTraceparentData, generateSentryTraceHeader, propagationContextFromHeaders } from './utils/tracing.js';\nexport { getSDKSource, isBrowserBundle } from './utils/env.js';\nexport { addItemToEnvelope, createAttachmentEnvelopeItem, createEnvelope, createEventEnvelopeHeaders, createSpanEnvelopeItem, envelopeContainsItemType, envelopeItemTypeToDataCategory, forEachEnvelopeItem, getSdkMetadataForEnvelopeHeader, parseEnvelope, serializeEnvelope } from './utils/envelope.js';\nexport { createClientReportEnvelope } from './utils/clientreport.js';\nexport { DEFAULT_RETRY_AFTER, disabledUntil, isRateLimited, parseRetryAfterHeader, updateRateLimits } from './utils/ratelimit.js';\nexport { MAX_BAGGAGE_STRING_LENGTH, SENTRY_BAGGAGE_KEY_PREFIX, SENTRY_BAGGAGE_KEY_PREFIX_REGEX, baggageHeaderToDynamicSamplingContext, dynamicSamplingContextToSentryBaggageHeader, objectToBaggageHeader, parseBaggageHeader } from './utils/baggage.js';\nexport { getHttpSpanDetailsFromUrlObject, getSanitizedUrlString, getSanitizedUrlStringFromUrlObject, isURLObjectRelative, parseStringToURLObject, parseUrl, stripUrlQueryAndFragment } from './utils/url.js';\nexport { eventFromMessage, eventFromUnknownInput, exceptionFromError, parseStackFrames } from './utils/eventbuilder.js';\nexport { callFrameToStackFrame, watchdogTimer } from './utils/anr.js';\nexport { LRUMap } from './utils/lru.js';\nexport { generateSpanId, generateTraceId } from './utils/propagationContext.js';\nexport { vercelWaitUntil } from './utils/vercelWaitUntil.js';\nexport { SDK_VERSION } from './utils/version.js';\nexport { getDebugImagesForResources, getFilenameToDebugIdMap } from './utils/debug-ids.js';\nexport { escapeStringForRegex } from './vendor/escapeStringForRegex.js';","map":{"version":3,"names":[],"sources":[],"sourcesContent":["export { registerSpanErrorInstrumentation } from './tracing/errors.js';\nexport { getCapturedScopesOnSpan, setCapturedScopesOnSpan } from './tracing/utils.js';\nexport { TRACING_DEFAULTS, startIdleSpan } from './tracing/idleSpan.js';\nexport { SentrySpan } from './tracing/sentrySpan.js';\nexport { SentryNonRecordingSpan } from './tracing/sentryNonRecordingSpan.js';\nexport { SPAN_STATUS_ERROR, SPAN_STATUS_OK, SPAN_STATUS_UNSET, getSpanStatusFromHttpCode, setHttpStatus } from './tracing/spanstatus.js';\nexport { continueTrace, startInactiveSpan, startNewTrace, startSpan, startSpanManual, suppressTracing, withActiveSpan } from './tracing/trace.js';\nexport { getDynamicSamplingContextFromClient, getDynamicSamplingContextFromScope, getDynamicSamplingContextFromSpan, spanToBaggageHeader } from './tracing/dynamicSamplingContext.js';\nexport { setMeasurement, timedEventsToMeasurements } from './tracing/measurement.js';\nexport { sampleSpan } from './tracing/sampling.js';\nexport { logSpanEnd, logSpanStart } from './tracing/logSpans.js';\nexport { SEMANTIC_ATTRIBUTE_CACHE_HIT, SEMANTIC_ATTRIBUTE_CACHE_ITEM_SIZE, SEMANTIC_ATTRIBUTE_CACHE_KEY, SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME, SEMANTIC_ATTRIBUTE_HTTP_REQUEST_METHOD, SEMANTIC_ATTRIBUTE_PROFILE_ID, SEMANTIC_ATTRIBUTE_SENTRY_CUSTOM_SPAN_NAME, SEMANTIC_ATTRIBUTE_SENTRY_IDLE_SPAN_FINISH_REASON, SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT, SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE, SEMANTIC_ATTRIBUTE_SENTRY_OP, SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, SEMANTIC_ATTRIBUTE_SENTRY_PREVIOUS_TRACE_SAMPLE_RATE, SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE, SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, SEMANTIC_ATTRIBUTE_URL_FULL, SEMANTIC_LINK_ATTRIBUTE_LINK_TYPE } from './semanticAttributes.js';\nexport { createEventEnvelope, createSessionEnvelope, createSpanEnvelope } from './envelope.js';\nexport { addEventProcessor, captureCheckIn, captureEvent, captureException, captureMessage, captureSession, close, endSession, flush, isEnabled, isInitialized, lastEventId, setContext, setExtra, setExtras, setTag, setTags, setUser, startSession, withMonitor } from './exports.js';\nexport { getClient, getCurrentScope, getGlobalScope, getIsolationScope, getTraceContextFromScope, withIsolationScope, withScope } from './currentScopes.js';\nexport { getDefaultCurrentScope, getDefaultIsolationScope } from './defaultScopes.js';\nexport { setAsyncContextStrategy } from './asyncContext/index.js';\nexport { getGlobalSingleton, getMainCarrier } from './carrier.js';\nexport { closeSession, makeSession, updateSession } from './session.js';\nexport { Scope } from './scope.js';\nexport { notifyEventProcessors } from './eventProcessors.js';\nexport { getEnvelopeEndpointWithUrlEncodedAuth, getReportDialogEndpoint } from './api.js';\nexport { BaseClient, Client } from './client.js';\nexport { ServerRuntimeClient } from './server-runtime-client.js';\nexport { initAndBind, setCurrentClient } from './sdk.js';\nexport { createTransport } from './transports/base.js';\nexport { makeOfflineTransport } from './transports/offline.js';\nexport { makeMultiplexedTransport } from './transports/multiplexed.js';\nexport { addIntegration, defineIntegration, getIntegrationsToSetup } from './integration.js';\nexport { applyScopeDataToEvent, mergeScopeData } from './utils/applyScopeDataToEvent.js';\nexport { prepareEvent } from './utils/prepareEvent.js';\nexport { createCheckInEnvelope } from './checkin.js';\nexport { hasSpansEnabled, hasTracingEnabled } from './utils/hasSpansEnabled.js';\nexport { isSentryRequestUrl } from './utils/isSentryRequestUrl.js';\nexport { handleCallbackErrors } from './utils/handleCallbackErrors.js';\nexport { fmt, parameterize } from './utils/parameterize.js';\nexport { addAutoIpAddressToSession, addAutoIpAddressToUser } from './utils/ipAddress.js';\nexport { addChildSpanToSpan, convertSpanLinksForEnvelope, getActiveSpan, getRootSpan, getSpanDescendants, getStatusMessage, spanIsSampled, spanTimeInputToSeconds, spanToJSON, spanToTraceContext, spanToTraceHeader, updateSpanName } from './utils/spanUtils.js';\nexport { parseSampleRate } from './utils/parseSampleRate.js';\nexport { applySdkMetadata } from './utils/sdkMetadata.js';\nexport { getTraceData } from './utils/traceData.js';\nexport { getTraceMetaTags } from './utils/meta.js';\nexport { debounce } from './utils/debounce.js';\nexport { extractQueryParamsFromUrl, headersToDict, httpRequestToRequestData, winterCGHeadersToDict, winterCGRequestToRequestData } from './utils/request.js';\nexport { DEFAULT_ENVIRONMENT } from './constants.js';\nexport { addBreadcrumb } from './breadcrumbs.js';\nexport { functionToStringIntegration } from './integrations/functiontostring.js';\nexport { eventFiltersIntegration, inboundFiltersIntegration } from './integrations/eventFilters.js';\nexport { linkedErrorsIntegration } from './integrations/linkederrors.js';\nexport { moduleMetadataIntegration } from './integrations/metadata.js';\nexport { requestDataIntegration } from './integrations/requestdata.js';\nexport { captureConsoleIntegration } from './integrations/captureconsole.js';\nexport { dedupeIntegration } from './integrations/dedupe.js';\nexport { extraErrorDataIntegration } from './integrations/extraerrordata.js';\nexport { rewriteFramesIntegration } from './integrations/rewriteframes.js';\nexport { instrumentSupabaseClient, supabaseIntegration } from './integrations/supabase.js';\nexport { zodErrorsIntegration } from './integrations/zoderrors.js';\nexport { thirdPartyErrorFilterIntegration } from './integrations/third-party-errors-filter.js';\nexport { consoleIntegration } from './integrations/console.js';\nexport { featureFlagsIntegration } from './integrations/featureFlags/featureFlagsIntegration.js';\nexport { profiler } from './profiling.js';\nexport { instrumentFetchRequest } from './fetch.js';\nexport { trpcMiddleware } from './trpc.js';\nexport { wrapMcpServerWithSentry } from './mcp-server.js';\nexport { captureFeedback } from './feedback.js';\nexport { _INTERNAL_captureLog, _INTERNAL_captureSerializedLog, _INTERNAL_flushLogsBuffer } from './logs/exports.js';\nexport { consoleLoggingIntegration } from './logs/console-integration.js';\nexport { addVercelAiProcessors } from './utils/vercel-ai.js';\nexport { instrumentOpenAiClient } from './utils/openai/index.js';\nexport { OPENAI_INTEGRATION_NAME } from './utils/openai/constants.js';\nexport { _INTERNAL_FLAG_BUFFER_SIZE, _INTERNAL_MAX_FLAGS_PER_SPAN, _INTERNAL_addFeatureFlagToActiveSpan, _INTERNAL_copyFlagsFromScopeToEvent, _INTERNAL_insertFlagToScope } from './utils/featureFlags.js';\nexport { applyAggregateErrorsToEvent } from './utils/aggregate-errors.js';\nexport { getBreadcrumbLogLevelFromHttpStatusCode } from './utils/breadcrumb-log-level.js';\nexport { getComponentName, getLocationHref, htmlTreeAsString } from './utils/browser.js';\nexport { dsnFromString, dsnToString, makeDsn } from './utils/dsn.js';\nexport { SentryError } from './utils/error.js';\nexport { GLOBAL_OBJ } from './utils/worldwide.js';\nexport { addConsoleInstrumentationHandler } from './instrument/console.js';\nexport { addFetchEndInstrumentationHandler, addFetchInstrumentationHandler } from './instrument/fetch.js';\nexport { addGlobalErrorInstrumentationHandler } from './instrument/globalError.js';\nexport { addGlobalUnhandledRejectionInstrumentationHandler } from './instrument/globalUnhandledRejection.js';\nexport { addHandler, maybeInstrument, resetInstrumentationHandlers, triggerHandlers } from './instrument/handlers.js';\nexport { isDOMError, isDOMException, isElement, isError, isErrorEvent, isEvent, isInstanceOf, isParameterizedString, isPlainObject, isPrimitive, isRegExp, isString, isSyntheticEvent, isThenable, isVueViewModel } from './utils/is.js';\nexport { isBrowser } from './utils/isBrowser.js';\nexport { CONSOLE_LEVELS, consoleSandbox, debug, logger, originalConsoleMethods } from './utils/debug-logger.js';\nexport { addContextToFrame, addExceptionMechanism, addExceptionTypeValue, checkOrSetAlreadyCaught, getEventDescription, parseSemver, uuid4 } from './utils/misc.js';\nexport { isNodeEnv, loadModule } from './utils/node.js';\nexport { normalize, normalizeToSize, normalizeUrlToBase } from './utils/normalize.js';\nexport { addNonEnumerableProperty, convertToPlainObject, dropUndefinedKeys, extractExceptionKeysForMessage, fill, getOriginalFunction, markFunctionWrapped, objectify } from './utils/object.js';\nexport { basename, dirname, isAbsolute, join, normalizePath, relative, resolve } from './utils/path.js';\nexport { SENTRY_BUFFER_FULL_ERROR, makePromiseBuffer } from './utils/promisebuffer.js';\nexport { severityLevelFromString } from './utils/severity.js';\nexport { UNKNOWN_FUNCTION, createStackParser, getFramesFromEvent, getFunctionName, stackParserFromStackParserOptions, stripSentryFramesAndReverse } from './utils/stacktrace.js';\nexport { filenameIsInApp, node, nodeStackLineParser } from './utils/node-stack-trace.js';\nexport { isMatchingPattern, safeJoin, snipLine, stringMatchesSomePattern, truncate } from './utils/string.js';\nexport { isNativeFunction, supportsDOMError, supportsDOMException, supportsErrorEvent, supportsFetch, supportsHistory, supportsNativeFetch, supportsReferrerPolicy, supportsReportingObserver } from './utils/supports.js';\nexport { SyncPromise, rejectedSyncPromise, resolvedSyncPromise } from './utils/syncpromise.js';\nexport { browserPerformanceTimeOrigin, dateTimestampInSeconds, timestampInSeconds } from './utils/time.js';\nexport { TRACEPARENT_REGEXP, extractTraceparentData, generateSentryTraceHeader, propagationContextFromHeaders } from './utils/tracing.js';\nexport { getSDKSource, isBrowserBundle } from './utils/env.js';\nexport { addItemToEnvelope, createAttachmentEnvelopeItem, createEnvelope, createEventEnvelopeHeaders, createSpanEnvelopeItem, envelopeContainsItemType, envelopeItemTypeToDataCategory, forEachEnvelopeItem, getSdkMetadataForEnvelopeHeader, parseEnvelope, serializeEnvelope } from './utils/envelope.js';\nexport { createClientReportEnvelope } from './utils/clientreport.js';\nexport { DEFAULT_RETRY_AFTER, disabledUntil, isRateLimited, parseRetryAfterHeader, updateRateLimits } from './utils/ratelimit.js';\nexport { MAX_BAGGAGE_STRING_LENGTH, SENTRY_BAGGAGE_KEY_PREFIX, SENTRY_BAGGAGE_KEY_PREFIX_REGEX, baggageHeaderToDynamicSamplingContext, dynamicSamplingContextToSentryBaggageHeader, objectToBaggageHeader, parseBaggageHeader } from './utils/baggage.js';\nexport { getHttpSpanDetailsFromUrlObject, getSanitizedUrlString, getSanitizedUrlStringFromUrlObject, isURLObjectRelative, parseStringToURLObject, parseUrl, stripUrlQueryAndFragment } from './utils/url.js';\nexport { eventFromMessage, eventFromUnknownInput, exceptionFromError, parseStackFrames } from './utils/eventbuilder.js';\nexport { callFrameToStackFrame, watchdogTimer } from './utils/anr.js';\nexport { LRUMap } from './utils/lru.js';\nexport { generateSpanId, generateTraceId } from './utils/propagationContext.js';\nexport { vercelWaitUntil } from './utils/vercelWaitUntil.js';\nexport { SDK_VERSION } from './utils/version.js';\nexport { getDebugImagesForResources, getFilenameToDebugIdMap } from './utils/debug-ids.js';\nexport { escapeStringForRegex } from './vendor/escapeStringForRegex.js';\n"],"mappings":"","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}