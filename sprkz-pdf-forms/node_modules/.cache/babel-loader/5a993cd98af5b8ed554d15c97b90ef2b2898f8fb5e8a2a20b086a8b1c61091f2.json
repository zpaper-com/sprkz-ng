{"ast":null,"code":"import { getMainCarrier, getSentryCarrier } from '../carrier.js';\nimport { getStackAsyncContextStrategy } from './stackStrategy.js';\n\n/**\n * @private Private API with no semver guarantees!\n *\n * Sets the global async context strategy\n */\nfunction setAsyncContextStrategy(strategy) {\n  // Get main carrier (global for every environment)\n  const registry = getMainCarrier();\n  const sentry = getSentryCarrier(registry);\n  sentry.acs = strategy;\n}\n\n/**\n * Get the current async context strategy.\n * If none has been setup, the default will be used.\n */\nfunction getAsyncContextStrategy(carrier) {\n  const sentry = getSentryCarrier(carrier);\n  if (sentry.acs) {\n    return sentry.acs;\n  }\n\n  // Otherwise, use the default one (stack)\n  return getStackAsyncContextStrategy();\n}\nexport { getAsyncContextStrategy, setAsyncContextStrategy };","map":{"version":3,"names":["setAsyncContextStrategy","strategy","registry","getMainCarrier","sentry","getSentryCarrier","acs","getAsyncContextStrategy","carrier","getStackAsyncContextStrategy"],"sources":["/home/shawnstorie/sprkz-ng/sprkz-pdf-forms/node_modules/@sentry/core/src/asyncContext/index.ts"],"sourcesContent":["import type { Carrier } from './../carrier';\nimport { getMainCarrier, getSentryCarrier } from './../carrier';\nimport { getStackAsyncContextStrategy } from './stackStrategy';\nimport type { AsyncContextStrategy } from './types';\n\n/**\n * @private Private API with no semver guarantees!\n *\n * Sets the global async context strategy\n */\nexport function setAsyncContextStrategy(strategy: AsyncContextStrategy | undefined): void {\n  // Get main carrier (global for every environment)\n  const registry = getMainCarrier();\n  const sentry = getSentryCarrier(registry);\n  sentry.acs = strategy;\n}\n\n/**\n * Get the current async context strategy.\n * If none has been setup, the default will be used.\n */\nexport function getAsyncContextStrategy(carrier: Carrier): AsyncContextStrategy {\n  const sentry = getSentryCarrier(carrier);\n\n  if (sentry.acs) {\n    return sentry.acs;\n  }\n\n  // Otherwise, use the default one (stack)\n  return getStackAsyncContextStrategy();\n}\n"],"mappings":";;;AAKA;AACA;AACA;AACA;AACA;AACO,SAASA,uBAAuBA,CAACC,QAAQ,EAA0C;EAC1F;EACE,MAAMC,QAAA,GAAWC,cAAc,EAAE;EACjC,MAAMC,MAAA,GAASC,gBAAgB,CAACH,QAAQ,CAAC;EACzCE,MAAM,CAACE,GAAA,GAAML,QAAQ;AACvB;;AAEA;AACA;AACA;AACA;AACO,SAASM,uBAAuBA,CAACC,OAAO,EAAiC;EAC9E,MAAMJ,MAAA,GAASC,gBAAgB,CAACG,OAAO,CAAC;EAExC,IAAIJ,MAAM,CAACE,GAAG,EAAE;IACd,OAAOF,MAAM,CAACE,GAAG;EACrB;;EAEA;EACE,OAAOG,4BAA4B,EAAE;AACvC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}