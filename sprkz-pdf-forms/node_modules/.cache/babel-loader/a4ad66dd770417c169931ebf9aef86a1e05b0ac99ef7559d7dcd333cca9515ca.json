{"ast":null,"code":"import { useState, useEffect, useCallback, useContext } from 'react';\nimport { unleashService } from '../services/unleashService';\nimport { FeatureFlagsContext } from '../contexts/FeatureFlagsContext';\n\n// Hook for accessing feature flags\nexport const useFeatureFlags = () => {\n  const context = useContext(FeatureFlagsContext);\n  if (!context) {\n    throw new Error('useFeatureFlags must be used within a FeatureFlagsProvider');\n  }\n  return context;\n};\n\n// Hook for checking a single feature flag\nexport const useFeatureFlag = (flagName, context) => {\n  const [isEnabled, setIsEnabled] = useState(() => unleashService.isEnabled(flagName, context));\n  const [variant, setVariant] = useState(() => unleashService.getVariant(flagName, context));\n  useEffect(() => {\n    // Update when flags change\n    const updateFlag = () => {\n      setIsEnabled(unleashService.isEnabled(flagName, context));\n      setVariant(unleashService.getVariant(flagName, context));\n    };\n\n    // Subscribe to changes\n    const unsubscribe = unleashService.subscribe(updateFlag);\n\n    // Initial update\n    updateFlag();\n    return unsubscribe;\n  }, [flagName, context]);\n  return {\n    isEnabled,\n    variant\n  };\n};\n\n// Hook for checking multiple feature flags\nexport const useFeatureFlags_Multiple = (flagNames, context) => {\n  const [flags, setFlags] = useState(() => {\n    const initialFlags = {};\n    flagNames.forEach(flagName => {\n      initialFlags[flagName] = unleashService.isEnabled(flagName, context);\n    });\n    return initialFlags;\n  });\n  useEffect(() => {\n    const updateFlags = () => {\n      const updatedFlags = {};\n      flagNames.forEach(flagName => {\n        updatedFlags[flagName] = unleashService.isEnabled(flagName, context);\n      });\n      setFlags(updatedFlags);\n    };\n\n    // Subscribe to changes\n    const unsubscribe = unleashService.subscribe(updateFlags);\n\n    // Initial update\n    updateFlags();\n    return unsubscribe;\n  }, [flagNames, context]);\n  return flags;\n};\n\n// Hook for conditional feature rendering\nexport const useConditionalFeature = (flagName, context) => {\n  const {\n    isEnabled\n  } = useFeatureFlag(flagName, context);\n  const ConditionalComponent = useCallback(({\n    children,\n    fallback = null\n  }) => {\n    if (isEnabled) {\n      return React.createElement(React.Fragment, null, children);\n    }\n    return React.createElement(React.Fragment, null, fallback);\n  }, [isEnabled]);\n  return {\n    isEnabled,\n    ConditionalComponent\n  };\n};\n\n// Hook for feature flag variants with type safety\nexport const useFeatureVariant = (flagName, defaultValue, context) => {\n  const [variant, setVariant] = useState(() => {\n    var _flagVariant$payload$, _flagVariant$payload;\n    const flagVariant = unleashService.getVariant(flagName, context);\n    return (_flagVariant$payload$ = flagVariant === null || flagVariant === void 0 ? void 0 : (_flagVariant$payload = flagVariant.payload) === null || _flagVariant$payload === void 0 ? void 0 : _flagVariant$payload.value) !== null && _flagVariant$payload$ !== void 0 ? _flagVariant$payload$ : defaultValue;\n  });\n  useEffect(() => {\n    const updateVariant = () => {\n      var _flagVariant$payload$2, _flagVariant$payload2;\n      const flagVariant = unleashService.getVariant(flagName, context);\n      setVariant((_flagVariant$payload$2 = flagVariant === null || flagVariant === void 0 ? void 0 : (_flagVariant$payload2 = flagVariant.payload) === null || _flagVariant$payload2 === void 0 ? void 0 : _flagVariant$payload2.value) !== null && _flagVariant$payload$2 !== void 0 ? _flagVariant$payload$2 : defaultValue);\n    };\n    const unsubscribe = unleashService.subscribe(updateVariant);\n    updateVariant();\n    return unsubscribe;\n  }, [flagName, defaultValue, context]);\n  return variant;\n};\n\n// Hook for feature flag experimentation\nexport const useExperiment = (experimentName, variants, context) => {\n  const [activeVariant, setActiveVariant] = useState(() => {\n    const variant = unleashService.getVariant(experimentName, context);\n    return variants[variant === null || variant === void 0 ? void 0 : variant.name] || variants.default || null;\n  });\n  useEffect(() => {\n    const updateExperiment = () => {\n      const variant = unleashService.getVariant(experimentName, context);\n      setActiveVariant(variants[variant === null || variant === void 0 ? void 0 : variant.name] || variants.default || null);\n    };\n    const unsubscribe = unleashService.subscribe(updateExperiment);\n    updateExperiment();\n    return unsubscribe;\n  }, [experimentName, variants, context]);\n  return activeVariant;\n};\n\n// Hook for gradual rollouts\nexport const useGradualRollout = (flagName, userId, context) => {\n  const rolloutContext = userId ? {\n    ...context,\n    userId\n  } : context;\n  const {\n    isEnabled\n  } = useFeatureFlag(flagName, rolloutContext);\n  return isEnabled;\n};\n\n// Hook for A/B testing\nexport const useABTest = (experimentFlag, variants, context) => {\n  const [activeVariant, setActiveVariant] = useState('A');\n  const [variantData, setVariantData] = useState(variants.A);\n  useEffect(() => {\n    const updateTest = () => {\n      const variant = unleashService.getVariant(experimentFlag, context);\n      const variantName = variant === null || variant === void 0 ? void 0 : variant.name;\n      if (variantName && variants[variantName]) {\n        setActiveVariant(variantName);\n        setVariantData(variants[variantName]);\n      } else {\n        // Default to A if variant not found\n        setActiveVariant('A');\n        setVariantData(variants.A);\n      }\n    };\n    const unsubscribe = unleashService.subscribe(updateTest);\n    updateTest();\n    return unsubscribe;\n  }, [experimentFlag, variants, context]);\n  return {\n    variant: activeVariant,\n    data: variantData\n  };\n};\n\n// Hook for debugging feature flags\nexport const useFeatureFlagsDebug = () => {\n  const [debugInfo, setDebugInfo] = useState(() => unleashService.getStatus());\n  const [allFlags, setAllFlags] = useState(() => unleashService.getAllFlags());\n  useEffect(() => {\n    const updateDebugInfo = () => {\n      setDebugInfo(unleashService.getStatus());\n      setAllFlags(unleashService.getAllFlags());\n    };\n    const unsubscribe = unleashService.subscribe(updateDebugInfo);\n    updateDebugInfo();\n    return unsubscribe;\n  }, []);\n  const refreshFlags = useCallback(() => {\n    setDebugInfo(unleashService.getStatus());\n    setAllFlags(unleashService.getAllFlags());\n  }, []);\n  return {\n    status: debugInfo,\n    flags: allFlags,\n    refresh: refreshFlags\n  };\n};\n\n// Utility hook for performance-sensitive feature checks\nexport const useOptimizedFeatureFlag = (flagName, context) => {\n  // Use a ref to avoid unnecessary re-renders\n  const [isEnabled, setIsEnabled] = useState(() => unleashService.isEnabled(flagName, context));\n  useEffect(() => {\n    let timeoutId;\n    const updateFlag = () => {\n      // Debounce updates to avoid excessive re-renders\n      clearTimeout(timeoutId);\n      timeoutId = setTimeout(() => {\n        const newValue = unleashService.isEnabled(flagName, context);\n        setIsEnabled(current => current !== newValue ? newValue : current);\n      }, 100);\n    };\n    const unsubscribe = unleashService.subscribe(updateFlag);\n    updateFlag();\n    return () => {\n      clearTimeout(timeoutId);\n      unsubscribe();\n    };\n  }, [flagName, context]);\n  return isEnabled;\n};\nexport default useFeatureFlags;","map":{"version":3,"names":["useState","useEffect","useCallback","useContext","unleashService","FeatureFlagsContext","useFeatureFlags","context","Error","useFeatureFlag","flagName","isEnabled","setIsEnabled","variant","setVariant","getVariant","updateFlag","unsubscribe","subscribe","useFeatureFlags_Multiple","flagNames","flags","setFlags","initialFlags","forEach","updateFlags","updatedFlags","useConditionalFeature","ConditionalComponent","children","fallback","React","createElement","Fragment","useFeatureVariant","defaultValue","_flagVariant$payload$","_flagVariant$payload","flagVariant","payload","value","updateVariant","_flagVariant$payload$2","_flagVariant$payload2","useExperiment","experimentName","variants","activeVariant","setActiveVariant","name","default","updateExperiment","useGradualRollout","userId","rolloutContext","useABTest","experimentFlag","variantData","setVariantData","A","updateTest","variantName","data","useFeatureFlagsDebug","debugInfo","setDebugInfo","getStatus","allFlags","setAllFlags","getAllFlags","updateDebugInfo","refreshFlags","status","refresh","useOptimizedFeatureFlag","timeoutId","clearTimeout","setTimeout","newValue","current"],"sources":["/home/shawnstorie/sprkz-ng/sprkz-pdf-forms/src/hooks/useFeatureFlags.ts"],"sourcesContent":["import { useState, useEffect, useCallback, useContext } from 'react';\nimport { unleashService, FeatureFlags, isFeatureEnabled, getFeatureVariant } from '../services/unleashService';\nimport { FeatureFlagsContext } from '../contexts/FeatureFlagsContext';\n\n// Hook for accessing feature flags\nexport const useFeatureFlags = () => {\n  const context = useContext(FeatureFlagsContext);\n  \n  if (!context) {\n    throw new Error('useFeatureFlags must be used within a FeatureFlagsProvider');\n  }\n  \n  return context;\n};\n\n// Hook for checking a single feature flag\nexport const useFeatureFlag = (flagName: keyof FeatureFlags, context?: Record<string, string>) => {\n  const [isEnabled, setIsEnabled] = useState<boolean>(() => \n    unleashService.isEnabled(flagName, context)\n  );\n  const [variant, setVariant] = useState<any>(() => \n    unleashService.getVariant(flagName, context)\n  );\n\n  useEffect(() => {\n    // Update when flags change\n    const updateFlag = () => {\n      setIsEnabled(unleashService.isEnabled(flagName, context));\n      setVariant(unleashService.getVariant(flagName, context));\n    };\n\n    // Subscribe to changes\n    const unsubscribe = unleashService.subscribe(updateFlag);\n\n    // Initial update\n    updateFlag();\n\n    return unsubscribe;\n  }, [flagName, context]);\n\n  return { isEnabled, variant };\n};\n\n// Hook for checking multiple feature flags\nexport const useFeatureFlags_Multiple = (flagNames: Array<keyof FeatureFlags>, context?: Record<string, string>) => {\n  const [flags, setFlags] = useState<Partial<FeatureFlags>>(() => {\n    const initialFlags = {} as Partial<FeatureFlags>;\n    flagNames.forEach(flagName => {\n      initialFlags[flagName] = unleashService.isEnabled(flagName, context);\n    });\n    return initialFlags;\n  });\n\n  useEffect(() => {\n    const updateFlags = () => {\n      const updatedFlags = {} as Partial<FeatureFlags>;\n      flagNames.forEach(flagName => {\n        updatedFlags[flagName] = unleashService.isEnabled(flagName, context);\n      });\n      setFlags(updatedFlags);\n    };\n\n    // Subscribe to changes\n    const unsubscribe = unleashService.subscribe(updateFlags);\n\n    // Initial update\n    updateFlags();\n\n    return unsubscribe;\n  }, [flagNames, context]);\n\n  return flags;\n};\n\n// Hook for conditional feature rendering\nexport const useConditionalFeature = (flagName: keyof FeatureFlags, context?: Record<string, string>) => {\n  const { isEnabled } = useFeatureFlag(flagName, context);\n\n  const ConditionalComponent = useCallback(({ children, fallback = null }: {\n    children: React.ReactNode;\n    fallback?: React.ReactNode;\n  }) => {\n    if (isEnabled) {\n      return React.createElement(React.Fragment, null, children);\n    }\n    return React.createElement(React.Fragment, null, fallback);\n  }, [isEnabled]);\n\n  return { isEnabled, ConditionalComponent };\n};\n\n// Hook for feature flag variants with type safety\nexport const useFeatureVariant = <T = any>(\n  flagName: keyof FeatureFlags, \n  defaultValue: T, \n  context?: Record<string, string>\n) => {\n  const [variant, setVariant] = useState<T>(() => {\n    const flagVariant = unleashService.getVariant(flagName, context);\n    return flagVariant?.payload?.value ?? defaultValue;\n  });\n\n  useEffect(() => {\n    const updateVariant = () => {\n      const flagVariant = unleashService.getVariant(flagName, context);\n      setVariant(flagVariant?.payload?.value ?? defaultValue);\n    };\n\n    const unsubscribe = unleashService.subscribe(updateVariant);\n    updateVariant();\n\n    return unsubscribe;\n  }, [flagName, defaultValue, context]);\n\n  return variant;\n};\n\n// Hook for feature flag experimentation\nexport const useExperiment = (\n  experimentName: keyof FeatureFlags,\n  variants: Record<string, any>,\n  context?: Record<string, string>\n) => {\n  const [activeVariant, setActiveVariant] = useState<any>(() => {\n    const variant = unleashService.getVariant(experimentName, context);\n    return variants[variant?.name] || variants.default || null;\n  });\n\n  useEffect(() => {\n    const updateExperiment = () => {\n      const variant = unleashService.getVariant(experimentName, context);\n      setActiveVariant(variants[variant?.name] || variants.default || null);\n    };\n\n    const unsubscribe = unleashService.subscribe(updateExperiment);\n    updateExperiment();\n\n    return unsubscribe;\n  }, [experimentName, variants, context]);\n\n  return activeVariant;\n};\n\n// Hook for gradual rollouts\nexport const useGradualRollout = (\n  flagName: keyof FeatureFlags,\n  userId?: string,\n  context?: Record<string, string>\n) => {\n  const rolloutContext = userId ? { ...context, userId } : context;\n  const { isEnabled } = useFeatureFlag(flagName, rolloutContext);\n  \n  return isEnabled;\n};\n\n// Hook for A/B testing\nexport const useABTest = (\n  experimentFlag: keyof FeatureFlags,\n  variants: { A: any; B: any },\n  context?: Record<string, string>\n) => {\n  const [activeVariant, setActiveVariant] = useState<'A' | 'B'>('A');\n  const [variantData, setVariantData] = useState<any>(variants.A);\n\n  useEffect(() => {\n    const updateTest = () => {\n      const variant = unleashService.getVariant(experimentFlag, context);\n      const variantName = variant?.name as 'A' | 'B';\n      \n      if (variantName && variants[variantName]) {\n        setActiveVariant(variantName);\n        setVariantData(variants[variantName]);\n      } else {\n        // Default to A if variant not found\n        setActiveVariant('A');\n        setVariantData(variants.A);\n      }\n    };\n\n    const unsubscribe = unleashService.subscribe(updateTest);\n    updateTest();\n\n    return unsubscribe;\n  }, [experimentFlag, variants, context]);\n\n  return { variant: activeVariant, data: variantData };\n};\n\n// Hook for debugging feature flags\nexport const useFeatureFlagsDebug = () => {\n  const [debugInfo, setDebugInfo] = useState(() => unleashService.getStatus());\n  const [allFlags, setAllFlags] = useState<FeatureFlags>(() => unleashService.getAllFlags());\n\n  useEffect(() => {\n    const updateDebugInfo = () => {\n      setDebugInfo(unleashService.getStatus());\n      setAllFlags(unleashService.getAllFlags());\n    };\n\n    const unsubscribe = unleashService.subscribe(updateDebugInfo);\n    updateDebugInfo();\n\n    return unsubscribe;\n  }, []);\n\n  const refreshFlags = useCallback(() => {\n    setDebugInfo(unleashService.getStatus());\n    setAllFlags(unleashService.getAllFlags());\n  }, []);\n\n  return {\n    status: debugInfo,\n    flags: allFlags,\n    refresh: refreshFlags\n  };\n};\n\n// Utility hook for performance-sensitive feature checks\nexport const useOptimizedFeatureFlag = (flagName: keyof FeatureFlags, context?: Record<string, string>) => {\n  // Use a ref to avoid unnecessary re-renders\n  const [isEnabled, setIsEnabled] = useState<boolean>(() => \n    unleashService.isEnabled(flagName, context)\n  );\n\n  useEffect(() => {\n    let timeoutId: NodeJS.Timeout;\n\n    const updateFlag = () => {\n      // Debounce updates to avoid excessive re-renders\n      clearTimeout(timeoutId);\n      timeoutId = setTimeout(() => {\n        const newValue = unleashService.isEnabled(flagName, context);\n        setIsEnabled(current => current !== newValue ? newValue : current);\n      }, 100);\n    };\n\n    const unsubscribe = unleashService.subscribe(updateFlag);\n    updateFlag();\n\n    return () => {\n      clearTimeout(timeoutId);\n      unsubscribe();\n    };\n  }, [flagName, context]);\n\n  return isEnabled;\n};\n\nexport default useFeatureFlags;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}