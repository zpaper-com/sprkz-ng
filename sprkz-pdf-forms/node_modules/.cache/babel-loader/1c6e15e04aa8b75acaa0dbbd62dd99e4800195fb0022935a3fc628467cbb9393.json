{"ast":null,"code":"var _jsxFileName = \"/home/shawnstorie/sprkz-ng/sprkz-pdf-forms/src/components/debug/FeatureFlagsDebug.tsx\";\nimport React, { useState } from 'react';\nimport { Box, Paper, Typography, Accordion, AccordionSummary, AccordionDetails, Switch, FormControlLabel, Chip, Divider, Alert, List, ListItem, ListItemText, ListItemSecondaryAction, Collapse, IconButton, Tooltip, Badge, Grid, Card, CardContent } from '@mui/material';\nimport { ExpandMore, Refresh, Settings, BugReport, Visibility, VisibilityOff, CheckCircle, Error, Warning } from '@mui/icons-material';\nimport { useFeatureFlags } from '../../contexts/FeatureFlagsContext';\nimport { FEATURE_CATEGORIES, DEFAULT_FEATURE_FLAGS } from '../../services/unleashService';\nimport { useFeatureFlagsDebug } from '../../hooks/useFeatureFlags';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FeatureFlagsDebug = ({\n  position = 'bottom-right',\n  compact = false,\n  visible = false,\n  onToggleVisibility\n}) => {\n  const {\n    getAllFlags,\n    isReady,\n    isInitialized,\n    status,\n    refresh,\n    updateContext\n  } = useFeatureFlags();\n  const {\n    flags: debugFlags,\n    refresh: refreshDebug\n  } = useFeatureFlagsDebug();\n  const [isExpanded, setIsExpanded] = useState(!compact);\n  const [selectedCategory, setSelectedCategory] = useState('ALL');\n  const [contextOverrides, setContextOverrides] = useState({});\n  const [showOnlyDifferences, setShowOnlyDifferences] = useState(false);\n\n  // Get position styles\n  const getPositionStyles = () => {\n    const baseStyles = {\n      position: 'fixed',\n      zIndex: 9999,\n      maxWidth: compact ? 320 : 600,\n      maxHeight: compact ? 400 : 800,\n      overflow: 'auto'\n    };\n    switch (position) {\n      case 'bottom-right':\n        return {\n          ...baseStyles,\n          bottom: 16,\n          right: 16\n        };\n      case 'bottom-left':\n        return {\n          ...baseStyles,\n          bottom: 16,\n          left: 16\n        };\n      case 'top-right':\n        return {\n          ...baseStyles,\n          top: 16,\n          right: 16\n        };\n      case 'top-left':\n        return {\n          ...baseStyles,\n          top: 16,\n          left: 16\n        };\n      default:\n        return {\n          ...baseStyles,\n          bottom: 16,\n          right: 16\n        };\n    }\n  };\n\n  // Get status indicator\n  const getStatusIndicator = () => {\n    if (!isReady) {\n      return {\n        color: 'warning',\n        icon: /*#__PURE__*/_jsxDEV(Warning, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 49\n        }, this),\n        text: 'Loading'\n      };\n    }\n    if (!isInitialized) {\n      return {\n        color: 'error',\n        icon: /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 47\n        }, this),\n        text: 'Failed'\n      };\n    }\n    return {\n      color: 'success',\n      icon: /*#__PURE__*/_jsxDEV(CheckCircle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 47\n      }, this),\n      text: 'Ready'\n    };\n  };\n\n  // Filter flags based on category and differences\n  const getFilteredFlags = () => {\n    const allFlags = getAllFlags(contextOverrides);\n    let filteredFlags = allFlags;\n\n    // Filter by category\n    if (selectedCategory !== 'ALL') {\n      const categoryKeys = FEATURE_CATEGORIES[selectedCategory];\n      filteredFlags = Object.fromEntries(Object.entries(allFlags).filter(([key]) => categoryKeys.includes(key)));\n    }\n\n    // Show only differences from defaults\n    if (showOnlyDifferences) {\n      filteredFlags = Object.fromEntries(Object.entries(filteredFlags).filter(([key, value]) => value !== DEFAULT_FEATURE_FLAGS[key]));\n    }\n    return filteredFlags;\n  };\n  const statusInfo = getStatusIndicator();\n  const filteredFlags = getFilteredFlags();\n\n  // Toggle visibility\n  const toggleVisibility = () => {\n    const newVisible = !visible;\n    onToggleVisibility === null || onToggleVisibility === void 0 ? void 0 : onToggleVisibility(newVisible);\n  };\n\n  // Refresh all flags\n  const handleRefresh = () => {\n    refresh();\n    refreshDebug();\n  };\n\n  // Update context\n  const handleContextUpdate = (key, value) => {\n    const newContext = {\n      ...contextOverrides,\n      [key]: value\n    };\n    setContextOverrides(newContext);\n    updateContext(newContext);\n  };\n  if (!visible) {\n    // Floating toggle button\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: getPositionStyles(),\n      children: /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"Feature Flags Debug Panel\",\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: toggleVisibility,\n          sx: {\n            backgroundColor: 'primary.main',\n            color: 'white',\n            '&:hover': {\n              backgroundColor: 'primary.dark'\n            },\n            boxShadow: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(Badge, {\n            badgeContent: Object.keys(filteredFlags).length,\n            color: statusInfo.color,\n            variant: \"dot\",\n            children: /*#__PURE__*/_jsxDEV(Settings, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: getPositionStyles(),\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 8,\n      sx: {\n        opacity: 0.95,\n        backdropFilter: 'blur(4px)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 2,\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between',\n          borderBottom: '1px solid',\n          borderColor: 'divider'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(BugReport, {\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            component: \"div\",\n            sx: {\n              fontWeight: 600,\n              fontSize: '0.875rem'\n            },\n            children: \"Feature Flags\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Chip, {\n            icon: statusInfo.icon,\n            label: statusInfo.text,\n            size: \"small\",\n            color: statusInfo.color,\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"Refresh flags\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"small\",\n              onClick: handleRefresh,\n              children: /*#__PURE__*/_jsxDEV(Refresh, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"Toggle panel size\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"small\",\n              onClick: () => setIsExpanded(!isExpanded),\n              children: isExpanded ? /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 31\n              }, this) : /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 51\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"Close panel\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"small\",\n              onClick: toggleVisibility,\n              children: /*#__PURE__*/_jsxDEV(ExpandMore, {\n                sx: {\n                  transform: 'rotate(90deg)'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n        in: isExpanded,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            p: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Card, {\n            variant: \"outlined\",\n            sx: {\n              mb: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              sx: {\n                py: 1.5\n              },\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 2,\n                alignItems: \"center\",\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 6,\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"caption\",\n                    color: \"textSecondary\",\n                    children: \"Status\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 222,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    fontWeight: \"600\",\n                    children: isInitialized ? 'Connected' : 'Fallback Mode'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 225,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 6,\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"caption\",\n                    color: \"textSecondary\",\n                    children: \"Flag Count\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 230,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    fontWeight: \"600\",\n                    children: [Object.keys(filteredFlags).length, \" / \", Object.keys(DEFAULT_FEATURE_FLAGS).length]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 233,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 2,\n              display: 'flex',\n              flexWrap: 'wrap',\n              gap: 1\n            },\n            children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              control: /*#__PURE__*/_jsxDEV(Switch, {\n                size: \"small\",\n                checked: showOnlyDifferences,\n                onChange: e => setShowOnlyDifferences(e.target.checked)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 19\n              }, this),\n              label: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"caption\",\n                children: \"Only Differences\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              color: \"textSecondary\",\n              gutterBottom: true,\n              children: \"Category Filter\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                flexWrap: 'wrap',\n                gap: 0.5\n              },\n              children: [/*#__PURE__*/_jsxDEV(Chip, {\n                label: \"ALL\",\n                size: \"small\",\n                onClick: () => setSelectedCategory('ALL'),\n                color: selectedCategory === 'ALL' ? 'primary' : 'default',\n                variant: selectedCategory === 'ALL' ? 'filled' : 'outlined'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 17\n              }, this), Object.keys(FEATURE_CATEGORIES).map(category => /*#__PURE__*/_jsxDEV(Chip, {\n                label: category,\n                size: \"small\",\n                onClick: () => setSelectedCategory(category),\n                color: selectedCategory === category ? 'primary' : 'default',\n                variant: selectedCategory === category ? 'filled' : 'outlined'\n              }, category, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            sx: {\n              my: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              maxHeight: 300,\n              overflow: 'auto'\n            },\n            children: Object.keys(filteredFlags).length === 0 ? /*#__PURE__*/_jsxDEV(Alert, {\n              severity: \"info\",\n              sx: {\n                mb: 2\n              },\n              children: showOnlyDifferences ? 'No flags differ from defaults' : 'No flags in selected category'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(List, {\n              dense: true,\n              children: Object.entries(filteredFlags).map(([flagName, isEnabled]) => {\n                const isDefault = isEnabled === DEFAULT_FEATURE_FLAGS[flagName];\n                return /*#__PURE__*/_jsxDEV(ListItem, {\n                  sx: {\n                    px: 1,\n                    py: 0.5,\n                    borderRadius: 1,\n                    backgroundColor: isDefault ? 'transparent' : 'action.hover'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      sx: {\n                        fontWeight: isDefault ? 400 : 600\n                      },\n                      children: flagName.replace(/_/g, ' ')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 313,\n                      columnNumber: 29\n                    }, this),\n                    secondary: /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"caption\",\n                      color: \"textSecondary\",\n                      children: flagName\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 318,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 311,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n                    children: /*#__PURE__*/_jsxDEV(Chip, {\n                      label: isEnabled ? 'ON' : 'OFF',\n                      size: \"small\",\n                      color: isEnabled ? 'success' : 'default',\n                      variant: isDefault ? 'outlined' : 'filled'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 324,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 323,\n                    columnNumber: 25\n                  }, this)]\n                }, flagName, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this), process.env.NODE_ENV === 'development' && /*#__PURE__*/_jsxDEV(Accordion, {\n            variant: \"outlined\",\n            sx: {\n              mt: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n              expandIcon: /*#__PURE__*/_jsxDEV(ExpandMore, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 47\n              }, this),\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"caption\",\n                children: [\"Context Overrides (\", Object.keys(contextOverrides).length, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n              children: /*#__PURE__*/_jsxDEV(Alert, {\n                severity: \"warning\",\n                sx: {\n                  mb: 2\n                },\n                children: \"Development only: Override context for testing\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 5\n  }, this);\n};\nexport default FeatureFlagsDebug;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}