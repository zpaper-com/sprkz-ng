{"ast":null,"code":"import { SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME, SEMANTIC_ATTRIBUTE_PROFILE_ID } from '../semanticAttributes.js';\n\n/**\n * Converts a transaction event to a span JSON object.\n */\nfunction convertTransactionEventToSpanJson(event) {\n  const {\n    trace_id,\n    parent_span_id,\n    span_id,\n    status,\n    origin,\n    data,\n    op\n  } = event.contexts?.trace ?? {};\n  return {\n    data: data ?? {},\n    description: event.transaction,\n    op,\n    parent_span_id,\n    span_id: span_id ?? '',\n    start_timestamp: event.start_timestamp ?? 0,\n    status,\n    timestamp: event.timestamp,\n    trace_id: trace_id ?? '',\n    origin,\n    profile_id: data?.[SEMANTIC_ATTRIBUTE_PROFILE_ID],\n    exclusive_time: data?.[SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME],\n    measurements: event.measurements,\n    is_segment: true\n  };\n}\n\n/**\n * Converts a span JSON object to a transaction event.\n */\nfunction convertSpanJsonToTransactionEvent(span) {\n  return {\n    type: 'transaction',\n    timestamp: span.timestamp,\n    start_timestamp: span.start_timestamp,\n    transaction: span.description,\n    contexts: {\n      trace: {\n        trace_id: span.trace_id,\n        span_id: span.span_id,\n        parent_span_id: span.parent_span_id,\n        op: span.op,\n        status: span.status,\n        origin: span.origin,\n        data: {\n          ...span.data,\n          ...(span.profile_id && {\n            [SEMANTIC_ATTRIBUTE_PROFILE_ID]: span.profile_id\n          }),\n          ...(span.exclusive_time && {\n            [SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME]: span.exclusive_time\n          })\n        }\n      }\n    },\n    measurements: span.measurements\n  };\n}\nexport { convertSpanJsonToTransactionEvent, convertTransactionEventToSpanJson };","map":{"version":3,"names":["convertTransactionEventToSpanJson","event","trace_id","parent_span_id","span_id","status","origin","data","op","contexts","trace","description","transaction","start_timestamp","timestamp","profile_id","SEMANTIC_ATTRIBUTE_PROFILE_ID","exclusive_time","SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME","measurements","is_segment","convertSpanJsonToTransactionEvent","span","type"],"sources":["/home/shawnstorie/sprkz-ng/sprkz-pdf-forms/node_modules/@sentry/core/src/utils/transactionEvent.ts"],"sourcesContent":["import { SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME, SEMANTIC_ATTRIBUTE_PROFILE_ID } from '../semanticAttributes';\nimport type { TransactionEvent } from '../types-hoist/event';\nimport type { SpanJSON } from '../types-hoist/span';\n\n/**\n * Converts a transaction event to a span JSON object.\n */\nexport function convertTransactionEventToSpanJson(event: TransactionEvent): SpanJSON {\n  const { trace_id, parent_span_id, span_id, status, origin, data, op } = event.contexts?.trace ?? {};\n\n  return {\n    data: data ?? {},\n    description: event.transaction,\n    op,\n    parent_span_id,\n    span_id: span_id ?? '',\n    start_timestamp: event.start_timestamp ?? 0,\n    status,\n    timestamp: event.timestamp,\n    trace_id: trace_id ?? '',\n    origin,\n    profile_id: data?.[SEMANTIC_ATTRIBUTE_PROFILE_ID] as string | undefined,\n    exclusive_time: data?.[SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME] as number | undefined,\n    measurements: event.measurements,\n    is_segment: true,\n  };\n}\n\n/**\n * Converts a span JSON object to a transaction event.\n */\nexport function convertSpanJsonToTransactionEvent(span: SpanJSON): TransactionEvent {\n  return {\n    type: 'transaction',\n    timestamp: span.timestamp,\n    start_timestamp: span.start_timestamp,\n    transaction: span.description,\n    contexts: {\n      trace: {\n        trace_id: span.trace_id,\n        span_id: span.span_id,\n        parent_span_id: span.parent_span_id,\n        op: span.op,\n        status: span.status,\n        origin: span.origin,\n        data: {\n          ...span.data,\n          ...(span.profile_id && { [SEMANTIC_ATTRIBUTE_PROFILE_ID]: span.profile_id }),\n          ...(span.exclusive_time && { [SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME]: span.exclusive_time }),\n        },\n      },\n    },\n    measurements: span.measurements,\n  };\n}\n"],"mappings":";;AAIA;AACA;AACA;AACO,SAASA,iCAAiCA,CAACC,KAAK,EAA8B;EACnF,MAAM;IAAEC,QAAQ;IAAEC,cAAc;IAAEC,OAAO;IAAEC,MAAM;IAAEC,MAAM;IAAEC,IAAI;IAAEC;EAAA,CAAG,GAAIP,KAAK,CAACQ,QAAQ,EAAEC,KAAA,IAAS,EAAE;EAEnG,OAAO;IACLH,IAAI,EAAEA,IAAA,IAAQ,EAAE;IAChBI,WAAW,EAAEV,KAAK,CAACW,WAAW;IAC9BJ,EAAE;IACFL,cAAc;IACdC,OAAO,EAAEA,OAAA,IAAW,EAAE;IACtBS,eAAe,EAAEZ,KAAK,CAACY,eAAA,IAAmB,CAAC;IAC3CR,MAAM;IACNS,SAAS,EAAEb,KAAK,CAACa,SAAS;IAC1BZ,QAAQ,EAAEA,QAAA,IAAY,EAAE;IACxBI,MAAM;IACNS,UAAU,EAAER,IAAI,GAAGS,6BAA6B;IAChDC,cAAc,EAAEV,IAAI,GAAGW,iCAAiC;IACxDC,YAAY,EAAElB,KAAK,CAACkB,YAAY;IAChCC,UAAU,EAAE;EAChB,CAAG;AACH;;AAEA;AACA;AACA;AACO,SAASC,iCAAiCA,CAACC,IAAI,EAA8B;EAClF,OAAO;IACLC,IAAI,EAAE,aAAa;IACnBT,SAAS,EAAEQ,IAAI,CAACR,SAAS;IACzBD,eAAe,EAAES,IAAI,CAACT,eAAe;IACrCD,WAAW,EAAEU,IAAI,CAACX,WAAW;IAC7BF,QAAQ,EAAE;MACRC,KAAK,EAAE;QACLR,QAAQ,EAAEoB,IAAI,CAACpB,QAAQ;QACvBE,OAAO,EAAEkB,IAAI,CAAClB,OAAO;QACrBD,cAAc,EAAEmB,IAAI,CAACnB,cAAc;QACnCK,EAAE,EAAEc,IAAI,CAACd,EAAE;QACXH,MAAM,EAAEiB,IAAI,CAACjB,MAAM;QACnBC,MAAM,EAAEgB,IAAI,CAAChB,MAAM;QACnBC,IAAI,EAAE;UACJ,GAAGe,IAAI,CAACf,IAAI;UACZ,IAAIe,IAAI,CAACP,UAAA,IAAc;YAAE,CAACC,6BAA6B,GAAGM,IAAI,CAACP;UAAA,CAAY,CAAC;UAC5E,IAAIO,IAAI,CAACL,cAAA,IAAkB;YAAE,CAACC,iCAAiC,GAAGI,IAAI,CAACL;UAAA,CAAgB;QACjG;MACA;IACA,CAAK;IACDE,YAAY,EAAEG,IAAI,CAACH;EACvB,CAAG;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}