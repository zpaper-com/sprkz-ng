{"ast":null,"code":"import { defineIntegration, _INTERNAL_copyFlagsFromScopeToEvent, _INTERNAL_insertFlagToScope, _INTERNAL_addFeatureFlagToActiveSpan } from '@sentry/core';\n\n/**\n * Sentry integration for capturing feature flag evaluations from the Statsig js-client SDK.\n *\n * See the [feature flag documentation](https://develop.sentry.dev/sdk/expected-features/#feature-flags) for more information.\n *\n * @example\n * ```\n * import { StatsigClient } from '@statsig/js-client';\n * import * as Sentry from '@sentry/browser';\n *\n * const statsigClient = new StatsigClient();\n *\n * Sentry.init({\n *   dsn: '___PUBLIC_DSN___',\n *   integrations: [Sentry.statsigIntegration({featureFlagClient: statsigClient})],\n * });\n *\n * await statsigClient.initializeAsync();  // or statsigClient.initializeSync();\n *\n * const result = statsigClient.checkGate('my-feature-gate');\n * Sentry.captureException(new Error('something went wrong'));\n * ```\n */\nconst statsigIntegration = defineIntegration(({\n  featureFlagClient: statsigClient\n}) => {\n  return {\n    name: 'Statsig',\n    setup(_client) {\n      statsigClient.on('gate_evaluation', event => {\n        _INTERNAL_insertFlagToScope(event.gate.name, event.gate.value);\n        _INTERNAL_addFeatureFlagToActiveSpan(event.gate.name, event.gate.value);\n      });\n    },\n    processEvent(event, _hint, _client) {\n      return _INTERNAL_copyFlagsFromScopeToEvent(event);\n    }\n  };\n});\nexport { statsigIntegration };\n//# sourceMappingURL=integration.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}