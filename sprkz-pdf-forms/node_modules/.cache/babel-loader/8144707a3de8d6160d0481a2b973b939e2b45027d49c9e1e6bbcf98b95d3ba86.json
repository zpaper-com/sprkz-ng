{"ast":null,"code":"import * as Sentry from '@sentry/react';\n\n// Sentry configuration for error tracking and performance monitoring\nexport const initSentry = () => {\n  // Only initialize in production or when explicitly enabled\n  const isDevelopment = process.env.NODE_ENV === 'development';\n  const sentryDsn = process.env.REACT_APP_SENTRY_DSN;\n  const enableInDev = process.env.REACT_APP_SENTRY_ENABLE_DEV === 'true';\n  if (!sentryDsn || isDevelopment && !enableInDev) {\n    console.log('Sentry not initialized:', {\n      hasDsn: !!sentryDsn,\n      isDevelopment,\n      enableInDev\n    });\n    return;\n  }\n  Sentry.init({\n    dsn: sentryDsn,\n    environment: process.env.REACT_APP_SENTRY_ENVIRONMENT || process.env.NODE_ENV,\n    release: process.env.REACT_APP_VERSION || 'development',\n    // Performance Monitoring\n    integrations: [Sentry.browserTracingIntegration({\n      // Capture interactions and navigation\n      tracePropagationTargets: [window.location.hostname, /^https:\\/\\/api\\.sprkz\\.com/, /^https:\\/\\/unleash\\./]\n    })],\n    // Performance sampling\n    tracesSampleRate: isDevelopment ? 1.0 : 0.1,\n    // Error sampling\n    sampleRate: 1.0,\n    // Session sampling\n    replaysSessionSampleRate: isDevelopment ? 1.0 : 0.1,\n    replaysOnErrorSampleRate: 1.0,\n    // Additional configuration\n    beforeSend(event, hint) {\n      // Filter out development errors we don't want to track\n      if (isDevelopment) {\n        const error = hint.originalException;\n\n        // Filter out React warnings in development\n        if (error && error instanceof Error) {\n          if (error.message.includes('Warning:')) {\n            return null;\n          }\n        }\n      }\n\n      // Filter out network errors for external resources\n      if (event.exception) {\n        var _event$exception$valu, _exception$value, _exception$value2;\n        const exception = (_event$exception$valu = event.exception.values) === null || _event$exception$valu === void 0 ? void 0 : _event$exception$valu[0];\n        if (exception !== null && exception !== void 0 && (_exception$value = exception.value) !== null && _exception$value !== void 0 && _exception$value.includes('NetworkError') || exception !== null && exception !== void 0 && (_exception$value2 = exception.value) !== null && _exception$value2 !== void 0 && _exception$value2.includes('Failed to fetch')) {\n          return null;\n        }\n      }\n      return event;\n    },\n    // User context\n    beforeBreadcrumb(breadcrumb) {\n      var _breadcrumb$data, _breadcrumb$data$url;\n      // Filter out noisy breadcrumbs\n      if (breadcrumb.category === 'console' && breadcrumb.level === 'debug') {\n        return null;\n      }\n      if (breadcrumb.category === 'xhr' && (_breadcrumb$data = breadcrumb.data) !== null && _breadcrumb$data !== void 0 && (_breadcrumb$data$url = _breadcrumb$data.url) !== null && _breadcrumb$data$url !== void 0 && _breadcrumb$data$url.includes('/health')) {\n        return null;\n      }\n      return breadcrumb;\n    },\n    // Tags for better organization\n    initialScope: {\n      tags: {\n        component: 'sprkz-pdf-forms',\n        version: process.env.REACT_APP_VERSION || 'development'\n      }\n    }\n  });\n  console.log('Sentry initialized successfully', {\n    environment: process.env.REACT_APP_SENTRY_ENVIRONMENT,\n    release: process.env.REACT_APP_VERSION,\n    tracesSampleRate: isDevelopment ? 1.0 : 0.1\n  });\n  return true;\n};\n\n// React Error Boundary integration\nexport const ErrorBoundary = Sentry.withErrorBoundary;\n\n// Performance transaction helpers using new Sentry API\nexport const performance = {\n  // Start a performance transaction\n  startTransaction: (name, op = 'navigation') => {\n    return Sentry.startSpan({\n      name,\n      op,\n      attributes: {\n        component: 'sprkz-pdf-forms'\n      }\n    }, span => span);\n  },\n  // Measure function performance\n  measureFunction: async (name, fn, tags) => {\n    return await Sentry.startSpan({\n      name,\n      op: 'function',\n      attributes: {\n        component: 'sprkz-pdf-forms',\n        ...tags\n      }\n    }, async () => {\n      try {\n        const result = await fn();\n        return result;\n      } catch (error) {\n        Sentry.captureException(error);\n        throw error;\n      }\n    });\n  },\n  // Add spans to existing transaction\n  addSpan: (description, op = 'http') => {\n    const activeSpan = Sentry.getActiveSpan();\n    if (activeSpan) {\n      return Sentry.startInactiveSpan({\n        name: description,\n        op\n      });\n    }\n    return null;\n  }\n};\n\n// PDF-specific error tracking\nexport const pdfErrors = {\n  // Track PDF loading errors\n  trackLoadError: (url, error) => {\n    Sentry.captureException(error, {\n      tags: {\n        errorType: 'pdf_load_error',\n        pdfUrl: url\n      },\n      extra: {\n        url,\n        errorMessage: error.message\n      }\n    });\n  },\n  // Track form field extraction errors\n  trackFieldExtractionError: (pdfUrl, error) => {\n    Sentry.captureException(error, {\n      tags: {\n        errorType: 'field_extraction_error'\n      },\n      extra: {\n        pdfUrl,\n        errorMessage: error.message\n      }\n    });\n  },\n  // Track signature creation errors\n  trackSignatureError: (signatureType, error) => {\n    Sentry.captureException(error, {\n      tags: {\n        errorType: 'signature_error',\n        signatureType\n      },\n      extra: {\n        signatureType,\n        errorMessage: error.message\n      }\n    });\n  },\n  // Track form submission errors\n  trackSubmissionError: (formData, error) => {\n    Sentry.captureException(error, {\n      tags: {\n        errorType: 'form_submission_error'\n      },\n      extra: {\n        fieldCount: Object.keys(formData).length,\n        errorMessage: error.message,\n        // Don't send actual form data for privacy\n        hasSignature: Object.values(formData).some(v => typeof v === 'object' && (v === null || v === void 0 ? void 0 : v.type) === 'signature')\n      }\n    });\n  }\n};\n\n// Feature flag error tracking\nexport const featureFlagErrors = {\n  // Track feature flag initialization errors\n  trackInitError: error => {\n    Sentry.captureException(error, {\n      tags: {\n        errorType: 'feature_flag_init_error'\n      }\n    });\n  },\n  // Track flag evaluation errors\n  trackEvaluationError: (flagName, error) => {\n    Sentry.captureException(error, {\n      tags: {\n        errorType: 'feature_flag_evaluation_error',\n        flagName\n      }\n    });\n  }\n};\n\n// User interaction tracking\nexport const userInteractions = {\n  // Track wizard navigation\n  trackWizardNavigation: (action, fieldIndex) => {\n    Sentry.addBreadcrumb({\n      message: `Wizard ${action}`,\n      category: 'user-interaction',\n      data: {\n        action,\n        fieldIndex\n      }\n    });\n  },\n  // Track signature creation\n  trackSignatureCreation: type => {\n    Sentry.addBreadcrumb({\n      message: 'Signature created',\n      category: 'user-interaction',\n      data: {\n        signatureType: type\n      }\n    });\n  },\n  // Track form completion\n  trackFormCompletion: (fieldCount, completionTime) => {\n    Sentry.captureMessage('Form completed', {\n      level: 'info',\n      tags: {\n        eventType: 'form_completion'\n      },\n      extra: {\n        fieldCount,\n        completionTimeMs: completionTime\n      }\n    });\n  }\n};\n\n// Validation error tracking\nexport const validationErrors = {\n  // Track validation failures\n  trackValidationError: (fieldName, errors) => {\n    Sentry.addBreadcrumb({\n      message: 'Field validation failed',\n      category: 'validation',\n      data: {\n        fieldName,\n        errors\n      }\n    });\n  },\n  // Track form-wide validation issues\n  trackFormValidationError: fieldErrors => {\n    const errorCount = Object.keys(fieldErrors).length;\n    const totalErrors = Object.values(fieldErrors).flat().length;\n    Sentry.captureMessage('Form validation failed', {\n      level: 'warning',\n      tags: {\n        eventType: 'form_validation_error'\n      },\n      extra: {\n        fieldsWithErrors: errorCount,\n        totalErrors,\n        fieldNames: Object.keys(fieldErrors)\n      }\n    });\n  }\n};\nexport default Sentry;","map":{"version":3,"names":["Sentry","initSentry","isDevelopment","process","env","NODE_ENV","sentryDsn","REACT_APP_SENTRY_DSN","enableInDev","REACT_APP_SENTRY_ENABLE_DEV","console","log","hasDsn","init","dsn","environment","REACT_APP_SENTRY_ENVIRONMENT","release","REACT_APP_VERSION","integrations","browserTracingIntegration","tracePropagationTargets","window","location","hostname","tracesSampleRate","sampleRate","replaysSessionSampleRate","replaysOnErrorSampleRate","beforeSend","event","hint","error","originalException","Error","message","includes","exception","_event$exception$valu","_exception$value","_exception$value2","values","value","beforeBreadcrumb","breadcrumb","_breadcrumb$data","_breadcrumb$data$url","category","level","data","url","initialScope","tags","component","version","ErrorBoundary","withErrorBoundary","performance","startTransaction","name","op","startSpan","attributes","span","measureFunction","fn","result","captureException","addSpan","description","activeSpan","getActiveSpan","startInactiveSpan","pdfErrors","trackLoadError","errorType","pdfUrl","extra","errorMessage","trackFieldExtractionError","trackSignatureError","signatureType","trackSubmissionError","formData","fieldCount","Object","keys","length","hasSignature","some","v","type","featureFlagErrors","trackInitError","trackEvaluationError","flagName","userInteractions","trackWizardNavigation","action","fieldIndex","addBreadcrumb","trackSignatureCreation","trackFormCompletion","completionTime","captureMessage","eventType","completionTimeMs","validationErrors","trackValidationError","fieldName","errors","trackFormValidationError","fieldErrors","errorCount","totalErrors","flat","fieldsWithErrors","fieldNames"],"sources":["/home/shawnstorie/sprkz-ng/sprkz-pdf-forms/src/config/sentry.ts"],"sourcesContent":["import * as Sentry from '@sentry/react';\n\n// Sentry configuration for error tracking and performance monitoring\nexport const initSentry = () => {\n  // Only initialize in production or when explicitly enabled\n  const isDevelopment = process.env.NODE_ENV === 'development';\n  const sentryDsn = process.env.REACT_APP_SENTRY_DSN;\n  const enableInDev = process.env.REACT_APP_SENTRY_ENABLE_DEV === 'true';\n\n  if (!sentryDsn || (isDevelopment && !enableInDev)) {\n    console.log('Sentry not initialized:', {\n      hasDsn: !!sentryDsn,\n      isDevelopment,\n      enableInDev\n    });\n    return;\n  }\n\n  Sentry.init({\n    dsn: sentryDsn,\n    environment: process.env.REACT_APP_SENTRY_ENVIRONMENT || process.env.NODE_ENV,\n    release: process.env.REACT_APP_VERSION || 'development',\n    \n    // Performance Monitoring\n    integrations: [\n      Sentry.browserTracingIntegration({\n        // Capture interactions and navigation\n        tracePropagationTargets: [\n          window.location.hostname,\n          /^https:\\/\\/api\\.sprkz\\.com/,\n          /^https:\\/\\/unleash\\./\n        ],\n      }),\n    ],\n\n    // Performance sampling\n    tracesSampleRate: isDevelopment ? 1.0 : 0.1,\n\n    // Error sampling\n    sampleRate: 1.0,\n\n    // Session sampling\n    replaysSessionSampleRate: isDevelopment ? 1.0 : 0.1,\n    replaysOnErrorSampleRate: 1.0,\n\n    // Additional configuration\n    beforeSend(event, hint) {\n      // Filter out development errors we don't want to track\n      if (isDevelopment) {\n        const error = hint.originalException;\n        \n        // Filter out React warnings in development\n        if (error && error instanceof Error) {\n          if (error.message.includes('Warning:')) {\n            return null;\n          }\n        }\n      }\n\n      // Filter out network errors for external resources\n      if (event.exception) {\n        const exception = event.exception.values?.[0];\n        if (exception?.value?.includes('NetworkError') || \n            exception?.value?.includes('Failed to fetch')) {\n          return null;\n        }\n      }\n\n      return event;\n    },\n\n    // User context\n    beforeBreadcrumb(breadcrumb) {\n      // Filter out noisy breadcrumbs\n      if (breadcrumb.category === 'console' && breadcrumb.level === 'debug') {\n        return null;\n      }\n      \n      if (breadcrumb.category === 'xhr' && breadcrumb.data?.url?.includes('/health')) {\n        return null;\n      }\n\n      return breadcrumb;\n    },\n\n    // Tags for better organization\n    initialScope: {\n      tags: {\n        component: 'sprkz-pdf-forms',\n        version: process.env.REACT_APP_VERSION || 'development',\n      },\n    },\n  });\n\n  console.log('Sentry initialized successfully', {\n    environment: process.env.REACT_APP_SENTRY_ENVIRONMENT,\n    release: process.env.REACT_APP_VERSION,\n    tracesSampleRate: isDevelopment ? 1.0 : 0.1\n  });\n\n  return true;\n};\n\n// React Error Boundary integration\nexport const ErrorBoundary = Sentry.withErrorBoundary;\n\n// Performance transaction helpers using new Sentry API\nexport const performance = {\n  // Start a performance transaction\n  startTransaction: (name: string, op: string = 'navigation') => {\n    return Sentry.startSpan({\n      name,\n      op,\n      attributes: {\n        component: 'sprkz-pdf-forms'\n      }\n    }, (span) => span);\n  },\n\n  // Measure function performance\n  measureFunction: async <T>(\n    name: string,\n    fn: () => Promise<T> | T,\n    tags?: Record<string, string>\n  ): Promise<T> => {\n    return await Sentry.startSpan({\n      name,\n      op: 'function',\n      attributes: { component: 'sprkz-pdf-forms', ...tags }\n    }, async () => {\n      try {\n        const result = await fn();\n        return result;\n      } catch (error) {\n        Sentry.captureException(error);\n        throw error;\n      }\n    });\n  },\n\n  // Add spans to existing transaction\n  addSpan: (description: string, op: string = 'http') => {\n    const activeSpan = Sentry.getActiveSpan();\n    if (activeSpan) {\n      return Sentry.startInactiveSpan({\n        name: description,\n        op,\n      });\n    }\n    return null;\n  }\n};\n\n// PDF-specific error tracking\nexport const pdfErrors = {\n  // Track PDF loading errors\n  trackLoadError: (url: string, error: Error) => {\n    Sentry.captureException(error, {\n      tags: {\n        errorType: 'pdf_load_error',\n        pdfUrl: url\n      },\n      extra: {\n        url,\n        errorMessage: error.message\n      }\n    });\n  },\n\n  // Track form field extraction errors\n  trackFieldExtractionError: (pdfUrl: string, error: Error) => {\n    Sentry.captureException(error, {\n      tags: {\n        errorType: 'field_extraction_error'\n      },\n      extra: {\n        pdfUrl,\n        errorMessage: error.message\n      }\n    });\n  },\n\n  // Track signature creation errors\n  trackSignatureError: (signatureType: string, error: Error) => {\n    Sentry.captureException(error, {\n      tags: {\n        errorType: 'signature_error',\n        signatureType\n      },\n      extra: {\n        signatureType,\n        errorMessage: error.message\n      }\n    });\n  },\n\n  // Track form submission errors\n  trackSubmissionError: (formData: Record<string, any>, error: Error) => {\n    Sentry.captureException(error, {\n      tags: {\n        errorType: 'form_submission_error'\n      },\n      extra: {\n        fieldCount: Object.keys(formData).length,\n        errorMessage: error.message,\n        // Don't send actual form data for privacy\n        hasSignature: Object.values(formData).some(v => \n          typeof v === 'object' && v?.type === 'signature'\n        )\n      }\n    });\n  }\n};\n\n// Feature flag error tracking\nexport const featureFlagErrors = {\n  // Track feature flag initialization errors\n  trackInitError: (error: Error) => {\n    Sentry.captureException(error, {\n      tags: {\n        errorType: 'feature_flag_init_error'\n      }\n    });\n  },\n\n  // Track flag evaluation errors\n  trackEvaluationError: (flagName: string, error: Error) => {\n    Sentry.captureException(error, {\n      tags: {\n        errorType: 'feature_flag_evaluation_error',\n        flagName\n      }\n    });\n  }\n};\n\n// User interaction tracking\nexport const userInteractions = {\n  // Track wizard navigation\n  trackWizardNavigation: (action: 'start' | 'next' | 'back' | 'submit', fieldIndex: number) => {\n    Sentry.addBreadcrumb({\n      message: `Wizard ${action}`,\n      category: 'user-interaction',\n      data: {\n        action,\n        fieldIndex\n      }\n    });\n  },\n\n  // Track signature creation\n  trackSignatureCreation: (type: 'draw' | 'type' | 'upload') => {\n    Sentry.addBreadcrumb({\n      message: 'Signature created',\n      category: 'user-interaction',\n      data: {\n        signatureType: type\n      }\n    });\n  },\n\n  // Track form completion\n  trackFormCompletion: (fieldCount: number, completionTime: number) => {\n    Sentry.captureMessage('Form completed', {\n      level: 'info',\n      tags: {\n        eventType: 'form_completion'\n      },\n      extra: {\n        fieldCount,\n        completionTimeMs: completionTime\n      }\n    });\n  }\n};\n\n// Validation error tracking\nexport const validationErrors = {\n  // Track validation failures\n  trackValidationError: (fieldName: string, errors: string[]) => {\n    Sentry.addBreadcrumb({\n      message: 'Field validation failed',\n      category: 'validation',\n      data: {\n        fieldName,\n        errors\n      }\n    });\n  },\n\n  // Track form-wide validation issues\n  trackFormValidationError: (fieldErrors: Record<string, string[]>) => {\n    const errorCount = Object.keys(fieldErrors).length;\n    const totalErrors = Object.values(fieldErrors).flat().length;\n    \n    Sentry.captureMessage('Form validation failed', {\n      level: 'warning',\n      tags: {\n        eventType: 'form_validation_error'\n      },\n      extra: {\n        fieldsWithErrors: errorCount,\n        totalErrors,\n        fieldNames: Object.keys(fieldErrors)\n      }\n    });\n  }\n};\n\nexport default Sentry;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}