{"ast":null,"code":"var _jsxFileName = \"/home/shawnstorie/sprkz-ng/sprkz-pdf-forms/src/components/wizard/WizardButton.tsx\";\nimport React from 'react';\nimport { Button, Box, Typography, CircularProgress, Tooltip, useTheme } from '@mui/material';\nimport { PlayArrow, NavigateNext, Edit, Send, CheckCircle, Warning } from '@mui/icons-material';\nimport { useWizard } from '../../contexts/WizardContext';\nimport { microInteractionStyles, createMicroInteraction } from '../../utils/microInteractions';\nimport { useFeatureFlag } from '../../hooks/useFeatureFlags';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const WizardButton = ({\n  size = 'large',\n  showProgress = true,\n  showGuidance = true,\n  disabled = false,\n  className\n}) => {\n  const theme = useTheme();\n  const wizard = useWizard();\n  const buttonState = wizard.getCurrentButtonState();\n\n  // Feature flags for wizard functionality\n  const {\n    isEnabled: enhancedWizardMode\n  } = useFeatureFlag('ENHANCED_WIZARD_MODE');\n  const {\n    isEnabled: progressiveFormFilling\n  } = useFeatureFlag('PROGRESSIVE_FORM_FILLING');\n  const {\n    isEnabled: animationEffects\n  } = useFeatureFlag('ANIMATION_EFFECTS');\n  const {\n    isEnabled: smartFieldDetection\n  } = useFeatureFlag('SMART_FIELD_DETECTION');\n\n  // Get button color mapping for Material-UI\n  const getButtonColor = color => {\n    switch (color) {\n      case 'primary':\n        return 'primary';\n      // Blue\n      case 'secondary':\n        return 'secondary';\n      // Orange  \n      case 'success':\n        return 'success';\n      // Green\n      case 'info':\n        return 'info';\n      // Purple\n      case 'warning':\n        return 'warning';\n      // Yellow\n      case 'error':\n        return 'error';\n      // Red\n      default:\n        return 'primary';\n    }\n  };\n\n  // Get button icon based on wizard state\n  const getButtonIcon = wizardState => {\n    switch (wizardState) {\n      case 'start':\n        return /*#__PURE__*/_jsxDEV(PlayArrow, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 16\n        }, this);\n      case 'next':\n        return /*#__PURE__*/_jsxDEV(NavigateNext, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 16\n        }, this);\n      case 'sign':\n        return /*#__PURE__*/_jsxDEV(Edit, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 16\n        }, this);\n      case 'submit':\n        return /*#__PURE__*/_jsxDEV(Send, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 16\n        }, this);\n      case 'complete':\n        return /*#__PURE__*/_jsxDEV(CheckCircle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(PlayArrow, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 16\n        }, this);\n    }\n  };\n\n  // Get progress color based on completion\n  const getProgressColor = () => {\n    const percentage = wizard.state.completionPercentage;\n    if (percentage >= 100) return theme.palette.success.main;\n    if (percentage >= 75) return theme.palette.info.main;\n    if (percentage >= 50) return theme.palette.warning.main;\n    return theme.palette.primary.main;\n  };\n\n  // Get guidance text\n  const getGuidanceText = () => {\n    const state = wizard.state;\n    switch (state.wizardState) {\n      case 'start':\n        return `Begin completing ${state.totalRequiredFields} required field${state.totalRequiredFields === 1 ? '' : 's'}`;\n      case 'next':\n        if (state.currentField) {\n          return `Navigate to \"${state.currentField.name}\" on page ${state.currentField.page}`;\n        }\n        const remaining = state.totalRequiredFields - state.completedFields.length;\n        return `${remaining} required field${remaining === 1 ? '' : 's'} remaining`;\n      case 'sign':\n        if (state.currentField) {\n          return `Sign \"${state.currentField.name}\" on page ${state.currentField.page}`;\n        }\n        return `Complete signature fields`;\n      case 'submit':\n        return `All fields complete - ready to submit`;\n      case 'complete':\n        return `Form submitted successfully!`;\n      default:\n        return '';\n    }\n  };\n\n  // Handle button click\n  const handleClick = () => {\n    if (!disabled && !buttonState.disabled) {\n      buttonState.action();\n    }\n  };\n  const isDisabled = disabled || buttonState.disabled;\n  const buttonColor = getButtonColor(buttonState.color);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: className,\n    sx: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      gap: 1\n    },\n    children: [showProgress && enhancedWizardMode && wizard.state.totalRequiredFields > 0 && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        alignItems: 'center',\n        gap: 1,\n        mb: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          position: 'relative',\n          display: 'inline-flex'\n        },\n        children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n          variant: \"determinate\",\n          value: wizard.state.completionPercentage,\n          size: 24,\n          thickness: 4,\n          sx: {\n            color: getProgressColor(),\n            ...(animationEffects ? microInteractionStyles.pulseLoading : {}),\n            '& .MuiCircularProgress-circle': {\n              strokeLinecap: 'round'\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            top: 0,\n            left: 0,\n            bottom: 0,\n            right: 0,\n            position: 'absolute',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            component: \"div\",\n            color: \"textSecondary\",\n            sx: {\n              fontSize: '0.625rem',\n              fontWeight: 'bold'\n            },\n            children: [wizard.state.completionPercentage, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"caption\",\n        color: \"textSecondary\",\n        children: [wizard.state.completedFields.length, \" of \", wizard.state.totalRequiredFields, \" completed\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n      title: isDisabled ? \"Complete current field to continue\" : getGuidanceText(),\n      arrow: true,\n      placement: \"top\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: buttonColor,\n          size: size,\n          disabled: isDisabled,\n          onClick: handleClick,\n          startIcon: getButtonIcon(wizard.state.wizardState),\n          sx: {\n            minWidth: size === 'large' ? 160 : size === 'medium' ? 120 : 100,\n            minHeight: size === 'large' ? 48 : size === 'medium' ? 40 : 32,\n            fontSize: size === 'large' ? '1.1rem' : size === 'medium' ? '0.9rem' : '0.8rem',\n            fontWeight: 600,\n            borderRadius: 3,\n            boxShadow: theme.shadows[3],\n            ...(animationEffects ? createMicroInteraction.hoverLift(1, theme.shadows[6]) : {}),\n            ...microInteractionStyles.focusRing,\n            '&.Mui-disabled': {\n              backgroundColor: theme.palette.action.disabledBackground,\n              color: theme.palette.action.disabled\n            },\n            // Color-specific enhancements\n            ...(buttonColor === 'primary' && {\n              background: `linear-gradient(45deg, ${theme.palette.primary.main} 30%, ${theme.palette.primary.light} 90%)`\n            }),\n            ...(buttonColor === 'secondary' && {\n              background: `linear-gradient(45deg, ${theme.palette.secondary.main} 30%, ${theme.palette.secondary.light} 90%)`\n            }),\n            ...(buttonColor === 'success' && {\n              background: `linear-gradient(45deg, ${theme.palette.success.main} 30%, ${theme.palette.success.light} 90%)`\n            }),\n            ...(buttonColor === 'info' && {\n              background: `linear-gradient(45deg, ${theme.palette.info.main} 30%, ${theme.palette.info.light} 90%)`\n            })\n          },\n          children: buttonState.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), showGuidance && enhancedWizardMode && /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"caption\",\n      color: \"textSecondary\",\n      align: \"center\",\n      sx: {\n        maxWidth: 200,\n        lineHeight: 1.2,\n        mt: 0.5,\n        ...(animationEffects ? microInteractionStyles.fadeIn : {})\n      },\n      children: getGuidanceText()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 9\n    }, this), smartFieldDetection && wizard.state.currentField && wizard.state.currentField.validationErrors.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        alignItems: 'center',\n        gap: 0.5,\n        mt: 1,\n        ...(animationEffects ? microInteractionStyles.errorShake : {})\n      },\n      children: [/*#__PURE__*/_jsxDEV(Warning, {\n        color: \"warning\",\n        fontSize: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"caption\",\n        color: \"warning.main\",\n        children: wizard.state.currentField.validationErrors[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}