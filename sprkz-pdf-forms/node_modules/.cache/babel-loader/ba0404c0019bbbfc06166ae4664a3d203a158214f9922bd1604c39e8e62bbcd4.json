{"ast":null,"code":"import { getCurrentScope, getClient } from './currentScopes.js';\n\n/**\n * Send user feedback to Sentry.\n */\nfunction captureFeedback(params, hint = {}, scope = getCurrentScope()) {\n  const {\n    message,\n    name,\n    email,\n    url,\n    source,\n    associatedEventId,\n    tags\n  } = params;\n  const feedbackEvent = {\n    contexts: {\n      feedback: {\n        contact_email: email,\n        name,\n        message,\n        url,\n        source,\n        associated_event_id: associatedEventId\n      }\n    },\n    type: 'feedback',\n    level: 'info',\n    tags\n  };\n  const client = scope?.getClient() || getClient();\n  if (client) {\n    client.emit('beforeSendFeedback', feedbackEvent, hint);\n  }\n  const eventId = scope.captureEvent(feedbackEvent, hint);\n  return eventId;\n}\nexport { captureFeedback };\n//# sourceMappingURL=feedback.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}