{"version":3,"file":"unleash-react.js","sources":["../src/FlagContext.ts","../src/FlagProvider.tsx","../src/useFlagContext.ts","../src/useFlag.ts","../src/useFlags.ts","../src/useFlagsStatus.ts","../src/useVariant.ts","../src/useUnleashContext.ts","../src/useUnleashClient.ts"],"sourcesContent":["import React from 'react';\nimport type { UnleashClient } from 'unleash-proxy-client';\n\nexport interface IFlagContextValue\n  extends Pick<\n    UnleashClient,\n    'on' | 'off' | 'updateContext' | 'isEnabled' | 'getVariant'\n  > {\n  client: UnleashClient;\n  flagsReady: boolean;\n  setFlagsReady: React.Dispatch<\n    React.SetStateAction<IFlagContextValue['flagsReady']>\n  >;\n  flagsError: any;\n  setFlagsError: React.Dispatch<\n    React.SetStateAction<IFlagContextValue['flagsError']>\n  >;\n}\n\nconst FlagContext = React.createContext<IFlagContextValue | null>(null);\n\nexport default FlagContext;\n","/** @format */\n\nimport React, { type FC, type PropsWithChildren, useEffect, useMemo, useState } from 'react';\nimport { type IConfig, UnleashClient } from 'unleash-proxy-client';\nimport FlagContext, { type IFlagContextValue } from './FlagContext';\n\nexport interface IFlagProvider {\n  config?: IConfig;\n  unleashClient?: UnleashClient;\n  startClient?: boolean;\n  stopClient?: boolean;\n  startTransition?: (fn: () => void) => void;\n}\n\nconst offlineConfig: IConfig = {\n  bootstrap: [],\n  disableRefresh: true,\n  disableMetrics: true,\n  url: 'http://localhost',\n  appName: 'offline',\n  clientKey: 'not-used',\n};\n\n// save startTransition as var to avoid webpack analysis (https://github.com/webpack/webpack/issues/14814)\nconst _startTransition = 'startTransition';\n// fallback for React <18 which doesn't support startTransition\n// Fallback for React <18 and exclude startTransition if in React Native\nconst defaultStartTransition = React[_startTransition] || (fn => fn());\n\nconst FlagProvider: FC<PropsWithChildren<IFlagProvider>> = ({\n  config: customConfig,\n  children,\n  unleashClient,\n  startClient = true,\n  stopClient = true,\n  startTransition = defaultStartTransition\n}) => {\n  const config = customConfig || offlineConfig;\n  const client = React.useRef<UnleashClient>(\n    unleashClient || new UnleashClient(config)\n  );\n  const [flagsReady, setFlagsReady] = React.useState(\n    Boolean(\n      unleashClient\n        ? (customConfig?.bootstrap && customConfig?.bootstrapOverride !== false) || unleashClient.isReady?.()\n        : config.bootstrap && config.bootstrapOverride !== false\n    )\n  );\n  const [flagsError, setFlagsError] = useState(client.current.getError?.() || null);\n\n  useEffect(() => {\n    if (!config && !unleashClient) {\n      console.error(\n        `You must provide either a config or an unleash client to the flag provider.\n        If you are initializing the client in useEffect, you can avoid this warning\n        by checking if the client exists before rendering.`\n      );\n    }\n\n    const errorCallback = (e: any) => {\n      startTransition(() => {\n        setFlagsError((currentError: any) => currentError || e);\n      });\n    };\n\n    const clearErrorCallback = (e: any) => {\n      startTransition(() => {\n        setFlagsError(null);\n      });\n    }\n\n    let timeout: ReturnType<typeof setTimeout> | null = null;\n    const readyCallback = () => {\n      // wait for flags to resolve after useFlag gets the same event\n      timeout = setTimeout(() => {\n        startTransition(() => {\n          setFlagsReady(true);\n        });\n      }, 0);\n    };\n\n    client.current.on('ready', readyCallback);\n    client.current.on('error', errorCallback);\n    client.current.on('recovered', clearErrorCallback);\n\n    if (startClient) {\n      // defensively stop the client first\n      client.current.stop();\n      // start the client\n      client.current.start();\n    }\n\n    // stop unleash client on unmount\n    return function cleanup() {\n      if (client.current) {\n        client.current.off('error', errorCallback);\n        client.current.off('ready', readyCallback);\n        client.current.off('recovered', clearErrorCallback);\n        if (stopClient) {\n          client.current.stop();\n        }\n      }\n      if (timeout) {\n        clearTimeout(timeout);\n      }\n    };\n  }, []);\n\n  const context = useMemo<IFlagContextValue>(\n    () => ({\n      on: ((event, callback, ctx) => client.current.on(event, callback, ctx)) as IFlagContextValue['on'],\n      off: ((event, callback) => client.current.off(event, callback)) as IFlagContextValue['off'],\n      updateContext: async (context) => await client.current.updateContext(context),\n      isEnabled: (toggleName) => client.current.isEnabled(toggleName),\n      getVariant: (toggleName) => client.current.getVariant(toggleName),\n      client: client.current,\n      flagsReady,\n      flagsError,\n      setFlagsReady,\n      setFlagsError,\n    }),\n    [flagsReady, flagsError]\n  );\n\n  return (\n    <FlagContext.Provider value={context}>{children}</FlagContext.Provider>\n  );\n};\n\nexport default FlagProvider;\n","import { useContext } from \"react\";\nimport FlagContext, { type IFlagContextValue } from \"./FlagContext\";\nimport type { UnleashClient } from \"unleash-proxy-client\";\n\nconst methods = {\n\ton: (event: string, callback: Function, ctx?: any): UnleashClient => {\n\t\tconsole.error(\"on() must be used within a FlagProvider\");\n\t\treturn mockUnleashClient;\n\t},\n\toff: (event: string, callback?: Function): UnleashClient => {\n\t\tconsole.error(\"off() must be used within a FlagProvider\");\n\t\treturn mockUnleashClient;\n\t},\n\tupdateContext: async () => {\n\t\tconsole.error(\"updateContext() must be used within a FlagProvider\");\n\t\treturn undefined;\n\t},\n\tisEnabled: () => {\n\t\tconsole.error(\"isEnabled() must be used within a FlagProvider\");\n\t\treturn false;\n\t},\n\tgetVariant: () => {\n\t\tconsole.error(\"getVariant() must be used within a FlagProvider\");\n\t\treturn { name: \"disabled\", enabled: false };\n\t}\n};\n\nconst mockUnleashClient = {\n\t...methods,\n\ttoggles: [],\n\timpressionDataAll: {},\n\tcontext: {},\n\tstorage: {},\n\tstart: () => {},\n\tstop: () => {},\n\tisReady: () => false,\n\tgetError: () => null,\n\tgetAllToggles: () => []\n} as unknown as UnleashClient;\n\nconst defaultContextValue: IFlagContextValue = {\n\t...methods,\n\tclient: mockUnleashClient,\n\tflagsReady: false,\n\tsetFlagsReady: () => {\n\t\tconsole.error(\"setFlagsReady() must be used within a FlagProvider\");\n\t},\n\tflagsError: null,\n\tsetFlagsError: () => {\n\t\tconsole.error(\"setFlagsError() must be used within a FlagProvider\");\n\t}\n};\n\nexport function useFlagContext() {\n\tconst context = useContext(FlagContext);\n\tif (!context) {\n\t\tconsole.error(\"useFlagContext() must be used within a FlagProvider\");\n\t\treturn defaultContextValue;\n\t}\n\treturn context;\n}\n","import { useEffect, useState, useRef } from 'react';\nimport { useFlagContext } from './useFlagContext';\n\nconst useFlag = (featureName: string) => {\n  const  { isEnabled, client }  = useFlagContext();\n  const [flag, setFlag] = useState(!!isEnabled(featureName));\n  const flagRef = useRef<typeof flag>();\n  flagRef.current = flag;\n\n  useEffect(() => {\n    if (!client) return;\n\n    const updateHandler = () => {\n      const enabled = isEnabled(featureName);\n      if (enabled !== flagRef.current) {\n        flagRef.current = enabled;\n        setFlag(!!enabled);\n      }\n    };\n\n    const readyHandler = () => {\n      const enabled = isEnabled(featureName);\n      flagRef.current = enabled;\n      setFlag(enabled);\n    };\n\n    client.on('update', updateHandler);\n    client.on('ready', readyHandler);\n\n    return () => {\n      client.off('update', updateHandler);\n      client.off('ready', readyHandler);\n    };\n  }, [client]);\n\n  return flag;\n};\n\nexport default useFlag;\n","import { useEffect, useState } from 'react';\nimport { useFlagContext } from './useFlagContext';\n\nconst useFlags = () => {\n  const { client } = useFlagContext();\n  const [flags, setFlags] = useState(client.getAllToggles());\n\n  useEffect(() => {\n    const onUpdate = () => {\n      setFlags(client.getAllToggles());\n    };\n\n    client.on('update', onUpdate);\n\n    return () => {\n      client.off('update', onUpdate);\n    };\n  }, []);\n\n  return flags;\n};\n\nexport default useFlags;\n","/** @format */\nimport { useFlagContext } from './useFlagContext';\n\nconst useFlagsStatus = () => {\n  const { flagsReady, flagsError } = useFlagContext();\n\n  return { flagsReady, flagsError };\n};\n\nexport default useFlagsStatus;\n","import { useState, useEffect, useRef } from 'react';\nimport { IVariant } from 'unleash-proxy-client';\nimport { useFlagContext } from './useFlagContext';\n\nexport const variantHasChanged = (\n    oldVariant: IVariant,\n    newVariant?: IVariant,\n): boolean => {\n    const variantsAreEqual =\n        oldVariant.name === newVariant?.name &&\n        oldVariant.enabled === newVariant?.enabled &&\n        oldVariant.feature_enabled === newVariant?.feature_enabled &&\n        oldVariant.payload?.type === newVariant?.payload?.type &&\n        oldVariant.payload?.value === newVariant?.payload?.value;\n\n    return !variantsAreEqual;\n};\n\nconst useVariant = (featureName: string): Partial<IVariant> => {\n  const { getVariant, client } = useFlagContext();\n\n  const [variant, setVariant] = useState(getVariant(featureName));\n  const variantRef = useRef<typeof variant>({\n    name: variant.name,\n    enabled: variant.enabled,\n  });\n  variantRef.current = variant;\n\n  useEffect(() => {\n    if (!client) return;\n\n    const updateHandler = () => {\n      const newVariant = getVariant(featureName);\n      if (variantHasChanged(variantRef.current, newVariant)) {\n        setVariant(newVariant);\n        variantRef.current = newVariant;\n      }\n    };\n\n    const readyHandler = () => {\n      const variant = getVariant(featureName);\n      variantRef.current.name = variant?.name;\n      variantRef.current.enabled = variant?.enabled;\n      setVariant(variant);\n    };\n\n    client.on('update', updateHandler);\n    client.on('ready', readyHandler);\n\n    return () => {\n      client.off('update', updateHandler);\n      client.off('ready', readyHandler);\n    };\n  }, [client]);\n\n  return variant || {};\n};\n\nexport default useVariant;\n","import { useFlagContext } from './useFlagContext';\n\nconst useUnleashContext = () => {\n  const { updateContext } = useFlagContext();\n\n  return updateContext;\n};\n\nexport default useUnleashContext;\n","import { useFlagContext } from './useFlagContext';\n\nconst useUnleashClient = () => {\n  const { client } = useFlagContext();\n  return client;\n};\n\nexport default useUnleashClient;\n"],"names":["FlagContext","React","offlineConfig","_startTransition","defaultStartTransition","fn","FlagProvider","customConfig","children","unleashClient","startClient","stopClient","startTransition","config","client","UnleashClient","flagsReady","setFlagsReady","_a","flagsError","setFlagsError","useState","_c","_b","useEffect","errorCallback","e","currentError","clearErrorCallback","timeout","readyCallback","context","useMemo","event","callback","ctx","toggleName","methods","mockUnleashClient","defaultContextValue","useFlagContext","useContext","useFlag","featureName","isEnabled","flag","setFlag","flagRef","useRef","updateHandler","enabled","readyHandler","useFlags","flags","setFlags","onUpdate","useFlagsStatus","variantHasChanged","oldVariant","newVariant","_d","useVariant","getVariant","variant","setVariant","variantRef","useUnleashContext","updateContext","useUnleashClient"],"mappings":"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"}