{"version":3,"file":"index.js","sources":["../../../src/constants.ts","../../../../../node_modules/@sentry-internal/rrweb/dist/rrweb.js","../../../src/types/rrweb.ts","../../../src/util/timestamp.ts","../../../src/coreHandlers/util/addBreadcrumbEvent.ts","../../../src/coreHandlers/util/domUtils.ts","../../../src/coreHandlers/util/onWindowOpen.ts","../../../src/coreHandlers/handleClick.ts","../../../src/util/createBreadcrumb.ts","../../../../../node_modules/@sentry-internal/rrweb-snapshot/dist/rrweb-snapshot.js","../../../src/coreHandlers/util/getAttributesToRecord.ts","../../../src/coreHandlers/handleDom.ts","../../../src/coreHandlers/handleKeyboardEvent.ts","../../../src/util/createPerformanceEntries.ts","../../../src/coreHandlers/performanceObserver.ts","../../../src/debug-build.ts","../../../../replay-worker/build/esm/worker.ts","../../../../replay-worker/build/esm/index.js","../../../src/util/logger.ts","../../../src/eventBuffer/error.ts","../../../src/eventBuffer/EventBufferArray.ts","../../../src/eventBuffer/WorkerHandler.ts","../../../src/eventBuffer/EventBufferCompressionWorker.ts","../../../src/eventBuffer/EventBufferProxy.ts","../../../src/eventBuffer/index.ts","../../../src/util/hasSessionStorage.ts","../../../src/session/clearSession.ts","../../../src/util/isSampled.ts","../../../src/session/saveSession.ts","../../../src/session/Session.ts","../../../src/session/createSession.ts","../../../src/session/fetchSession.ts","../../../src/util/isExpired.ts","../../../src/util/isSessionExpired.ts","../../../src/session/shouldRefreshSession.ts","../../../src/session/loadOrCreateSession.ts","../../../src/util/addEvent.ts","../../../src/util/eventUtils.ts","../../../src/coreHandlers/handleAfterSendEvent.ts","../../../src/coreHandlers/handleBeforeSendEvent.ts","../../../src/coreHandlers/handleBreadcrumbs.ts","../../../src/util/isRrwebError.ts","../../../src/util/resetReplayIdOnDynamicSamplingContext.ts","../../../src/coreHandlers/util/addFeedbackBreadcrumb.ts","../../../src/coreHandlers/util/shouldSampleForBufferEvent.ts","../../../src/coreHandlers/handleGlobalEvent.ts","../../../src/util/createPerformanceSpans.ts","../../../src/coreHandlers/handleHistory.ts","../../../src/util/shouldFilterRequest.ts","../../../src/coreHandlers/util/addNetworkBreadcrumb.ts","../../../src/coreHandlers/util/networkUtils.ts","../../../src/coreHandlers/util/fetchUtils.ts","../../../src/coreHandlers/util/xhrUtils.ts","../../../src/coreHandlers/handleNetworkBreadcrumbs.ts","../../../src/util/addGlobalListeners.ts","../../../src/util/addMemoryEntry.ts","../../../src/util/debounce.ts","../../../src/util/getRecordingSamplingOptions.ts","../../../src/util/handleRecordingEmit.ts","../../../src/util/rrweb.ts","../../../src/util/createReplayEnvelope.ts","../../../src/util/prepareRecordingData.ts","../../../src/util/prepareReplayEvent.ts","../../../src/util/sendReplayRequest.ts","../../../src/util/sendReplay.ts","../../../src/util/throttle.ts","../../../src/replay.ts","../../../src/util/getPrivacyOptions.ts","../../../src/util/maskAttribute.ts","../../../src/integration.ts","../../../src/util/getReplay.ts"],"sourcesContent":["import { GLOBAL_OBJ } from '@sentry/core';\n\n// exporting a separate copy of `WINDOW` rather than exporting the one from `@sentry/browser`\n// prevents the browser package from being bundled in the CDN bundle, and avoids a\n// circular dependency between the browser and replay packages should `@sentry/browser` import\n// from `@sentry/replay` in the future\nexport const WINDOW = GLOBAL_OBJ as typeof GLOBAL_OBJ & Window;\n\nexport const REPLAY_SESSION_KEY = 'sentryReplaySession';\nexport const REPLAY_EVENT_NAME = 'replay_event';\nexport const RECORDING_EVENT_NAME = 'replay_recording';\nexport const UNABLE_TO_SEND_REPLAY = 'Unable to send Replay';\n\n// The idle limit for a session after which recording is paused.\nexport const SESSION_IDLE_PAUSE_DURATION = 300_000; // 5 minutes in ms\n\n// The idle limit for a session after which the session expires.\nexport const SESSION_IDLE_EXPIRE_DURATION = 900_000; // 15 minutes in ms\n\n/** Default flush delays */\nexport const DEFAULT_FLUSH_MIN_DELAY = 5_000;\n// XXX: Temp fix for our debounce logic where `maxWait` would never occur if it\n// was the same as `wait`\nexport const DEFAULT_FLUSH_MAX_DELAY = 5_500;\n\n/* How long to wait for error checkouts */\nexport const BUFFER_CHECKOUT_TIME = 60_000;\n\nexport const RETRY_BASE_INTERVAL = 5000;\nexport const RETRY_MAX_COUNT = 3;\n\n/* The max (uncompressed) size in bytes of a network body. Any body larger than this will be truncated. */\nexport const NETWORK_BODY_MAX_SIZE = 150_000;\n\n/* The max size of a single console arg that is captured. Any arg larger than this will be truncated. */\nexport const CONSOLE_ARG_MAX_SIZE = 5_000;\n\n/* Min. time to wait before we consider something a slow click. */\nexport const SLOW_CLICK_THRESHOLD = 3_000;\n/* For scroll actions after a click, we only look for a very short time period to detect programmatic scrolling. */\nexport const SLOW_CLICK_SCROLL_TIMEOUT = 300;\n\n/** When encountering a total segment size exceeding this size, stop the replay (as we cannot properly ingest it). */\nexport const REPLAY_MAX_EVENT_BUFFER_SIZE = 20_000_000; // ~20MB\n\n/** Replays must be min. 5s long before we send them. */\nexport const MIN_REPLAY_DURATION = 4_999;\n/* The max. allowed value that the minReplayDuration can be set to. */\nexport const MIN_REPLAY_DURATION_LIMIT = 15_000;\n\n/** The max. length of a replay. */\nexport const MAX_REPLAY_DURATION = 3_600_000; // 60 minutes in ms;\n\n/** Default attributes to be ignored when `maskAllText` is enabled */\nexport const DEFAULT_IGNORED_ATTRIBUTES = ['title', 'placeholder'];\n","var __defProp$1 = Object.defineProperty;\nvar __defNormalProp$1 = (obj, key, value) => key in obj ? __defProp$1(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField$1 = (obj, key, value) => __defNormalProp$1(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\nvar NodeType$2 = /* @__PURE__ */ ((NodeType2) => {\n  NodeType2[NodeType2[\"Document\"] = 0] = \"Document\";\n  NodeType2[NodeType2[\"DocumentType\"] = 1] = \"DocumentType\";\n  NodeType2[NodeType2[\"Element\"] = 2] = \"Element\";\n  NodeType2[NodeType2[\"Text\"] = 3] = \"Text\";\n  NodeType2[NodeType2[\"CDATA\"] = 4] = \"CDATA\";\n  NodeType2[NodeType2[\"Comment\"] = 5] = \"Comment\";\n  return NodeType2;\n})(NodeType$2 || {});\nfunction isElement(n2) {\n  return n2.nodeType === n2.ELEMENT_NODE;\n}\nfunction isShadowRoot(n2) {\n  const host = n2?.host;\n  return Boolean(host?.shadowRoot === n2);\n}\nfunction isNativeShadowDom(shadowRoot) {\n  return Object.prototype.toString.call(shadowRoot) === \"[object ShadowRoot]\";\n}\nfunction fixBrowserCompatibilityIssuesInCSS(cssText) {\n  if (cssText.includes(\" background-clip: text;\") && !cssText.includes(\" -webkit-background-clip: text;\")) {\n    cssText = cssText.replace(\n      /\\sbackground-clip:\\s*text;/g,\n      \" -webkit-background-clip: text; background-clip: text;\"\n    );\n  }\n  return cssText;\n}\nfunction escapeImportStatement(rule) {\n  const { cssText } = rule;\n  if (cssText.split('\"').length < 3) return cssText;\n  const statement = [\"@import\", `url(${JSON.stringify(rule.href)})`];\n  if (rule.layerName === \"\") {\n    statement.push(`layer`);\n  } else if (rule.layerName) {\n    statement.push(`layer(${rule.layerName})`);\n  }\n  if (rule.supportsText) {\n    statement.push(`supports(${rule.supportsText})`);\n  }\n  if (rule.media.length) {\n    statement.push(rule.media.mediaText);\n  }\n  return statement.join(\" \") + \";\";\n}\nfunction stringifyStylesheet(s2) {\n  try {\n    const rules2 = s2.rules || s2.cssRules;\n    return rules2 ? fixBrowserCompatibilityIssuesInCSS(\n      Array.from(rules2, stringifyRule).join(\"\")\n    ) : null;\n  } catch (error) {\n    return null;\n  }\n}\nfunction fixAllCssProperty(rule) {\n  let styles = \"\";\n  for (let i2 = 0; i2 < rule.style.length; i2++) {\n    const styleDeclaration = rule.style;\n    const attribute = styleDeclaration[i2];\n    const isImportant = styleDeclaration.getPropertyPriority(attribute);\n    styles += `${attribute}:${styleDeclaration.getPropertyValue(attribute)}${isImportant ? ` !important` : \"\"};`;\n  }\n  return `${rule.selectorText} { ${styles} }`;\n}\nfunction stringifyRule(rule) {\n  let importStringified;\n  if (isCSSImportRule(rule)) {\n    try {\n      importStringified = // for same-origin stylesheets,\n      // we can access the imported stylesheet rules directly\n      stringifyStylesheet(rule.styleSheet) || // work around browser issues with the raw string `@import url(...)` statement\n      escapeImportStatement(rule);\n    } catch (error) {\n    }\n  } else if (isCSSStyleRule(rule)) {\n    let cssText = rule.cssText;\n    const needsSafariColonFix = rule.selectorText.includes(\":\");\n    const needsAllFix = typeof rule.style[\"all\"] === \"string\" && rule.style[\"all\"];\n    if (needsAllFix) {\n      cssText = fixAllCssProperty(rule);\n    }\n    if (needsSafariColonFix) {\n      cssText = fixSafariColons(cssText);\n    }\n    if (needsSafariColonFix || needsAllFix) {\n      return cssText;\n    }\n  }\n  return importStringified || rule.cssText;\n}\nfunction fixSafariColons(cssStringified) {\n  const regex = /(\\[(?:[\\w-]+)[^\\\\])(:(?:[\\w-]+)\\])/gm;\n  return cssStringified.replace(regex, \"$1\\\\$2\");\n}\nfunction isCSSImportRule(rule) {\n  return \"styleSheet\" in rule;\n}\nfunction isCSSStyleRule(rule) {\n  return \"selectorText\" in rule;\n}\nclass Mirror {\n  constructor() {\n    __publicField$1(this, \"idNodeMap\", /* @__PURE__ */ new Map());\n    __publicField$1(this, \"nodeMetaMap\", /* @__PURE__ */ new WeakMap());\n  }\n  getId(n2) {\n    if (!n2) return -1;\n    const id = this.getMeta(n2)?.id;\n    return id ?? -1;\n  }\n  getNode(id) {\n    return this.idNodeMap.get(id) || null;\n  }\n  getIds() {\n    return Array.from(this.idNodeMap.keys());\n  }\n  getMeta(n2) {\n    return this.nodeMetaMap.get(n2) || null;\n  }\n  // removes the node from idNodeMap\n  // doesn't remove the node from nodeMetaMap\n  removeNodeFromMap(n2) {\n    const id = this.getId(n2);\n    this.idNodeMap.delete(id);\n    if (n2.childNodes) {\n      n2.childNodes.forEach(\n        (childNode) => this.removeNodeFromMap(childNode)\n      );\n    }\n  }\n  has(id) {\n    return this.idNodeMap.has(id);\n  }\n  hasNode(node) {\n    return this.nodeMetaMap.has(node);\n  }\n  add(n2, meta) {\n    const id = meta.id;\n    this.idNodeMap.set(id, n2);\n    this.nodeMetaMap.set(n2, meta);\n  }\n  replace(id, n2) {\n    const oldNode = this.getNode(id);\n    if (oldNode) {\n      const meta = this.nodeMetaMap.get(oldNode);\n      if (meta) this.nodeMetaMap.set(n2, meta);\n    }\n    this.idNodeMap.set(id, n2);\n  }\n  reset() {\n    this.idNodeMap = /* @__PURE__ */ new Map();\n    this.nodeMetaMap = /* @__PURE__ */ new WeakMap();\n  }\n}\nfunction createMirror$2() {\n  return new Mirror();\n}\nfunction shouldMaskInput({\n  maskInputOptions,\n  tagName,\n  type\n}) {\n  if (tagName === \"OPTION\") {\n    tagName = \"SELECT\";\n  }\n  return Boolean(\n    maskInputOptions[tagName.toLowerCase()] || type && maskInputOptions[type] || type === \"password\" || // Default to \"text\" option for inputs without a \"type\" attribute defined\n    tagName === \"INPUT\" && !type && maskInputOptions[\"text\"]\n  );\n}\nfunction maskInputValue({\n  isMasked,\n  element,\n  value,\n  maskInputFn\n}) {\n  let text = value || \"\";\n  if (!isMasked) {\n    return text;\n  }\n  if (maskInputFn) {\n    text = maskInputFn(text, element);\n  }\n  return \"*\".repeat(text.length);\n}\nfunction toLowerCase(str) {\n  return str.toLowerCase();\n}\nfunction toUpperCase(str) {\n  return str.toUpperCase();\n}\nconst ORIGINAL_ATTRIBUTE_NAME = \"__rrweb_original__\";\nfunction is2DCanvasBlank(canvas) {\n  const ctx = canvas.getContext(\"2d\");\n  if (!ctx) return true;\n  const chunkSize = 50;\n  for (let x = 0; x < canvas.width; x += chunkSize) {\n    for (let y = 0; y < canvas.height; y += chunkSize) {\n      const getImageData = ctx.getImageData;\n      const originalGetImageData = ORIGINAL_ATTRIBUTE_NAME in getImageData ? getImageData[ORIGINAL_ATTRIBUTE_NAME] : getImageData;\n      const pixelBuffer = new Uint32Array(\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-unsafe-member-access\n        originalGetImageData.call(\n          ctx,\n          x,\n          y,\n          Math.min(chunkSize, canvas.width - x),\n          Math.min(chunkSize, canvas.height - y)\n        ).data.buffer\n      );\n      if (pixelBuffer.some((pixel) => pixel !== 0)) return false;\n    }\n  }\n  return true;\n}\nfunction isNodeMetaEqual(a2, b) {\n  if (!a2 || !b || a2.type !== b.type) return false;\n  if (a2.type === NodeType$2.Document)\n    return a2.compatMode === b.compatMode;\n  else if (a2.type === NodeType$2.DocumentType)\n    return a2.name === b.name && a2.publicId === b.publicId && a2.systemId === b.systemId;\n  else if (a2.type === NodeType$2.Comment || a2.type === NodeType$2.Text || a2.type === NodeType$2.CDATA)\n    return a2.textContent === b.textContent;\n  else if (a2.type === NodeType$2.Element)\n    return a2.tagName === b.tagName && JSON.stringify(a2.attributes) === JSON.stringify(b.attributes) && a2.isSVG === b.isSVG && a2.needBlock === b.needBlock;\n  return false;\n}\nfunction getInputType(element) {\n  const type = element.type;\n  return element.hasAttribute(\"data-rr-is-password\") ? \"password\" : type ? (\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n    toLowerCase(type)\n  ) : null;\n}\nfunction getInputValue(el, tagName, type) {\n  if (tagName === \"INPUT\" && (type === \"radio\" || type === \"checkbox\")) {\n    return el.getAttribute(\"value\") || \"\";\n  }\n  return el.value;\n}\nfunction extractFileExtension(path, baseURL) {\n  let url;\n  try {\n    url = new URL(path, baseURL ?? window.location.href);\n  } catch (err) {\n    return null;\n  }\n  const regex = /\\.([0-9a-z]+)(?:$)/i;\n  const match = url.pathname.match(regex);\n  return match?.[1] ?? null;\n}\nconst cachedImplementations$1 = {};\nfunction getImplementation$1(name) {\n  const cached = cachedImplementations$1[name];\n  if (cached) {\n    return cached;\n  }\n  const document2 = window.document;\n  let impl = window[name];\n  if (document2 && typeof document2.createElement === \"function\") {\n    try {\n      const sandbox = document2.createElement(\"iframe\");\n      sandbox.hidden = true;\n      document2.head.appendChild(sandbox);\n      const contentWindow = sandbox.contentWindow;\n      if (contentWindow && contentWindow[name]) {\n        impl = // eslint-disable-next-line @typescript-eslint/unbound-method\n        contentWindow[name];\n      }\n      document2.head.removeChild(sandbox);\n    } catch (e2) {\n    }\n  }\n  return cachedImplementations$1[name] = impl.bind(\n    window\n  );\n}\nfunction setTimeout$2(...rest) {\n  return getImplementation$1(\"setTimeout\")(...rest);\n}\nfunction clearTimeout$1(...rest) {\n  return getImplementation$1(\"clearTimeout\")(...rest);\n}\nfunction getIframeContentDocument(iframe) {\n  try {\n    return iframe.contentDocument;\n  } catch (e2) {\n  }\n}\nlet _id = 1;\nconst tagNameRegex = new RegExp(\"[^a-z0-9-_:]\");\nconst IGNORED_NODE = -2;\nfunction genId() {\n  return _id++;\n}\nfunction getValidTagName$1(element) {\n  if (element instanceof HTMLFormElement) {\n    return \"form\";\n  }\n  const processedTagName = toLowerCase(element.tagName);\n  if (tagNameRegex.test(processedTagName)) {\n    return \"div\";\n  }\n  return processedTagName;\n}\nfunction extractOrigin(url) {\n  let origin = \"\";\n  if (url.indexOf(\"//\") > -1) {\n    origin = url.split(\"/\").slice(0, 3).join(\"/\");\n  } else {\n    origin = url.split(\"/\")[0];\n  }\n  origin = origin.split(\"?\")[0];\n  return origin;\n}\nlet canvasService;\nlet canvasCtx;\nconst URL_IN_CSS_REF = /url\\((?:(')([^']*)'|(\")(.*?)\"|([^)]*))\\)/gm;\nconst URL_PROTOCOL_MATCH = /^(?:[a-z+]+:)?\\/\\//i;\nconst URL_WWW_MATCH = /^www\\..*/i;\nconst DATA_URI = /^(data:)([^,]*),(.*)/i;\nfunction absoluteToStylesheet(cssText, href) {\n  return (cssText || \"\").replace(\n    URL_IN_CSS_REF,\n    (origin, quote1, path1, quote2, path2, path3) => {\n      const filePath = path1 || path2 || path3;\n      const maybeQuote = quote1 || quote2 || \"\";\n      if (!filePath) {\n        return origin;\n      }\n      if (URL_PROTOCOL_MATCH.test(filePath) || URL_WWW_MATCH.test(filePath)) {\n        return `url(${maybeQuote}${filePath}${maybeQuote})`;\n      }\n      if (DATA_URI.test(filePath)) {\n        return `url(${maybeQuote}${filePath}${maybeQuote})`;\n      }\n      if (filePath[0] === \"/\") {\n        return `url(${maybeQuote}${extractOrigin(href) + filePath}${maybeQuote})`;\n      }\n      const stack = href.split(\"/\");\n      const parts = filePath.split(\"/\");\n      stack.pop();\n      for (const part of parts) {\n        if (part === \".\") {\n          continue;\n        } else if (part === \"..\") {\n          stack.pop();\n        } else {\n          stack.push(part);\n        }\n      }\n      return `url(${maybeQuote}${stack.join(\"/\")}${maybeQuote})`;\n    }\n  );\n}\nconst SRCSET_NOT_SPACES = /^[^ \\t\\n\\r\\u000c]+/;\nconst SRCSET_COMMAS_OR_SPACES = /^[, \\t\\n\\r\\u000c]+/;\nfunction getAbsoluteSrcsetString(doc, attributeValue) {\n  if (attributeValue.trim() === \"\") {\n    return attributeValue;\n  }\n  let pos = 0;\n  function collectCharacters(regEx) {\n    let chars2;\n    const match = regEx.exec(attributeValue.substring(pos));\n    if (match) {\n      chars2 = match[0];\n      pos += chars2.length;\n      return chars2;\n    }\n    return \"\";\n  }\n  const output = [];\n  while (true) {\n    collectCharacters(SRCSET_COMMAS_OR_SPACES);\n    if (pos >= attributeValue.length) {\n      break;\n    }\n    let url = collectCharacters(SRCSET_NOT_SPACES);\n    if (url.slice(-1) === \",\") {\n      url = absoluteToDoc(doc, url.substring(0, url.length - 1));\n      output.push(url);\n    } else {\n      let descriptorsStr = \"\";\n      url = absoluteToDoc(doc, url);\n      let inParens = false;\n      while (true) {\n        const c2 = attributeValue.charAt(pos);\n        if (c2 === \"\") {\n          output.push((url + descriptorsStr).trim());\n          break;\n        } else if (!inParens) {\n          if (c2 === \",\") {\n            pos += 1;\n            output.push((url + descriptorsStr).trim());\n            break;\n          } else if (c2 === \"(\") {\n            inParens = true;\n          }\n        } else {\n          if (c2 === \")\") {\n            inParens = false;\n          }\n        }\n        descriptorsStr += c2;\n        pos += 1;\n      }\n    }\n  }\n  return output.join(\", \");\n}\nconst cachedDocument = /* @__PURE__ */ new WeakMap();\nfunction absoluteToDoc(doc, attributeValue) {\n  if (!attributeValue || attributeValue.trim() === \"\") {\n    return attributeValue;\n  }\n  return getHref(doc, attributeValue);\n}\nfunction isSVGElement(el) {\n  return Boolean(el.tagName === \"svg\" || el.ownerSVGElement);\n}\nfunction getHref(doc, customHref) {\n  let a2 = cachedDocument.get(doc);\n  if (!a2) {\n    a2 = doc.createElement(\"a\");\n    cachedDocument.set(doc, a2);\n  }\n  if (!customHref) {\n    customHref = \"\";\n  } else if (customHref.startsWith(\"blob:\") || customHref.startsWith(\"data:\")) {\n    return customHref;\n  }\n  a2.setAttribute(\"href\", customHref);\n  return a2.href;\n}\nfunction transformAttribute(doc, tagName, name, value, element, maskAttributeFn) {\n  if (!value) {\n    return value;\n  }\n  if (name === \"src\" || name === \"href\" && !(tagName === \"use\" && value[0] === \"#\")) {\n    return absoluteToDoc(doc, value);\n  } else if (name === \"xlink:href\" && value[0] !== \"#\") {\n    return absoluteToDoc(doc, value);\n  } else if (name === \"background\" && (tagName === \"table\" || tagName === \"td\" || tagName === \"th\")) {\n    return absoluteToDoc(doc, value);\n  } else if (name === \"srcset\") {\n    return getAbsoluteSrcsetString(doc, value);\n  } else if (name === \"style\") {\n    return absoluteToStylesheet(value, getHref(doc));\n  } else if (tagName === \"object\" && name === \"data\") {\n    return absoluteToDoc(doc, value);\n  }\n  if (typeof maskAttributeFn === \"function\") {\n    return maskAttributeFn(name, value, element);\n  }\n  return value;\n}\nfunction ignoreAttribute(tagName, name, _value) {\n  return (tagName === \"video\" || tagName === \"audio\") && name === \"autoplay\";\n}\nfunction _isBlockedElement(element, blockClass, blockSelector, unblockSelector) {\n  try {\n    if (unblockSelector && element.matches(unblockSelector)) {\n      return false;\n    }\n    if (typeof blockClass === \"string\") {\n      if (element.classList.contains(blockClass)) {\n        return true;\n      }\n    } else {\n      for (let eIndex = element.classList.length; eIndex--; ) {\n        const className = element.classList[eIndex];\n        if (blockClass.test(className)) {\n          return true;\n        }\n      }\n    }\n    if (blockSelector) {\n      return element.matches(blockSelector);\n    }\n  } catch (e2) {\n  }\n  return false;\n}\nfunction elementClassMatchesRegex(el, regex) {\n  for (let eIndex = el.classList.length; eIndex--; ) {\n    const className = el.classList[eIndex];\n    if (regex.test(className)) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction distanceToMatch(node, matchPredicate, limit = Infinity, distance = 0) {\n  if (!node) return -1;\n  if (node.nodeType !== node.ELEMENT_NODE) return -1;\n  if (distance > limit) return -1;\n  if (matchPredicate(node)) return distance;\n  return distanceToMatch(node.parentNode, matchPredicate, limit, distance + 1);\n}\nfunction createMatchPredicate(className, selector) {\n  return (node) => {\n    const el = node;\n    if (el === null) return false;\n    try {\n      if (className) {\n        if (typeof className === \"string\") {\n          if (el.matches(`.${className}`)) return true;\n        } else if (elementClassMatchesRegex(el, className)) {\n          return true;\n        }\n      }\n      if (selector && el.matches(selector)) return true;\n      return false;\n    } catch {\n      return false;\n    }\n  };\n}\nfunction needMaskingText(node, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, maskAllText) {\n  try {\n    const el = node.nodeType === node.ELEMENT_NODE ? node : node.parentElement;\n    if (el === null) return false;\n    if (el.tagName === \"INPUT\") {\n      const autocomplete = el.getAttribute(\"autocomplete\");\n      const disallowedAutocompleteValues = [\n        \"current-password\",\n        \"new-password\",\n        \"cc-number\",\n        \"cc-exp\",\n        \"cc-exp-month\",\n        \"cc-exp-year\",\n        \"cc-csc\"\n      ];\n      if (disallowedAutocompleteValues.includes(autocomplete)) {\n        return true;\n      }\n    }\n    let maskDistance = -1;\n    let unmaskDistance = -1;\n    if (maskAllText) {\n      unmaskDistance = distanceToMatch(\n        el,\n        createMatchPredicate(unmaskTextClass, unmaskTextSelector)\n      );\n      if (unmaskDistance < 0) {\n        return true;\n      }\n      maskDistance = distanceToMatch(\n        el,\n        createMatchPredicate(maskTextClass, maskTextSelector),\n        unmaskDistance >= 0 ? unmaskDistance : Infinity\n      );\n    } else {\n      maskDistance = distanceToMatch(\n        el,\n        createMatchPredicate(maskTextClass, maskTextSelector)\n      );\n      if (maskDistance < 0) {\n        return false;\n      }\n      unmaskDistance = distanceToMatch(\n        el,\n        createMatchPredicate(unmaskTextClass, unmaskTextSelector),\n        maskDistance >= 0 ? maskDistance : Infinity\n      );\n    }\n    return maskDistance >= 0 ? unmaskDistance >= 0 ? maskDistance <= unmaskDistance : true : unmaskDistance >= 0 ? false : !!maskAllText;\n  } catch (e2) {\n  }\n  return !!maskAllText;\n}\nfunction onceIframeLoaded(iframeEl, listener, iframeLoadTimeout) {\n  const win = iframeEl.contentWindow;\n  if (!win) {\n    return;\n  }\n  let fired = false;\n  let readyState;\n  try {\n    readyState = win.document.readyState;\n  } catch (error) {\n    return;\n  }\n  if (readyState !== \"complete\") {\n    const timer = setTimeout$2(() => {\n      if (!fired) {\n        listener();\n        fired = true;\n      }\n    }, iframeLoadTimeout);\n    iframeEl.addEventListener(\"load\", () => {\n      clearTimeout$1(timer);\n      fired = true;\n      listener();\n    });\n    return;\n  }\n  const blankUrl = \"about:blank\";\n  if (win.location.href !== blankUrl || iframeEl.src === blankUrl || iframeEl.src === \"\") {\n    setTimeout$2(listener, 0);\n    return iframeEl.addEventListener(\"load\", listener);\n  }\n  iframeEl.addEventListener(\"load\", listener);\n}\nfunction onceStylesheetLoaded(link, listener, styleSheetLoadTimeout) {\n  let fired = false;\n  let styleSheetLoaded;\n  try {\n    styleSheetLoaded = link.sheet;\n  } catch (error) {\n    return;\n  }\n  if (styleSheetLoaded) return;\n  const timer = setTimeout$2(() => {\n    if (!fired) {\n      listener();\n      fired = true;\n    }\n  }, styleSheetLoadTimeout);\n  link.addEventListener(\"load\", () => {\n    clearTimeout$1(timer);\n    fired = true;\n    listener();\n  });\n}\nfunction serializeNode(n2, options) {\n  const {\n    doc,\n    mirror: mirror2,\n    blockClass,\n    blockSelector,\n    unblockSelector,\n    maskAllText,\n    maskAttributeFn,\n    maskTextClass,\n    unmaskTextClass,\n    maskTextSelector,\n    unmaskTextSelector,\n    inlineStylesheet,\n    maskInputOptions = {},\n    maskTextFn,\n    maskInputFn,\n    dataURLOptions = {},\n    inlineImages,\n    recordCanvas,\n    keepIframeSrcFn,\n    newlyAddedElement = false\n  } = options;\n  const rootId = getRootId(doc, mirror2);\n  switch (n2.nodeType) {\n    case n2.DOCUMENT_NODE:\n      if (n2.compatMode !== \"CSS1Compat\") {\n        return {\n          type: NodeType$2.Document,\n          childNodes: [],\n          compatMode: n2.compatMode\n          // probably \"BackCompat\"\n        };\n      } else {\n        return {\n          type: NodeType$2.Document,\n          childNodes: []\n        };\n      }\n    case n2.DOCUMENT_TYPE_NODE:\n      return {\n        type: NodeType$2.DocumentType,\n        name: n2.name,\n        publicId: n2.publicId,\n        systemId: n2.systemId,\n        rootId\n      };\n    case n2.ELEMENT_NODE:\n      return serializeElementNode(n2, {\n        doc,\n        blockClass,\n        blockSelector,\n        unblockSelector,\n        inlineStylesheet,\n        maskAttributeFn,\n        maskInputOptions,\n        maskInputFn,\n        dataURLOptions,\n        inlineImages,\n        recordCanvas,\n        keepIframeSrcFn,\n        newlyAddedElement,\n        rootId,\n        maskAllText,\n        maskTextClass,\n        unmaskTextClass,\n        maskTextSelector,\n        unmaskTextSelector\n      });\n    case n2.TEXT_NODE:\n      return serializeTextNode(n2, {\n        doc,\n        maskAllText,\n        maskTextClass,\n        unmaskTextClass,\n        maskTextSelector,\n        unmaskTextSelector,\n        maskTextFn,\n        maskInputOptions,\n        maskInputFn,\n        rootId\n      });\n    case n2.CDATA_SECTION_NODE:\n      return {\n        type: NodeType$2.CDATA,\n        textContent: \"\",\n        rootId\n      };\n    case n2.COMMENT_NODE:\n      return {\n        type: NodeType$2.Comment,\n        textContent: n2.textContent || \"\",\n        rootId\n      };\n    default:\n      return false;\n  }\n}\nfunction getRootId(doc, mirror2) {\n  if (!mirror2.hasNode(doc)) return void 0;\n  const docId = mirror2.getId(doc);\n  return docId === 1 ? void 0 : docId;\n}\nfunction serializeTextNode(n2, options) {\n  const {\n    maskAllText,\n    maskTextClass,\n    unmaskTextClass,\n    maskTextSelector,\n    unmaskTextSelector,\n    maskTextFn,\n    maskInputOptions,\n    maskInputFn,\n    rootId\n  } = options;\n  const parentTagName = n2.parentNode && n2.parentNode.tagName;\n  let textContent = n2.textContent;\n  const isStyle = parentTagName === \"STYLE\" ? true : void 0;\n  const isScript = parentTagName === \"SCRIPT\" ? true : void 0;\n  const isTextarea = parentTagName === \"TEXTAREA\" ? true : void 0;\n  if (isStyle && textContent) {\n    try {\n      if (n2.nextSibling || n2.previousSibling) {\n      } else if (n2.parentNode.sheet?.cssRules) {\n        textContent = stringifyStylesheet(\n          n2.parentNode.sheet\n        );\n      }\n    } catch (err) {\n      console.warn(\n        `Cannot get CSS styles from text's parentNode. Error: ${err}`,\n        n2\n      );\n    }\n    textContent = absoluteToStylesheet(textContent, getHref(options.doc));\n  }\n  if (isScript) {\n    textContent = \"SCRIPT_PLACEHOLDER\";\n  }\n  const forceMask = needMaskingText(\n    n2,\n    maskTextClass,\n    maskTextSelector,\n    unmaskTextClass,\n    unmaskTextSelector,\n    maskAllText\n  );\n  if (!isStyle && !isScript && !isTextarea && textContent && forceMask) {\n    textContent = maskTextFn ? maskTextFn(textContent, n2.parentElement) : textContent.replace(/[\\S]/g, \"*\");\n  }\n  if (isTextarea && textContent && (maskInputOptions.textarea || forceMask)) {\n    textContent = maskInputFn ? maskInputFn(textContent, n2.parentNode) : textContent.replace(/[\\S]/g, \"*\");\n  }\n  if (parentTagName === \"OPTION\" && textContent) {\n    const isInputMasked = shouldMaskInput({\n      type: null,\n      tagName: parentTagName,\n      maskInputOptions\n    });\n    textContent = maskInputValue({\n      isMasked: needMaskingText(\n        n2,\n        maskTextClass,\n        maskTextSelector,\n        unmaskTextClass,\n        unmaskTextSelector,\n        isInputMasked\n      ),\n      element: n2,\n      value: textContent,\n      maskInputFn\n    });\n  }\n  return {\n    type: NodeType$2.Text,\n    textContent: textContent || \"\",\n    isStyle,\n    rootId\n  };\n}\nfunction serializeElementNode(n2, options) {\n  const {\n    doc,\n    blockClass,\n    blockSelector,\n    unblockSelector,\n    inlineStylesheet,\n    maskInputOptions = {},\n    maskAttributeFn,\n    maskInputFn,\n    dataURLOptions = {},\n    inlineImages,\n    recordCanvas,\n    keepIframeSrcFn,\n    newlyAddedElement = false,\n    rootId,\n    maskTextClass,\n    unmaskTextClass,\n    maskTextSelector,\n    unmaskTextSelector\n  } = options;\n  const needBlock = _isBlockedElement(\n    n2,\n    blockClass,\n    blockSelector,\n    unblockSelector\n  );\n  const tagName = getValidTagName$1(n2);\n  let attributes2 = {};\n  const len = n2.attributes.length;\n  for (let i2 = 0; i2 < len; i2++) {\n    const attr = n2.attributes[i2];\n    if (attr.name && !ignoreAttribute(tagName, attr.name, attr.value)) {\n      attributes2[attr.name] = transformAttribute(\n        doc,\n        tagName,\n        toLowerCase(attr.name),\n        attr.value,\n        n2,\n        maskAttributeFn\n      );\n    }\n  }\n  if (tagName === \"link\" && inlineStylesheet) {\n    const stylesheet = Array.from(doc.styleSheets).find((s2) => {\n      return s2.href === n2.href;\n    });\n    let cssText = null;\n    if (stylesheet) {\n      cssText = stringifyStylesheet(stylesheet);\n    }\n    if (cssText) {\n      attributes2.rel = null;\n      attributes2.href = null;\n      attributes2.crossorigin = null;\n      attributes2._cssText = absoluteToStylesheet(cssText, stylesheet.href);\n    }\n  }\n  if (tagName === \"style\" && n2.sheet && // TODO: Currently we only try to get dynamic stylesheet when it is an empty style element\n  !(n2.innerText || n2.textContent || \"\").trim().length) {\n    const cssText = stringifyStylesheet(\n      n2.sheet\n    );\n    if (cssText) {\n      attributes2._cssText = absoluteToStylesheet(cssText, getHref(doc));\n    }\n  }\n  if (tagName === \"input\" || tagName === \"textarea\" || tagName === \"select\" || tagName === \"option\") {\n    const el = n2;\n    const type = getInputType(el);\n    const value = getInputValue(el, toUpperCase(tagName), type);\n    const checked = el.checked;\n    if (type !== \"submit\" && type !== \"button\" && value) {\n      const forceMask = needMaskingText(\n        el,\n        maskTextClass,\n        maskTextSelector,\n        unmaskTextClass,\n        unmaskTextSelector,\n        shouldMaskInput({\n          type,\n          tagName: toUpperCase(tagName),\n          maskInputOptions\n        })\n      );\n      attributes2.value = maskInputValue({\n        isMasked: forceMask,\n        element: el,\n        value,\n        maskInputFn\n      });\n    }\n    if (checked) {\n      attributes2.checked = checked;\n    }\n  }\n  if (tagName === \"option\") {\n    if (n2.selected && !maskInputOptions[\"select\"]) {\n      attributes2.selected = true;\n    } else {\n      delete attributes2.selected;\n    }\n  }\n  if (tagName === \"canvas\" && recordCanvas) {\n    if (n2.__context === \"2d\") {\n      if (!is2DCanvasBlank(n2)) {\n        attributes2.rr_dataURL = n2.toDataURL(\n          dataURLOptions.type,\n          dataURLOptions.quality\n        );\n      }\n    } else if (!(\"__context\" in n2)) {\n      const canvasDataURL = n2.toDataURL(\n        dataURLOptions.type,\n        dataURLOptions.quality\n      );\n      const blankCanvas = doc.createElement(\"canvas\");\n      blankCanvas.width = n2.width;\n      blankCanvas.height = n2.height;\n      const blankCanvasDataURL = blankCanvas.toDataURL(\n        dataURLOptions.type,\n        dataURLOptions.quality\n      );\n      if (canvasDataURL !== blankCanvasDataURL) {\n        attributes2.rr_dataURL = canvasDataURL;\n      }\n    }\n  }\n  if (tagName === \"img\" && inlineImages) {\n    if (!canvasService) {\n      canvasService = doc.createElement(\"canvas\");\n      canvasCtx = canvasService.getContext(\"2d\");\n    }\n    const image = n2;\n    const imageSrc = image.currentSrc || image.getAttribute(\"src\") || \"<unknown-src>\";\n    const priorCrossOrigin = image.crossOrigin;\n    const recordInlineImage = () => {\n      image.removeEventListener(\"load\", recordInlineImage);\n      try {\n        canvasService.width = image.naturalWidth;\n        canvasService.height = image.naturalHeight;\n        canvasCtx.drawImage(image, 0, 0);\n        attributes2.rr_dataURL = canvasService.toDataURL(\n          dataURLOptions.type,\n          dataURLOptions.quality\n        );\n      } catch (err) {\n        if (image.crossOrigin !== \"anonymous\") {\n          image.crossOrigin = \"anonymous\";\n          if (image.complete && image.naturalWidth !== 0)\n            recordInlineImage();\n          else image.addEventListener(\"load\", recordInlineImage);\n          return;\n        } else {\n          console.warn(\n            `Cannot inline img src=${imageSrc}! Error: ${err}`\n          );\n        }\n      }\n      if (image.crossOrigin === \"anonymous\") {\n        priorCrossOrigin ? attributes2.crossOrigin = priorCrossOrigin : image.removeAttribute(\"crossorigin\");\n      }\n    };\n    if (image.complete && image.naturalWidth !== 0) recordInlineImage();\n    else image.addEventListener(\"load\", recordInlineImage);\n  }\n  if (tagName === \"audio\" || tagName === \"video\") {\n    attributes2.rr_mediaState = n2.paused ? \"paused\" : \"played\";\n    attributes2.rr_mediaCurrentTime = n2.currentTime;\n  }\n  if (!newlyAddedElement) {\n    if (n2.scrollLeft) {\n      attributes2.rr_scrollLeft = n2.scrollLeft;\n    }\n    if (n2.scrollTop) {\n      attributes2.rr_scrollTop = n2.scrollTop;\n    }\n  }\n  if (needBlock) {\n    const { width, height } = n2.getBoundingClientRect();\n    attributes2 = {\n      class: attributes2.class,\n      rr_width: `${width}px`,\n      rr_height: `${height}px`\n    };\n  }\n  if (tagName === \"iframe\" && !keepIframeSrcFn(attributes2.src)) {\n    if (!needBlock && !getIframeContentDocument(n2)) {\n      attributes2.rr_src = attributes2.src;\n    }\n    delete attributes2.src;\n  }\n  let isCustomElement;\n  try {\n    if (customElements.get(tagName)) isCustomElement = true;\n  } catch (e2) {\n  }\n  return {\n    type: NodeType$2.Element,\n    tagName,\n    attributes: attributes2,\n    childNodes: [],\n    isSVG: isSVGElement(n2) || void 0,\n    needBlock,\n    rootId,\n    isCustom: isCustomElement\n  };\n}\nfunction lowerIfExists(maybeAttr) {\n  if (maybeAttr === void 0 || maybeAttr === null) {\n    return \"\";\n  } else {\n    return maybeAttr.toLowerCase();\n  }\n}\nfunction slimDOMExcluded(sn, slimDOMOptions) {\n  if (slimDOMOptions.comment && sn.type === NodeType$2.Comment) {\n    return true;\n  } else if (sn.type === NodeType$2.Element) {\n    if (slimDOMOptions.script && // script tag\n    (sn.tagName === \"script\" || // (module)preload link\n    sn.tagName === \"link\" && (sn.attributes.rel === \"preload\" || sn.attributes.rel === \"modulepreload\") || // prefetch link\n    sn.tagName === \"link\" && sn.attributes.rel === \"prefetch\" && typeof sn.attributes.href === \"string\" && extractFileExtension(sn.attributes.href) === \"js\")) {\n      return true;\n    } else if (slimDOMOptions.headFavicon && (sn.tagName === \"link\" && sn.attributes.rel === \"shortcut icon\" || sn.tagName === \"meta\" && (lowerIfExists(sn.attributes.name).match(\n      /^msapplication-tile(image|color)$/\n    ) || lowerIfExists(sn.attributes.name) === \"application-name\" || lowerIfExists(sn.attributes.rel) === \"icon\" || lowerIfExists(sn.attributes.rel) === \"apple-touch-icon\" || lowerIfExists(sn.attributes.rel) === \"shortcut icon\"))) {\n      return true;\n    } else if (sn.tagName === \"meta\") {\n      if (slimDOMOptions.headMetaDescKeywords && lowerIfExists(sn.attributes.name).match(/^description|keywords$/)) {\n        return true;\n      } else if (slimDOMOptions.headMetaSocial && (lowerIfExists(sn.attributes.property).match(/^(og|twitter|fb):/) || // og = opengraph (facebook)\n      lowerIfExists(sn.attributes.name).match(/^(og|twitter):/) || lowerIfExists(sn.attributes.name) === \"pinterest\")) {\n        return true;\n      } else if (slimDOMOptions.headMetaRobots && (lowerIfExists(sn.attributes.name) === \"robots\" || lowerIfExists(sn.attributes.name) === \"googlebot\" || lowerIfExists(sn.attributes.name) === \"bingbot\")) {\n        return true;\n      } else if (slimDOMOptions.headMetaHttpEquiv && sn.attributes[\"http-equiv\"] !== void 0) {\n        return true;\n      } else if (slimDOMOptions.headMetaAuthorship && (lowerIfExists(sn.attributes.name) === \"author\" || lowerIfExists(sn.attributes.name) === \"generator\" || lowerIfExists(sn.attributes.name) === \"framework\" || lowerIfExists(sn.attributes.name) === \"publisher\" || lowerIfExists(sn.attributes.name) === \"progid\" || lowerIfExists(sn.attributes.property).match(/^article:/) || lowerIfExists(sn.attributes.property).match(/^product:/))) {\n        return true;\n      } else if (slimDOMOptions.headMetaVerification && (lowerIfExists(sn.attributes.name) === \"google-site-verification\" || lowerIfExists(sn.attributes.name) === \"yandex-verification\" || lowerIfExists(sn.attributes.name) === \"csrf-token\" || lowerIfExists(sn.attributes.name) === \"p:domain_verify\" || lowerIfExists(sn.attributes.name) === \"verify-v1\" || lowerIfExists(sn.attributes.name) === \"verification\" || lowerIfExists(sn.attributes.name) === \"shopify-checkout-api-token\")) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\nfunction serializeNodeWithId(n2, options) {\n  const {\n    doc,\n    mirror: mirror2,\n    blockClass,\n    blockSelector,\n    unblockSelector,\n    maskAllText,\n    maskTextClass,\n    unmaskTextClass,\n    maskTextSelector,\n    unmaskTextSelector,\n    skipChild = false,\n    inlineStylesheet = true,\n    maskInputOptions = {},\n    maskAttributeFn,\n    maskTextFn,\n    maskInputFn,\n    slimDOMOptions,\n    dataURLOptions = {},\n    inlineImages = false,\n    recordCanvas = false,\n    onSerialize,\n    onIframeLoad,\n    iframeLoadTimeout = 5e3,\n    onStylesheetLoad,\n    stylesheetLoadTimeout = 5e3,\n    keepIframeSrcFn = () => false,\n    newlyAddedElement = false\n  } = options;\n  let { preserveWhiteSpace = true } = options;\n  const _serializedNode = serializeNode(n2, {\n    doc,\n    mirror: mirror2,\n    blockClass,\n    blockSelector,\n    maskAllText,\n    unblockSelector,\n    maskTextClass,\n    unmaskTextClass,\n    maskTextSelector,\n    unmaskTextSelector,\n    inlineStylesheet,\n    maskInputOptions,\n    maskAttributeFn,\n    maskTextFn,\n    maskInputFn,\n    dataURLOptions,\n    inlineImages,\n    recordCanvas,\n    keepIframeSrcFn,\n    newlyAddedElement\n  });\n  if (!_serializedNode) {\n    console.warn(n2, \"not serialized\");\n    return null;\n  }\n  let id;\n  if (mirror2.hasNode(n2)) {\n    id = mirror2.getId(n2);\n  } else if (slimDOMExcluded(_serializedNode, slimDOMOptions) || !preserveWhiteSpace && _serializedNode.type === NodeType$2.Text && !_serializedNode.isStyle && !_serializedNode.textContent.replace(/^\\s+|\\s+$/gm, \"\").length) {\n    id = IGNORED_NODE;\n  } else {\n    id = genId();\n  }\n  const serializedNode2 = Object.assign(_serializedNode, { id });\n  mirror2.add(n2, serializedNode2);\n  if (id === IGNORED_NODE) {\n    return null;\n  }\n  if (onSerialize) {\n    onSerialize(n2);\n  }\n  let recordChild = !skipChild;\n  if (serializedNode2.type === NodeType$2.Element) {\n    recordChild = recordChild && !serializedNode2.needBlock;\n    delete serializedNode2.needBlock;\n    const shadowRoot = n2.shadowRoot;\n    if (shadowRoot && isNativeShadowDom(shadowRoot))\n      serializedNode2.isShadowHost = true;\n  }\n  if ((serializedNode2.type === NodeType$2.Document || serializedNode2.type === NodeType$2.Element) && recordChild) {\n    if (slimDOMOptions.headWhitespace && serializedNode2.type === NodeType$2.Element && serializedNode2.tagName === \"head\") {\n      preserveWhiteSpace = false;\n    }\n    const bypassOptions = {\n      doc,\n      mirror: mirror2,\n      blockClass,\n      blockSelector,\n      maskAllText,\n      unblockSelector,\n      maskTextClass,\n      unmaskTextClass,\n      maskTextSelector,\n      unmaskTextSelector,\n      skipChild,\n      inlineStylesheet,\n      maskInputOptions,\n      maskAttributeFn,\n      maskTextFn,\n      maskInputFn,\n      slimDOMOptions,\n      dataURLOptions,\n      inlineImages,\n      recordCanvas,\n      preserveWhiteSpace,\n      onSerialize,\n      onIframeLoad,\n      iframeLoadTimeout,\n      onStylesheetLoad,\n      stylesheetLoadTimeout,\n      keepIframeSrcFn\n    };\n    for (const childN of Array.from(n2.childNodes)) {\n      const serializedChildNode = serializeNodeWithId(childN, bypassOptions);\n      if (serializedChildNode) {\n        serializedNode2.childNodes.push(serializedChildNode);\n      }\n    }\n    if (isElement(n2) && n2.shadowRoot) {\n      for (const childN of Array.from(n2.shadowRoot.childNodes)) {\n        const serializedChildNode = serializeNodeWithId(childN, bypassOptions);\n        if (serializedChildNode) {\n          isNativeShadowDom(n2.shadowRoot) && (serializedChildNode.isShadow = true);\n          serializedNode2.childNodes.push(serializedChildNode);\n        }\n      }\n    }\n  }\n  if (n2.parentNode && isShadowRoot(n2.parentNode) && isNativeShadowDom(n2.parentNode)) {\n    serializedNode2.isShadow = true;\n  }\n  if (serializedNode2.type === NodeType$2.Element && serializedNode2.tagName === \"iframe\" && !_isBlockedElement(\n    n2,\n    blockClass,\n    blockSelector,\n    unblockSelector\n  )) {\n    onceIframeLoaded(\n      n2,\n      () => {\n        const iframeDoc = getIframeContentDocument(n2);\n        if (iframeDoc && onIframeLoad) {\n          const serializedIframeNode = serializeNodeWithId(iframeDoc, {\n            doc: iframeDoc,\n            mirror: mirror2,\n            blockClass,\n            blockSelector,\n            unblockSelector,\n            maskAllText,\n            maskTextClass,\n            unmaskTextClass,\n            maskTextSelector,\n            unmaskTextSelector,\n            skipChild: false,\n            inlineStylesheet,\n            maskInputOptions,\n            maskAttributeFn,\n            maskTextFn,\n            maskInputFn,\n            slimDOMOptions,\n            dataURLOptions,\n            inlineImages,\n            recordCanvas,\n            preserveWhiteSpace,\n            onSerialize,\n            onIframeLoad,\n            iframeLoadTimeout,\n            onStylesheetLoad,\n            stylesheetLoadTimeout,\n            keepIframeSrcFn\n          });\n          if (serializedIframeNode) {\n            onIframeLoad(\n              n2,\n              serializedIframeNode\n            );\n          }\n        }\n      },\n      iframeLoadTimeout\n    );\n  }\n  if (serializedNode2.type === NodeType$2.Element && serializedNode2.tagName === \"link\" && typeof serializedNode2.attributes.rel === \"string\" && (serializedNode2.attributes.rel === \"stylesheet\" || serializedNode2.attributes.rel === \"preload\" && typeof serializedNode2.attributes.href === \"string\" && extractFileExtension(serializedNode2.attributes.href) === \"css\")) {\n    onceStylesheetLoaded(\n      n2,\n      () => {\n        if (onStylesheetLoad) {\n          const serializedLinkNode = serializeNodeWithId(n2, {\n            doc,\n            mirror: mirror2,\n            blockClass,\n            blockSelector,\n            unblockSelector,\n            maskAllText,\n            maskTextClass,\n            unmaskTextClass,\n            maskTextSelector,\n            unmaskTextSelector,\n            skipChild: false,\n            inlineStylesheet,\n            maskInputOptions,\n            maskAttributeFn,\n            maskTextFn,\n            maskInputFn,\n            slimDOMOptions,\n            dataURLOptions,\n            inlineImages,\n            recordCanvas,\n            preserveWhiteSpace,\n            onSerialize,\n            onIframeLoad,\n            iframeLoadTimeout,\n            onStylesheetLoad,\n            stylesheetLoadTimeout,\n            keepIframeSrcFn\n          });\n          if (serializedLinkNode) {\n            onStylesheetLoad(\n              n2,\n              serializedLinkNode\n            );\n          }\n        }\n      },\n      stylesheetLoadTimeout\n    );\n  }\n  return serializedNode2;\n}\nfunction snapshot(n2, options) {\n  const {\n    mirror: mirror2 = new Mirror(),\n    blockClass = \"rr-block\",\n    blockSelector = null,\n    unblockSelector = null,\n    maskAllText = false,\n    maskTextClass = \"rr-mask\",\n    unmaskTextClass = null,\n    maskTextSelector = null,\n    unmaskTextSelector = null,\n    inlineStylesheet = true,\n    inlineImages = false,\n    recordCanvas = false,\n    maskAllInputs = false,\n    maskAttributeFn,\n    maskTextFn,\n    maskInputFn,\n    slimDOM = false,\n    dataURLOptions,\n    preserveWhiteSpace,\n    onSerialize,\n    onIframeLoad,\n    iframeLoadTimeout,\n    onStylesheetLoad,\n    stylesheetLoadTimeout,\n    keepIframeSrcFn = () => false\n  } = options || {};\n  const maskInputOptions = maskAllInputs === true ? {\n    color: true,\n    date: true,\n    \"datetime-local\": true,\n    email: true,\n    month: true,\n    number: true,\n    range: true,\n    search: true,\n    tel: true,\n    text: true,\n    time: true,\n    url: true,\n    week: true,\n    textarea: true,\n    select: true\n  } : maskAllInputs === false ? {} : maskAllInputs;\n  const slimDOMOptions = slimDOM === true || slimDOM === \"all\" ? (\n    // if true: set of sensible options that should not throw away any information\n    {\n      script: true,\n      comment: true,\n      headFavicon: true,\n      headWhitespace: true,\n      headMetaDescKeywords: slimDOM === \"all\",\n      // destructive\n      headMetaSocial: true,\n      headMetaRobots: true,\n      headMetaHttpEquiv: true,\n      headMetaAuthorship: true,\n      headMetaVerification: true\n    }\n  ) : slimDOM === false ? {} : slimDOM;\n  return serializeNodeWithId(n2, {\n    doc: n2,\n    mirror: mirror2,\n    blockClass,\n    blockSelector,\n    unblockSelector,\n    maskAllText,\n    maskTextClass,\n    unmaskTextClass,\n    maskTextSelector,\n    unmaskTextSelector,\n    skipChild: false,\n    inlineStylesheet,\n    maskInputOptions,\n    maskAttributeFn,\n    maskTextFn,\n    maskInputFn,\n    slimDOMOptions,\n    dataURLOptions,\n    inlineImages,\n    recordCanvas,\n    preserveWhiteSpace,\n    onSerialize,\n    onIframeLoad,\n    iframeLoadTimeout,\n    onStylesheetLoad,\n    stylesheetLoadTimeout,\n    keepIframeSrcFn,\n    newlyAddedElement: false\n  });\n}\nconst commentre = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\nfunction parse(css, options = {}) {\n  let lineno = 1;\n  let column = 1;\n  function updatePosition(str) {\n    const lines = str.match(/\\n/g);\n    if (lines) {\n      lineno += lines.length;\n    }\n    const i2 = str.lastIndexOf(\"\\n\");\n    column = i2 === -1 ? column + str.length : str.length - i2;\n  }\n  function position() {\n    const start = { line: lineno, column };\n    return (node) => {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n  const _Position = class _Position2 {\n    constructor(start) {\n      __publicField$1(this, \"content\");\n      __publicField$1(this, \"start\");\n      __publicField$1(this, \"end\");\n      __publicField$1(this, \"source\");\n      this.start = start;\n      this.end = { line: lineno, column };\n      this.source = options.source;\n      this.content = _Position2.content;\n    }\n  };\n  __publicField$1(_Position, \"content\");\n  let Position = _Position;\n  Position.content = css;\n  const errorsList = [];\n  function error(msg) {\n    const err = new Error(\n      `${options.source || \"\"}:${lineno}:${column}: ${msg}`\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = css;\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n  function stylesheet() {\n    const rulesList = rules2();\n    return {\n      type: \"stylesheet\",\n      stylesheet: {\n        source: options.source,\n        rules: rulesList,\n        parsingErrors: errorsList\n      }\n    };\n  }\n  function open() {\n    return match(/^{\\s*/);\n  }\n  function close() {\n    return match(/^}/);\n  }\n  function rules2() {\n    let node;\n    const rules22 = [];\n    whitespace();\n    comments(rules22);\n    while (css.length && css.charAt(0) !== \"}\" && (node = atrule() || rule())) {\n      if (node) {\n        rules22.push(node);\n        comments(rules22);\n      }\n    }\n    return rules22;\n  }\n  function match(re) {\n    const m = re.exec(css);\n    if (!m) {\n      return;\n    }\n    const str = m[0];\n    updatePosition(str);\n    css = css.slice(str.length);\n    return m;\n  }\n  function whitespace() {\n    match(/^\\s*/);\n  }\n  function comments(rules22 = []) {\n    let c2;\n    while (c2 = comment()) {\n      if (c2) {\n        rules22.push(c2);\n      }\n      c2 = comment();\n    }\n    return rules22;\n  }\n  function comment() {\n    const pos = position();\n    if (\"/\" !== css.charAt(0) || \"*\" !== css.charAt(1)) {\n      return;\n    }\n    let i2 = 2;\n    while (\"\" !== css.charAt(i2) && (\"*\" !== css.charAt(i2) || \"/\" !== css.charAt(i2 + 1))) {\n      ++i2;\n    }\n    i2 += 2;\n    if (\"\" === css.charAt(i2 - 1)) {\n      return error(\"End of comment missing\");\n    }\n    const str = css.slice(2, i2 - 2);\n    column += 2;\n    updatePosition(str);\n    css = css.slice(i2);\n    column += 2;\n    return pos({\n      type: \"comment\",\n      comment: str\n    });\n  }\n  function selector() {\n    const m = match(/^([^{]+)/);\n    if (!m) {\n      return;\n    }\n    const splitSelectors = trim(m[0]).replace(/\\/\\*([^*]|[\\r\\n]|(\\*+([^*/]|[\\r\\n])))*\\*\\/+/g, \"\").replace(/\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'/g, (m2) => {\n      return m2.replace(/,/g, \"‌\");\n    }).split(/\\s*(?![^(]*\\)),\\s*/);\n    if (splitSelectors.length <= 1) {\n      return splitSelectors.map((s2) => {\n        return s2.replace(/\\u200C/g, \",\");\n      });\n    }\n    let i2 = 0;\n    let j = 0;\n    const len = splitSelectors.length;\n    const finalSelectors = [];\n    while (i2 < len) {\n      const openingParensCount = (splitSelectors[i2].match(/\\(/g) || []).length;\n      const closingParensCount = (splitSelectors[i2].match(/\\)/g) || []).length;\n      let unbalancedParens = openingParensCount - closingParensCount;\n      if (unbalancedParens >= 1) {\n        let foundClosingSelector = false;\n        j = i2 + 1;\n        while (j < len) {\n          const nextOpeningParensCount = (splitSelectors[j].match(/\\(/g) || []).length;\n          const nextClosingParensCount = (splitSelectors[j].match(/\\)/g) || []).length;\n          const nextUnbalancedParens = nextClosingParensCount - nextOpeningParensCount;\n          if (nextUnbalancedParens === unbalancedParens) {\n            finalSelectors.push(splitSelectors.slice(i2, j + 1).join(\",\"));\n            i2 = j + 1;\n            foundClosingSelector = true;\n            break;\n          }\n          j++;\n          unbalancedParens -= nextUnbalancedParens;\n        }\n        if (foundClosingSelector) {\n          continue;\n        }\n        splitSelectors.slice(i2, len).forEach((selector2) => selector2 && finalSelectors.push(selector2));\n        break;\n      }\n      splitSelectors[i2] && finalSelectors.push(splitSelectors[i2]);\n      i2++;\n    }\n    return finalSelectors.map((s2) => {\n      return s2.replace(/\\u200C/g, \",\");\n    });\n  }\n  function declaration() {\n    const pos = position();\n    const propMatch = match(/^(\\*?[-#\\/\\*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/);\n    if (!propMatch) {\n      return;\n    }\n    const prop = trim(propMatch[0]);\n    if (!match(/^:\\s*/)) {\n      return error(`property missing ':'`);\n    }\n    const val = match(/^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^\\)]*?\\)|[^};])+)/);\n    const ret = pos({\n      type: \"declaration\",\n      property: prop.replace(commentre, \"\"),\n      value: val ? trim(val[0]).replace(commentre, \"\") : \"\"\n    });\n    match(/^[;\\s]*/);\n    return ret;\n  }\n  function declarations() {\n    const decls = [];\n    if (!open()) {\n      return error(`missing '{'`);\n    }\n    comments(decls);\n    let decl;\n    while (decl = declaration()) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n      decl = declaration();\n    }\n    if (!close()) {\n      return error(`missing '}'`);\n    }\n    return decls;\n  }\n  function keyframe() {\n    let m;\n    const vals = [];\n    const pos = position();\n    while (m = match(/^((\\d+\\.\\d+|\\.\\d+|\\d+)%?|[a-z]+)\\s*/)) {\n      vals.push(m[1]);\n      match(/^,\\s*/);\n    }\n    if (!vals.length) {\n      return;\n    }\n    return pos({\n      type: \"keyframe\",\n      values: vals,\n      declarations: declarations()\n    });\n  }\n  function atkeyframes() {\n    const pos = position();\n    let m = match(/^@([-\\w]+)?keyframes\\s*/);\n    if (!m) {\n      return;\n    }\n    const vendor = m[1];\n    m = match(/^([-\\w]+)\\s*/);\n    if (!m) {\n      return error(\"@keyframes missing name\");\n    }\n    const name = m[1];\n    if (!open()) {\n      return error(`@keyframes missing '{'`);\n    }\n    let frame;\n    let frames = comments();\n    while (frame = keyframe()) {\n      frames.push(frame);\n      frames = frames.concat(comments());\n    }\n    if (!close()) {\n      return error(`@keyframes missing '}'`);\n    }\n    return pos({\n      type: \"keyframes\",\n      name,\n      vendor,\n      keyframes: frames\n    });\n  }\n  function atsupports() {\n    const pos = position();\n    const m = match(/^@supports *([^{]+)/);\n    if (!m) {\n      return;\n    }\n    const supports = trim(m[1]);\n    if (!open()) {\n      return error(`@supports missing '{'`);\n    }\n    const style = comments().concat(rules2());\n    if (!close()) {\n      return error(`@supports missing '}'`);\n    }\n    return pos({\n      type: \"supports\",\n      supports,\n      rules: style\n    });\n  }\n  function athost() {\n    const pos = position();\n    const m = match(/^@host\\s*/);\n    if (!m) {\n      return;\n    }\n    if (!open()) {\n      return error(`@host missing '{'`);\n    }\n    const style = comments().concat(rules2());\n    if (!close()) {\n      return error(`@host missing '}'`);\n    }\n    return pos({\n      type: \"host\",\n      rules: style\n    });\n  }\n  function atmedia() {\n    const pos = position();\n    const m = match(/^@media *([^{]+)/);\n    if (!m) {\n      return;\n    }\n    const media = trim(m[1]);\n    if (!open()) {\n      return error(`@media missing '{'`);\n    }\n    const style = comments().concat(rules2());\n    if (!close()) {\n      return error(`@media missing '}'`);\n    }\n    return pos({\n      type: \"media\",\n      media,\n      rules: style\n    });\n  }\n  function atcustommedia() {\n    const pos = position();\n    const m = match(/^@custom-media\\s+(--[^\\s]+)\\s*([^{;]+);/);\n    if (!m) {\n      return;\n    }\n    return pos({\n      type: \"custom-media\",\n      name: trim(m[1]),\n      media: trim(m[2])\n    });\n  }\n  function atpage() {\n    const pos = position();\n    const m = match(/^@page */);\n    if (!m) {\n      return;\n    }\n    const sel = selector() || [];\n    if (!open()) {\n      return error(`@page missing '{'`);\n    }\n    let decls = comments();\n    let decl;\n    while (decl = declaration()) {\n      decls.push(decl);\n      decls = decls.concat(comments());\n    }\n    if (!close()) {\n      return error(`@page missing '}'`);\n    }\n    return pos({\n      type: \"page\",\n      selectors: sel,\n      declarations: decls\n    });\n  }\n  function atdocument() {\n    const pos = position();\n    const m = match(/^@([-\\w]+)?document *([^{]+)/);\n    if (!m) {\n      return;\n    }\n    const vendor = trim(m[1]);\n    const doc = trim(m[2]);\n    if (!open()) {\n      return error(`@document missing '{'`);\n    }\n    const style = comments().concat(rules2());\n    if (!close()) {\n      return error(`@document missing '}'`);\n    }\n    return pos({\n      type: \"document\",\n      document: doc,\n      vendor,\n      rules: style\n    });\n  }\n  function atfontface() {\n    const pos = position();\n    const m = match(/^@font-face\\s*/);\n    if (!m) {\n      return;\n    }\n    if (!open()) {\n      return error(`@font-face missing '{'`);\n    }\n    let decls = comments();\n    let decl;\n    while (decl = declaration()) {\n      decls.push(decl);\n      decls = decls.concat(comments());\n    }\n    if (!close()) {\n      return error(`@font-face missing '}'`);\n    }\n    return pos({\n      type: \"font-face\",\n      declarations: decls\n    });\n  }\n  const atimport = _compileAtrule(\"import\");\n  const atcharset = _compileAtrule(\"charset\");\n  const atnamespace = _compileAtrule(\"namespace\");\n  function _compileAtrule(name) {\n    const re = new RegExp(\n      \"^@\" + name + \"\\\\s*((?:\" + [\n        /[^\\\\]\"(?:\\\\\"|[^\"])*\"/.source,\n        // consume any quoted parts (checking that the double quote isn't itself escaped)\n        /[^\\\\]'(?:\\\\'|[^'])*'/.source,\n        // same but for single quotes\n        \"[^;]\"\n      ].join(\"|\") + \")+);\"\n    );\n    return () => {\n      const pos = position();\n      const m = match(re);\n      if (!m) {\n        return;\n      }\n      const ret = { type: name };\n      ret[name] = m[1].trim();\n      return pos(ret);\n    };\n  }\n  function atrule() {\n    if (css[0] !== \"@\") {\n      return;\n    }\n    return atkeyframes() || atmedia() || atcustommedia() || atsupports() || atimport() || atcharset() || atnamespace() || atdocument() || atpage() || athost() || atfontface();\n  }\n  function rule() {\n    const pos = position();\n    const sel = selector();\n    if (!sel) {\n      return error(\"selector missing\");\n    }\n    comments();\n    return pos({\n      type: \"rule\",\n      selectors: sel,\n      declarations: declarations()\n    });\n  }\n  return addParent(stylesheet());\n}\nfunction trim(str) {\n  return str ? str.replace(/^\\s+|\\s+$/g, \"\") : \"\";\n}\nfunction addParent(obj, parent) {\n  const isNode = obj && typeof obj.type === \"string\";\n  const childParent = isNode ? obj : parent;\n  for (const k of Object.keys(obj)) {\n    const value = obj[k];\n    if (Array.isArray(value)) {\n      value.forEach((v2) => {\n        addParent(v2, childParent);\n      });\n    } else if (value && typeof value === \"object\") {\n      addParent(value, childParent);\n    }\n  }\n  if (isNode) {\n    Object.defineProperty(obj, \"parent\", {\n      configurable: true,\n      writable: true,\n      enumerable: false,\n      value: parent || null\n    });\n  }\n  return obj;\n}\nconst tagMap = {\n  script: \"noscript\",\n  // camel case svg element tag names\n  altglyph: \"altGlyph\",\n  altglyphdef: \"altGlyphDef\",\n  altglyphitem: \"altGlyphItem\",\n  animatecolor: \"animateColor\",\n  animatemotion: \"animateMotion\",\n  animatetransform: \"animateTransform\",\n  clippath: \"clipPath\",\n  feblend: \"feBlend\",\n  fecolormatrix: \"feColorMatrix\",\n  fecomponenttransfer: \"feComponentTransfer\",\n  fecomposite: \"feComposite\",\n  feconvolvematrix: \"feConvolveMatrix\",\n  fediffuselighting: \"feDiffuseLighting\",\n  fedisplacementmap: \"feDisplacementMap\",\n  fedistantlight: \"feDistantLight\",\n  fedropshadow: \"feDropShadow\",\n  feflood: \"feFlood\",\n  fefunca: \"feFuncA\",\n  fefuncb: \"feFuncB\",\n  fefuncg: \"feFuncG\",\n  fefuncr: \"feFuncR\",\n  fegaussianblur: \"feGaussianBlur\",\n  feimage: \"feImage\",\n  femerge: \"feMerge\",\n  femergenode: \"feMergeNode\",\n  femorphology: \"feMorphology\",\n  feoffset: \"feOffset\",\n  fepointlight: \"fePointLight\",\n  fespecularlighting: \"feSpecularLighting\",\n  fespotlight: \"feSpotLight\",\n  fetile: \"feTile\",\n  feturbulence: \"feTurbulence\",\n  foreignobject: \"foreignObject\",\n  glyphref: \"glyphRef\",\n  lineargradient: \"linearGradient\",\n  radialgradient: \"radialGradient\"\n};\nfunction getTagName(n2) {\n  let tagName = tagMap[n2.tagName] ? tagMap[n2.tagName] : n2.tagName;\n  if (tagName === \"link\" && n2.attributes._cssText) {\n    tagName = \"style\";\n  }\n  return tagName;\n}\nfunction escapeRegExp(str) {\n  return str.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n}\nconst HOVER_SELECTOR = /([^\\\\]):hover/;\nconst HOVER_SELECTOR_GLOBAL = new RegExp(HOVER_SELECTOR.source, \"g\");\nfunction addHoverClass(cssText, cache) {\n  const cachedStyle = cache?.stylesWithHoverClass.get(cssText);\n  if (cachedStyle) return cachedStyle;\n  if (cssText.length >= 1e6) {\n    return cssText;\n  }\n  const ast = parse(cssText, {\n    silent: true\n  });\n  if (!ast.stylesheet) {\n    return cssText;\n  }\n  const selectors = [];\n  ast.stylesheet.rules.forEach((rule) => {\n    if (\"selectors\" in rule) {\n      (rule.selectors || []).forEach((selector) => {\n        if (HOVER_SELECTOR.test(selector)) {\n          selectors.push(selector);\n        }\n      });\n    }\n  });\n  if (selectors.length === 0) {\n    return cssText;\n  }\n  const selectorMatcher = new RegExp(\n    selectors.filter((selector, index) => selectors.indexOf(selector) === index).sort((a2, b) => b.length - a2.length).map((selector) => {\n      return escapeRegExp(selector);\n    }).join(\"|\"),\n    \"g\"\n  );\n  const result = cssText.replace(selectorMatcher, (selector) => {\n    const newSelector = selector.replace(HOVER_SELECTOR_GLOBAL, \"$1.\\\\:hover\");\n    return `${selector}, ${newSelector}`;\n  });\n  cache?.stylesWithHoverClass.set(cssText, result);\n  return result;\n}\nfunction createCache() {\n  const stylesWithHoverClass = /* @__PURE__ */ new Map();\n  return {\n    stylesWithHoverClass\n  };\n}\nfunction buildNode(n2, options) {\n  const { doc, hackCss, cache } = options;\n  switch (n2.type) {\n    case NodeType$2.Document:\n      return doc.implementation.createDocument(null, \"\", null);\n    case NodeType$2.DocumentType:\n      return doc.implementation.createDocumentType(\n        n2.name || \"html\",\n        n2.publicId,\n        n2.systemId\n      );\n    case NodeType$2.Element: {\n      const tagName = getTagName(n2);\n      let node;\n      if (n2.isSVG) {\n        node = doc.createElementNS(\"http://www.w3.org/2000/svg\", tagName);\n      } else {\n        if (\n          // If the tag name is a custom element name\n          n2.isCustom && // If the browser supports custom elements\n          doc.defaultView?.customElements && // If the custom element hasn't been defined yet\n          !doc.defaultView.customElements.get(n2.tagName)\n        )\n          doc.defaultView.customElements.define(\n            n2.tagName,\n            class extends doc.defaultView.HTMLElement {\n            }\n          );\n        node = doc.createElement(tagName);\n      }\n      const specialAttributes = {};\n      for (const name in n2.attributes) {\n        if (!Object.prototype.hasOwnProperty.call(n2.attributes, name)) {\n          continue;\n        }\n        let value = n2.attributes[name];\n        if (tagName === \"option\" && name === \"selected\" && value === false) {\n          continue;\n        }\n        if (value === null) {\n          continue;\n        }\n        if (value === true) value = \"\";\n        if (name.startsWith(\"rr_\")) {\n          specialAttributes[name] = value;\n          continue;\n        }\n        const isTextarea = tagName === \"textarea\" && name === \"value\";\n        const isRemoteOrDynamicCss = tagName === \"style\" && name === \"_cssText\";\n        if (isRemoteOrDynamicCss && hackCss && typeof value === \"string\") {\n          value = addHoverClass(value, cache);\n        }\n        if ((isTextarea || isRemoteOrDynamicCss) && typeof value === \"string\") {\n          const child = doc.createTextNode(value);\n          for (const c2 of Array.from(node.childNodes)) {\n            if (c2.nodeType === node.TEXT_NODE) {\n              node.removeChild(c2);\n            }\n          }\n          node.appendChild(child);\n          continue;\n        }\n        try {\n          if (n2.isSVG && name === \"xlink:href\") {\n            node.setAttributeNS(\n              \"http://www.w3.org/1999/xlink\",\n              name,\n              value.toString()\n            );\n          } else if (name === \"onload\" || name === \"onclick\" || name.substring(0, 7) === \"onmouse\") {\n            node.setAttribute(\"_\" + name, value.toString());\n          } else if (tagName === \"meta\" && n2.attributes[\"http-equiv\"] === \"Content-Security-Policy\" && name === \"content\") {\n            node.setAttribute(\"csp-content\", value.toString());\n            continue;\n          } else if (tagName === \"link\" && (n2.attributes.rel === \"preload\" || n2.attributes.rel === \"modulepreload\")) {\n          } else if (tagName === \"link\" && n2.attributes.rel === \"prefetch\" && typeof n2.attributes.href === \"string\" && extractFileExtension(n2.attributes.href) === \"js\") {\n          } else if (tagName === \"img\" && n2.attributes.srcset && n2.attributes.rr_dataURL) {\n            node.setAttribute(\n              \"rrweb-original-srcset\",\n              n2.attributes.srcset\n            );\n          } else {\n            node.setAttribute(name, value.toString());\n          }\n        } catch (error) {\n        }\n      }\n      for (const name in specialAttributes) {\n        const value = specialAttributes[name];\n        if (tagName === \"canvas\" && name === \"rr_dataURL\") {\n          const image = doc.createElement(\"img\");\n          image.onload = () => {\n            const ctx = node.getContext(\"2d\");\n            if (ctx) {\n              ctx.drawImage(image, 0, 0, image.width, image.height);\n            }\n          };\n          image.src = value.toString();\n          if (node.RRNodeType)\n            node.rr_dataURL = value.toString();\n        } else if (tagName === \"img\" && name === \"rr_dataURL\") {\n          const image = node;\n          if (!image.currentSrc.startsWith(\"data:\")) {\n            image.setAttribute(\n              \"rrweb-original-src\",\n              n2.attributes.src\n            );\n            image.src = value.toString();\n          }\n        }\n        if (name === \"rr_width\") {\n          node.style.setProperty(\"width\", value.toString());\n        } else if (name === \"rr_height\") {\n          node.style.setProperty(\"height\", value.toString());\n        } else if (name === \"rr_mediaCurrentTime\" && typeof value === \"number\") {\n          node.currentTime = value;\n        } else if (name === \"rr_mediaState\") {\n          switch (value) {\n            case \"played\":\n              node.play().catch((e2) => console.warn(\"media playback error\", e2));\n              break;\n            case \"paused\":\n              node.pause();\n              break;\n          }\n        }\n      }\n      if (n2.isShadowHost) {\n        if (!node.shadowRoot) {\n          node.attachShadow({ mode: \"open\" });\n        } else {\n          while (node.shadowRoot.firstChild) {\n            node.shadowRoot.removeChild(node.shadowRoot.firstChild);\n          }\n        }\n      }\n      return node;\n    }\n    case NodeType$2.Text:\n      return doc.createTextNode(\n        n2.isStyle && hackCss ? addHoverClass(n2.textContent, cache) : n2.textContent\n      );\n    case NodeType$2.CDATA:\n      if (!(doc instanceof XMLDocument)) {\n        return null;\n      }\n      return doc.createCDATASection(n2.textContent);\n    case NodeType$2.Comment:\n      return doc.createComment(n2.textContent);\n    default:\n      return null;\n  }\n}\nfunction buildNodeWithSN(n2, options) {\n  const {\n    doc,\n    mirror: mirror2,\n    skipChild = false,\n    hackCss = true,\n    afterAppend,\n    cache\n  } = options;\n  if (mirror2.has(n2.id)) {\n    const nodeInMirror = mirror2.getNode(n2.id);\n    const meta = mirror2.getMeta(nodeInMirror);\n    if (isNodeMetaEqual(meta, n2)) return mirror2.getNode(n2.id);\n  }\n  let node = buildNode(n2, { doc, hackCss, cache });\n  if (!node) {\n    return null;\n  }\n  if (n2.rootId && mirror2.getNode(n2.rootId) !== doc) {\n    mirror2.replace(n2.rootId, doc);\n  }\n  if (n2.type === NodeType$2.Document) {\n    doc.close();\n    doc.open();\n    if (n2.compatMode === \"BackCompat\" && n2.childNodes && n2.childNodes[0].type !== NodeType$2.DocumentType) {\n      if (n2.childNodes[0].type === NodeType$2.Element && \"xmlns\" in n2.childNodes[0].attributes && n2.childNodes[0].attributes.xmlns === \"http://www.w3.org/1999/xhtml\") {\n        doc.write(\n          '<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"\">'\n        );\n      } else {\n        doc.write(\n          '<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"\">'\n        );\n      }\n    }\n    node = doc;\n  }\n  mirror2.add(node, n2);\n  if ((n2.type === NodeType$2.Document || n2.type === NodeType$2.Element) && !skipChild) {\n    for (const childN of n2.childNodes) {\n      const childNode = buildNodeWithSN(childN, {\n        doc,\n        mirror: mirror2,\n        skipChild: false,\n        hackCss,\n        afterAppend,\n        cache\n      });\n      if (!childNode) {\n        console.warn(\"Failed to rebuild\", childN);\n        continue;\n      }\n      if (childN.isShadow && isElement(node) && node.shadowRoot) {\n        node.shadowRoot.appendChild(childNode);\n      } else if (n2.type === NodeType$2.Document && childN.type == NodeType$2.Element) {\n        const htmlElement = childNode;\n        let body = null;\n        htmlElement.childNodes.forEach((child) => {\n          if (child.nodeName === \"BODY\") body = child;\n        });\n        if (body) {\n          htmlElement.removeChild(body);\n          node.appendChild(childNode);\n          htmlElement.appendChild(body);\n        } else {\n          node.appendChild(childNode);\n        }\n      } else {\n        node.appendChild(childNode);\n      }\n      if (afterAppend) {\n        afterAppend(childNode, childN.id);\n      }\n    }\n  }\n  return node;\n}\nfunction visit(mirror2, onVisit) {\n  function walk(node) {\n    onVisit(node);\n  }\n  for (const id of mirror2.getIds()) {\n    if (mirror2.has(id)) {\n      walk(mirror2.getNode(id));\n    }\n  }\n}\nfunction handleScroll(node, mirror2) {\n  const n2 = mirror2.getMeta(node);\n  if (n2?.type !== NodeType$2.Element) {\n    return;\n  }\n  const el = node;\n  for (const name in n2.attributes) {\n    if (!(Object.prototype.hasOwnProperty.call(n2.attributes, name) && name.startsWith(\"rr_\"))) {\n      continue;\n    }\n    const value = n2.attributes[name];\n    if (name === \"rr_scrollLeft\") {\n      el.scrollLeft = value;\n    }\n    if (name === \"rr_scrollTop\") {\n      el.scrollTop = value;\n    }\n  }\n}\nfunction rebuild(n2, options) {\n  const {\n    doc,\n    onVisit,\n    hackCss = true,\n    afterAppend,\n    cache,\n    mirror: mirror2 = new Mirror()\n  } = options;\n  const node = buildNodeWithSN(n2, {\n    doc,\n    mirror: mirror2,\n    skipChild: false,\n    hackCss,\n    afterAppend,\n    cache\n  });\n  visit(mirror2, (visitedNode) => {\n    if (onVisit) {\n      onVisit(visitedNode);\n    }\n    handleScroll(visitedNode, mirror2);\n  });\n  return node;\n}\nfunction on(type, fn, target = document) {\n  const options = { capture: true, passive: true };\n  target.addEventListener(type, fn, options);\n  return () => target.removeEventListener(type, fn, options);\n}\nconst DEPARTED_MIRROR_ACCESS_WARNING = \"Please stop import mirror directly. Instead of that,\\r\\nnow you can use replayer.getMirror() to access the mirror instance of a replayer,\\r\\nor you can use record.mirror to access the mirror instance during recording.\";\nlet _mirror = {\n  map: {},\n  getId() {\n    console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n    return -1;\n  },\n  getNode() {\n    console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n    return null;\n  },\n  removeNodeFromMap() {\n    console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n  },\n  has() {\n    console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n    return false;\n  },\n  reset() {\n    console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n  }\n};\nif (typeof window !== \"undefined\" && window.Proxy && window.Reflect) {\n  _mirror = new Proxy(_mirror, {\n    get(target, prop, receiver) {\n      if (prop === \"map\") {\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n      }\n      return Reflect.get(target, prop, receiver);\n    }\n  });\n}\nfunction throttle(func, wait, options = {}) {\n  let timeout = null;\n  let previous = 0;\n  return function(...args) {\n    const now = Date.now();\n    if (!previous && options.leading === false) {\n      previous = now;\n    }\n    const remaining = wait - (now - previous);\n    const context = this;\n    if (remaining <= 0 || remaining > wait) {\n      if (timeout) {\n        clearTimeout(timeout);\n        timeout = null;\n      }\n      previous = now;\n      func.apply(context, args);\n    } else if (!timeout && options.trailing !== false) {\n      timeout = setTimeout$1(() => {\n        previous = options.leading === false ? 0 : Date.now();\n        timeout = null;\n        func.apply(context, args);\n      }, remaining);\n    }\n  };\n}\nfunction hookSetter(target, key, d, isRevoked, win = window) {\n  const original = win.Object.getOwnPropertyDescriptor(target, key);\n  win.Object.defineProperty(\n    target,\n    key,\n    isRevoked ? d : {\n      set(value) {\n        setTimeout$1(() => {\n          d.set.call(this, value);\n        }, 0);\n        if (original && original.set) {\n          original.set.call(this, value);\n        }\n      }\n    }\n  );\n  return () => hookSetter(target, key, original || {}, true);\n}\nfunction patch(source, name, replacement) {\n  try {\n    if (!(name in source)) {\n      return () => {\n      };\n    }\n    const original = source[name];\n    const wrapped = replacement(original);\n    if (typeof wrapped === \"function\") {\n      wrapped.prototype = wrapped.prototype || {};\n      Object.defineProperties(wrapped, {\n        __rrweb_original__: {\n          enumerable: false,\n          value: original\n        }\n      });\n    }\n    source[name] = wrapped;\n    return () => {\n      source[name] = original;\n    };\n  } catch {\n    return () => {\n    };\n  }\n}\nlet nowTimestamp = Date.now;\nif (!/* @__PURE__ */ /[1-9][0-9]{12}/.test(Date.now().toString())) {\n  nowTimestamp = () => (/* @__PURE__ */ new Date()).getTime();\n}\nfunction getWindowScroll(win) {\n  const doc = win.document;\n  return {\n    left: doc.scrollingElement ? doc.scrollingElement.scrollLeft : win.pageXOffset !== void 0 ? win.pageXOffset : doc?.documentElement.scrollLeft || doc?.body?.parentElement?.scrollLeft || doc?.body?.scrollLeft || 0,\n    top: doc.scrollingElement ? doc.scrollingElement.scrollTop : win.pageYOffset !== void 0 ? win.pageYOffset : doc?.documentElement.scrollTop || doc?.body?.parentElement?.scrollTop || doc?.body?.scrollTop || 0\n  };\n}\nfunction getWindowHeight() {\n  return window.innerHeight || document.documentElement && document.documentElement.clientHeight || document.body && document.body.clientHeight;\n}\nfunction getWindowWidth() {\n  return window.innerWidth || document.documentElement && document.documentElement.clientWidth || document.body && document.body.clientWidth;\n}\nfunction closestElementOfNode(node) {\n  if (!node) {\n    return null;\n  }\n  try {\n    const el = node.nodeType === node.ELEMENT_NODE ? node : node.parentElement;\n    return el;\n  } catch (error) {\n    return null;\n  }\n}\nfunction isBlocked(node, blockClass, blockSelector, unblockSelector, checkAncestors) {\n  if (!node) {\n    return false;\n  }\n  const el = closestElementOfNode(node);\n  if (!el) {\n    return false;\n  }\n  const blockedPredicate = createMatchPredicate(blockClass, blockSelector);\n  if (!checkAncestors) {\n    const isUnblocked = unblockSelector && el.matches(unblockSelector);\n    return blockedPredicate(el) && !isUnblocked;\n  }\n  const blockDistance = distanceToMatch(el, blockedPredicate);\n  let unblockDistance = -1;\n  if (blockDistance < 0) {\n    return false;\n  }\n  if (unblockSelector) {\n    unblockDistance = distanceToMatch(\n      el,\n      createMatchPredicate(null, unblockSelector)\n    );\n  }\n  if (blockDistance > -1 && unblockDistance < 0) {\n    return true;\n  }\n  return blockDistance < unblockDistance;\n}\nfunction isSerialized(n2, mirror2) {\n  return mirror2.getId(n2) !== -1;\n}\nfunction isIgnored(n2, mirror2) {\n  return mirror2.getId(n2) === IGNORED_NODE;\n}\nfunction isAncestorRemoved(target, mirror2) {\n  if (isShadowRoot(target)) {\n    return false;\n  }\n  const id = mirror2.getId(target);\n  if (!mirror2.has(id)) {\n    return true;\n  }\n  if (target.parentNode && target.parentNode.nodeType === target.DOCUMENT_NODE) {\n    return false;\n  }\n  if (!target.parentNode) {\n    return true;\n  }\n  return isAncestorRemoved(target.parentNode, mirror2);\n}\nfunction legacy_isTouchEvent(event) {\n  return Boolean(event.changedTouches);\n}\nfunction polyfill$1(win = window) {\n  if (\"NodeList\" in win && !win.NodeList.prototype.forEach) {\n    win.NodeList.prototype.forEach = Array.prototype.forEach;\n  }\n  if (\"DOMTokenList\" in win && !win.DOMTokenList.prototype.forEach) {\n    win.DOMTokenList.prototype.forEach = Array.prototype.forEach;\n  }\n  if (!Node.prototype.contains) {\n    Node.prototype.contains = (...args) => {\n      let node = args[0];\n      if (!(0 in args)) {\n        throw new TypeError(\"1 argument is required\");\n      }\n      do {\n        if (this === node) {\n          return true;\n        }\n      } while (node = node && node.parentNode);\n      return false;\n    };\n  }\n}\nfunction queueToResolveTrees(queue) {\n  const queueNodeMap = {};\n  const putIntoMap = (m, parent) => {\n    const nodeInTree = {\n      value: m,\n      parent,\n      children: []\n    };\n    queueNodeMap[m.node.id] = nodeInTree;\n    return nodeInTree;\n  };\n  const queueNodeTrees = [];\n  for (const mutation of queue) {\n    const { nextId, parentId } = mutation;\n    if (nextId && nextId in queueNodeMap) {\n      const nextInTree = queueNodeMap[nextId];\n      if (nextInTree.parent) {\n        const idx = nextInTree.parent.children.indexOf(nextInTree);\n        nextInTree.parent.children.splice(\n          idx,\n          0,\n          putIntoMap(mutation, nextInTree.parent)\n        );\n      } else {\n        const idx = queueNodeTrees.indexOf(nextInTree);\n        queueNodeTrees.splice(idx, 0, putIntoMap(mutation, null));\n      }\n      continue;\n    }\n    if (parentId in queueNodeMap) {\n      const parentInTree = queueNodeMap[parentId];\n      parentInTree.children.push(putIntoMap(mutation, parentInTree));\n      continue;\n    }\n    queueNodeTrees.push(putIntoMap(mutation, null));\n  }\n  return queueNodeTrees;\n}\nfunction iterateResolveTree(tree, cb) {\n  cb(tree.value);\n  for (let i2 = tree.children.length - 1; i2 >= 0; i2--) {\n    iterateResolveTree(tree.children[i2], cb);\n  }\n}\nfunction isSerializedIframe(n2, mirror2) {\n  return Boolean(n2.nodeName === \"IFRAME\" && mirror2.getMeta(n2));\n}\nfunction isSerializedStylesheet(n2, mirror2) {\n  return Boolean(\n    n2.nodeName === \"LINK\" && n2.nodeType === n2.ELEMENT_NODE && n2.getAttribute && n2.getAttribute(\"rel\") === \"stylesheet\" && mirror2.getMeta(n2)\n  );\n}\nfunction getBaseDimension(node, rootIframe) {\n  const frameElement = node.ownerDocument?.defaultView?.frameElement;\n  if (!frameElement || frameElement === rootIframe) {\n    return {\n      x: 0,\n      y: 0,\n      relativeScale: 1,\n      absoluteScale: 1\n    };\n  }\n  const frameDimension = frameElement.getBoundingClientRect();\n  const frameBaseDimension = getBaseDimension(frameElement, rootIframe);\n  const relativeScale = frameDimension.height / frameElement.clientHeight;\n  return {\n    x: frameDimension.x * frameBaseDimension.relativeScale + frameBaseDimension.x,\n    y: frameDimension.y * frameBaseDimension.relativeScale + frameBaseDimension.y,\n    relativeScale,\n    absoluteScale: frameBaseDimension.absoluteScale * relativeScale\n  };\n}\nfunction hasShadowRoot(n2) {\n  return Boolean(n2?.shadowRoot);\n}\nfunction getNestedRule(rules2, position) {\n  const rule = rules2[position[0]];\n  if (position.length === 1) {\n    return rule;\n  } else {\n    return getNestedRule(\n      rule.cssRules[position[1]].cssRules,\n      position.slice(2)\n    );\n  }\n}\nfunction getPositionsAndIndex(nestedIndex) {\n  const positions = [...nestedIndex];\n  const index = positions.pop();\n  return { positions, index };\n}\nfunction uniqueTextMutations(mutations) {\n  const idSet = /* @__PURE__ */ new Set();\n  const uniqueMutations = [];\n  for (let i2 = mutations.length; i2--; ) {\n    const mutation = mutations[i2];\n    if (!idSet.has(mutation.id)) {\n      uniqueMutations.push(mutation);\n      idSet.add(mutation.id);\n    }\n  }\n  return uniqueMutations;\n}\nclass StyleSheetMirror {\n  constructor() {\n    this.id = 1;\n    this.styleIDMap = /* @__PURE__ */ new WeakMap();\n    this.idStyleMap = /* @__PURE__ */ new Map();\n  }\n  getId(stylesheet) {\n    return this.styleIDMap.get(stylesheet) ?? -1;\n  }\n  has(stylesheet) {\n    return this.styleIDMap.has(stylesheet);\n  }\n  /**\n   * @returns If the stylesheet is in the mirror, returns the id of the stylesheet. If not, return the new assigned id.\n   */\n  add(stylesheet, id) {\n    if (this.has(stylesheet)) return this.getId(stylesheet);\n    let newId;\n    if (id === void 0) {\n      newId = this.id++;\n    } else newId = id;\n    this.styleIDMap.set(stylesheet, newId);\n    this.idStyleMap.set(newId, stylesheet);\n    return newId;\n  }\n  getStyle(id) {\n    return this.idStyleMap.get(id) || null;\n  }\n  reset() {\n    this.styleIDMap = /* @__PURE__ */ new WeakMap();\n    this.idStyleMap = /* @__PURE__ */ new Map();\n    this.id = 1;\n  }\n  generateId() {\n    return this.id++;\n  }\n}\nfunction getShadowHost(n2) {\n  let shadowHost = null;\n  if (n2.getRootNode?.()?.nodeType === Node.DOCUMENT_FRAGMENT_NODE && n2.getRootNode().host)\n    shadowHost = n2.getRootNode().host;\n  return shadowHost;\n}\nfunction getRootShadowHost(n2) {\n  let rootShadowHost = n2;\n  let shadowHost;\n  while (shadowHost = getShadowHost(rootShadowHost))\n    rootShadowHost = shadowHost;\n  return rootShadowHost;\n}\nfunction shadowHostInDom(n2) {\n  const doc = n2.ownerDocument;\n  if (!doc) return false;\n  const shadowHost = getRootShadowHost(n2);\n  return doc.contains(shadowHost);\n}\nfunction inDom(n2) {\n  const doc = n2.ownerDocument;\n  if (!doc) return false;\n  return doc.contains(n2) || shadowHostInDom(n2);\n}\nconst cachedImplementations = {};\nfunction getImplementation(name) {\n  const cached = cachedImplementations[name];\n  if (cached) {\n    return cached;\n  }\n  const document2 = window.document;\n  let impl = window[name];\n  if (document2 && typeof document2.createElement === \"function\") {\n    try {\n      const sandbox = document2.createElement(\"iframe\");\n      sandbox.hidden = true;\n      document2.head.appendChild(sandbox);\n      const contentWindow = sandbox.contentWindow;\n      if (contentWindow && contentWindow[name]) {\n        impl = // eslint-disable-next-line @typescript-eslint/unbound-method\n        contentWindow[name];\n      }\n      document2.head.removeChild(sandbox);\n    } catch (e2) {\n    }\n  }\n  return cachedImplementations[name] = impl.bind(\n    window\n  );\n}\nfunction onRequestAnimationFrame(...rest) {\n  return getImplementation(\"requestAnimationFrame\")(...rest);\n}\nfunction setTimeout$1(...rest) {\n  return getImplementation(\"setTimeout\")(...rest);\n}\nfunction clearTimeout(...rest) {\n  return getImplementation(\"clearTimeout\")(...rest);\n}\nconst utils = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  StyleSheetMirror,\n  get _mirror() {\n    return _mirror;\n  },\n  clearTimeout,\n  closestElementOfNode,\n  getBaseDimension,\n  getNestedRule,\n  getPositionsAndIndex,\n  getRootShadowHost,\n  getShadowHost,\n  getWindowHeight,\n  getWindowScroll,\n  getWindowWidth,\n  hasShadowRoot,\n  hookSetter,\n  inDom,\n  isAncestorRemoved,\n  isBlocked,\n  isIgnored,\n  isSerialized,\n  isSerializedIframe,\n  isSerializedStylesheet,\n  iterateResolveTree,\n  legacy_isTouchEvent,\n  get nowTimestamp() {\n    return nowTimestamp;\n  },\n  on,\n  onRequestAnimationFrame,\n  patch,\n  polyfill: polyfill$1,\n  queueToResolveTrees,\n  setTimeout: setTimeout$1,\n  shadowHostInDom,\n  throttle,\n  uniqueTextMutations\n}, Symbol.toStringTag, { value: \"Module\" }));\nvar EventType = /* @__PURE__ */ ((EventType2) => {\n  EventType2[EventType2[\"DomContentLoaded\"] = 0] = \"DomContentLoaded\";\n  EventType2[EventType2[\"Load\"] = 1] = \"Load\";\n  EventType2[EventType2[\"FullSnapshot\"] = 2] = \"FullSnapshot\";\n  EventType2[EventType2[\"IncrementalSnapshot\"] = 3] = \"IncrementalSnapshot\";\n  EventType2[EventType2[\"Meta\"] = 4] = \"Meta\";\n  EventType2[EventType2[\"Custom\"] = 5] = \"Custom\";\n  EventType2[EventType2[\"Plugin\"] = 6] = \"Plugin\";\n  return EventType2;\n})(EventType || {});\nvar IncrementalSource = /* @__PURE__ */ ((IncrementalSource2) => {\n  IncrementalSource2[IncrementalSource2[\"Mutation\"] = 0] = \"Mutation\";\n  IncrementalSource2[IncrementalSource2[\"MouseMove\"] = 1] = \"MouseMove\";\n  IncrementalSource2[IncrementalSource2[\"MouseInteraction\"] = 2] = \"MouseInteraction\";\n  IncrementalSource2[IncrementalSource2[\"Scroll\"] = 3] = \"Scroll\";\n  IncrementalSource2[IncrementalSource2[\"ViewportResize\"] = 4] = \"ViewportResize\";\n  IncrementalSource2[IncrementalSource2[\"Input\"] = 5] = \"Input\";\n  IncrementalSource2[IncrementalSource2[\"TouchMove\"] = 6] = \"TouchMove\";\n  IncrementalSource2[IncrementalSource2[\"MediaInteraction\"] = 7] = \"MediaInteraction\";\n  IncrementalSource2[IncrementalSource2[\"StyleSheetRule\"] = 8] = \"StyleSheetRule\";\n  IncrementalSource2[IncrementalSource2[\"CanvasMutation\"] = 9] = \"CanvasMutation\";\n  IncrementalSource2[IncrementalSource2[\"Font\"] = 10] = \"Font\";\n  IncrementalSource2[IncrementalSource2[\"Log\"] = 11] = \"Log\";\n  IncrementalSource2[IncrementalSource2[\"Drag\"] = 12] = \"Drag\";\n  IncrementalSource2[IncrementalSource2[\"StyleDeclaration\"] = 13] = \"StyleDeclaration\";\n  IncrementalSource2[IncrementalSource2[\"Selection\"] = 14] = \"Selection\";\n  IncrementalSource2[IncrementalSource2[\"AdoptedStyleSheet\"] = 15] = \"AdoptedStyleSheet\";\n  IncrementalSource2[IncrementalSource2[\"CustomElement\"] = 16] = \"CustomElement\";\n  return IncrementalSource2;\n})(IncrementalSource || {});\nvar MouseInteractions = /* @__PURE__ */ ((MouseInteractions2) => {\n  MouseInteractions2[MouseInteractions2[\"MouseUp\"] = 0] = \"MouseUp\";\n  MouseInteractions2[MouseInteractions2[\"MouseDown\"] = 1] = \"MouseDown\";\n  MouseInteractions2[MouseInteractions2[\"Click\"] = 2] = \"Click\";\n  MouseInteractions2[MouseInteractions2[\"ContextMenu\"] = 3] = \"ContextMenu\";\n  MouseInteractions2[MouseInteractions2[\"DblClick\"] = 4] = \"DblClick\";\n  MouseInteractions2[MouseInteractions2[\"Focus\"] = 5] = \"Focus\";\n  MouseInteractions2[MouseInteractions2[\"Blur\"] = 6] = \"Blur\";\n  MouseInteractions2[MouseInteractions2[\"TouchStart\"] = 7] = \"TouchStart\";\n  MouseInteractions2[MouseInteractions2[\"TouchMove_Departed\"] = 8] = \"TouchMove_Departed\";\n  MouseInteractions2[MouseInteractions2[\"TouchEnd\"] = 9] = \"TouchEnd\";\n  MouseInteractions2[MouseInteractions2[\"TouchCancel\"] = 10] = \"TouchCancel\";\n  return MouseInteractions2;\n})(MouseInteractions || {});\nvar PointerTypes = /* @__PURE__ */ ((PointerTypes2) => {\n  PointerTypes2[PointerTypes2[\"Mouse\"] = 0] = \"Mouse\";\n  PointerTypes2[PointerTypes2[\"Pen\"] = 1] = \"Pen\";\n  PointerTypes2[PointerTypes2[\"Touch\"] = 2] = \"Touch\";\n  return PointerTypes2;\n})(PointerTypes || {});\nvar CanvasContext = /* @__PURE__ */ ((CanvasContext2) => {\n  CanvasContext2[CanvasContext2[\"2D\"] = 0] = \"2D\";\n  CanvasContext2[CanvasContext2[\"WebGL\"] = 1] = \"WebGL\";\n  CanvasContext2[CanvasContext2[\"WebGL2\"] = 2] = \"WebGL2\";\n  return CanvasContext2;\n})(CanvasContext || {});\nvar MediaInteractions = /* @__PURE__ */ ((MediaInteractions2) => {\n  MediaInteractions2[MediaInteractions2[\"Play\"] = 0] = \"Play\";\n  MediaInteractions2[MediaInteractions2[\"Pause\"] = 1] = \"Pause\";\n  MediaInteractions2[MediaInteractions2[\"Seeked\"] = 2] = \"Seeked\";\n  MediaInteractions2[MediaInteractions2[\"VolumeChange\"] = 3] = \"VolumeChange\";\n  MediaInteractions2[MediaInteractions2[\"RateChange\"] = 4] = \"RateChange\";\n  return MediaInteractions2;\n})(MediaInteractions || {});\nvar ReplayerEvents = /* @__PURE__ */ ((ReplayerEvents2) => {\n  ReplayerEvents2[\"Start\"] = \"start\";\n  ReplayerEvents2[\"Pause\"] = \"pause\";\n  ReplayerEvents2[\"Resume\"] = \"resume\";\n  ReplayerEvents2[\"Resize\"] = \"resize\";\n  ReplayerEvents2[\"Finish\"] = \"finish\";\n  ReplayerEvents2[\"FullsnapshotRebuilded\"] = \"fullsnapshot-rebuilded\";\n  ReplayerEvents2[\"LoadStylesheetStart\"] = \"load-stylesheet-start\";\n  ReplayerEvents2[\"LoadStylesheetEnd\"] = \"load-stylesheet-end\";\n  ReplayerEvents2[\"SkipStart\"] = \"skip-start\";\n  ReplayerEvents2[\"SkipEnd\"] = \"skip-end\";\n  ReplayerEvents2[\"MouseInteraction\"] = \"mouse-interaction\";\n  ReplayerEvents2[\"EventCast\"] = \"event-cast\";\n  ReplayerEvents2[\"CustomEvent\"] = \"custom-event\";\n  ReplayerEvents2[\"Flush\"] = \"flush\";\n  ReplayerEvents2[\"StateChange\"] = \"state-change\";\n  ReplayerEvents2[\"PlayBack\"] = \"play-back\";\n  ReplayerEvents2[\"Destroy\"] = \"destroy\";\n  return ReplayerEvents2;\n})(ReplayerEvents || {});\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\nvar __defProp2 = Object.defineProperty;\nvar __defNormalProp2 = (obj, key, value) => key in obj ? __defProp2(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField2 = (obj, key, value) => __defNormalProp2(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\nvar NodeType$1 = /* @__PURE__ */ ((NodeType2) => {\n  NodeType2[NodeType2[\"Document\"] = 0] = \"Document\";\n  NodeType2[NodeType2[\"DocumentType\"] = 1] = \"DocumentType\";\n  NodeType2[NodeType2[\"Element\"] = 2] = \"Element\";\n  NodeType2[NodeType2[\"Text\"] = 3] = \"Text\";\n  NodeType2[NodeType2[\"CDATA\"] = 4] = \"CDATA\";\n  NodeType2[NodeType2[\"Comment\"] = 5] = \"Comment\";\n  return NodeType2;\n})(NodeType$1 || {});\nlet Mirror$1 = class Mirror2 {\n  constructor() {\n    __publicField2(this, \"idNodeMap\", /* @__PURE__ */ new Map());\n    __publicField2(this, \"nodeMetaMap\", /* @__PURE__ */ new WeakMap());\n  }\n  getId(n2) {\n    if (!n2) return -1;\n    const id = this.getMeta(n2)?.id;\n    return id ?? -1;\n  }\n  getNode(id) {\n    return this.idNodeMap.get(id) || null;\n  }\n  getIds() {\n    return Array.from(this.idNodeMap.keys());\n  }\n  getMeta(n2) {\n    return this.nodeMetaMap.get(n2) || null;\n  }\n  // removes the node from idNodeMap\n  // doesn't remove the node from nodeMetaMap\n  removeNodeFromMap(n2) {\n    const id = this.getId(n2);\n    this.idNodeMap.delete(id);\n    if (n2.childNodes) {\n      n2.childNodes.forEach(\n        (childNode) => this.removeNodeFromMap(childNode)\n      );\n    }\n  }\n  has(id) {\n    return this.idNodeMap.has(id);\n  }\n  hasNode(node) {\n    return this.nodeMetaMap.has(node);\n  }\n  add(n2, meta) {\n    const id = meta.id;\n    this.idNodeMap.set(id, n2);\n    this.nodeMetaMap.set(n2, meta);\n  }\n  replace(id, n2) {\n    const oldNode = this.getNode(id);\n    if (oldNode) {\n      const meta = this.nodeMetaMap.get(oldNode);\n      if (meta) this.nodeMetaMap.set(n2, meta);\n    }\n    this.idNodeMap.set(id, n2);\n  }\n  reset() {\n    this.idNodeMap = /* @__PURE__ */ new Map();\n    this.nodeMetaMap = /* @__PURE__ */ new WeakMap();\n  }\n};\nfunction createMirror$1() {\n  return new Mirror$1();\n}\nfunction parseCSSText(cssText) {\n  const res = {};\n  const listDelimiter = /;(?![^(]*\\))/g;\n  const propertyDelimiter = /:(.+)/;\n  const comment = /\\/\\*.*?\\*\\//g;\n  cssText.replace(comment, \"\").split(listDelimiter).forEach(function(item) {\n    if (item) {\n      const tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[camelize(tmp[0].trim())] = tmp[1].trim());\n    }\n  });\n  return res;\n}\nfunction toCSSText(style) {\n  const properties = [];\n  for (const name in style) {\n    const value = style[name];\n    if (typeof value !== \"string\") continue;\n    const normalizedName = hyphenate(name);\n    properties.push(`${normalizedName}: ${value};`);\n  }\n  return properties.join(\" \");\n}\nconst camelizeRE = /-([a-z])/g;\nconst CUSTOM_PROPERTY_REGEX = /^--[a-zA-Z0-9-]+$/;\nconst camelize = (str) => {\n  if (CUSTOM_PROPERTY_REGEX.test(str)) return str;\n  return str.replace(camelizeRE, (_, c2) => c2 ? c2.toUpperCase() : \"\");\n};\nconst hyphenateRE = /\\B([A-Z])/g;\nconst hyphenate = (str) => {\n  return str.replace(hyphenateRE, \"-$1\").toLowerCase();\n};\nclass BaseRRNode {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any\n  constructor(..._args) {\n    __publicField(this, \"parentElement\", null);\n    __publicField(this, \"parentNode\", null);\n    __publicField(this, \"ownerDocument\");\n    __publicField(this, \"firstChild\", null);\n    __publicField(this, \"lastChild\", null);\n    __publicField(this, \"previousSibling\", null);\n    __publicField(this, \"nextSibling\", null);\n    __publicField(this, \"ELEMENT_NODE\", 1);\n    __publicField(this, \"TEXT_NODE\", 3);\n    __publicField(this, \"nodeType\");\n    __publicField(this, \"nodeName\");\n    __publicField(this, \"RRNodeType\");\n  }\n  get childNodes() {\n    const childNodes = [];\n    let childIterator = this.firstChild;\n    while (childIterator) {\n      childNodes.push(childIterator);\n      childIterator = childIterator.nextSibling;\n    }\n    return childNodes;\n  }\n  contains(node) {\n    if (!(node instanceof BaseRRNode)) return false;\n    else if (node.ownerDocument !== this.ownerDocument) return false;\n    else if (node === this) return true;\n    while (node.parentNode) {\n      if (node.parentNode === this) return true;\n      node = node.parentNode;\n    }\n    return false;\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  appendChild(_newChild) {\n    throw new Error(\n      `RRDomException: Failed to execute 'appendChild' on 'RRNode': This RRNode type does not support this method.`\n    );\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  insertBefore(_newChild, _refChild) {\n    throw new Error(\n      `RRDomException: Failed to execute 'insertBefore' on 'RRNode': This RRNode type does not support this method.`\n    );\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  removeChild(_node) {\n    throw new Error(\n      `RRDomException: Failed to execute 'removeChild' on 'RRNode': This RRNode type does not support this method.`\n    );\n  }\n  toString() {\n    return \"RRNode\";\n  }\n}\nclass BaseRRDocument extends BaseRRNode {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(...args) {\n    super(args);\n    __publicField(this, \"nodeType\", 9);\n    __publicField(this, \"nodeName\", \"#document\");\n    __publicField(this, \"compatMode\", \"CSS1Compat\");\n    __publicField(this, \"RRNodeType\", NodeType$1.Document);\n    __publicField(this, \"textContent\", null);\n    this.ownerDocument = this;\n  }\n  get documentElement() {\n    return this.childNodes.find(\n      (node) => node.RRNodeType === NodeType$1.Element && node.tagName === \"HTML\"\n    ) || null;\n  }\n  get body() {\n    return this.documentElement?.childNodes.find(\n      (node) => node.RRNodeType === NodeType$1.Element && node.tagName === \"BODY\"\n    ) || null;\n  }\n  get head() {\n    return this.documentElement?.childNodes.find(\n      (node) => node.RRNodeType === NodeType$1.Element && node.tagName === \"HEAD\"\n    ) || null;\n  }\n  get implementation() {\n    return this;\n  }\n  get firstElementChild() {\n    return this.documentElement;\n  }\n  appendChild(newChild) {\n    const nodeType = newChild.RRNodeType;\n    if (nodeType === NodeType$1.Element || nodeType === NodeType$1.DocumentType) {\n      if (this.childNodes.some((s2) => s2.RRNodeType === nodeType)) {\n        throw new Error(\n          `RRDomException: Failed to execute 'appendChild' on 'RRNode': Only one ${nodeType === NodeType$1.Element ? \"RRElement\" : \"RRDoctype\"} on RRDocument allowed.`\n        );\n      }\n    }\n    const child = appendChild(this, newChild);\n    child.parentElement = null;\n    return child;\n  }\n  insertBefore(newChild, refChild) {\n    const nodeType = newChild.RRNodeType;\n    if (nodeType === NodeType$1.Element || nodeType === NodeType$1.DocumentType) {\n      if (this.childNodes.some((s2) => s2.RRNodeType === nodeType)) {\n        throw new Error(\n          `RRDomException: Failed to execute 'insertBefore' on 'RRNode': Only one ${nodeType === NodeType$1.Element ? \"RRElement\" : \"RRDoctype\"} on RRDocument allowed.`\n        );\n      }\n    }\n    const child = insertBefore(this, newChild, refChild);\n    child.parentElement = null;\n    return child;\n  }\n  removeChild(node) {\n    return removeChild(this, node);\n  }\n  open() {\n    this.firstChild = null;\n    this.lastChild = null;\n  }\n  close() {\n  }\n  /**\n   * Adhoc implementation for setting xhtml namespace in rebuilt.ts (rrweb-snapshot).\n   * There are two lines used this function:\n   * 1. doc.write('\\<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"\"\\>')\n   * 2. doc.write('\\<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"\"\\>')\n   */\n  write(content) {\n    let publicId;\n    if (content === '<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"\">')\n      publicId = \"-//W3C//DTD XHTML 1.0 Transitional//EN\";\n    else if (content === '<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"\">')\n      publicId = \"-//W3C//DTD HTML 4.0 Transitional//EN\";\n    if (publicId) {\n      const doctype = this.createDocumentType(\"html\", publicId, \"\");\n      this.open();\n      this.appendChild(doctype);\n    }\n  }\n  createDocument(_namespace, _qualifiedName, _doctype) {\n    return new BaseRRDocument();\n  }\n  createDocumentType(qualifiedName, publicId, systemId) {\n    const doctype = new BaseRRDocumentType(qualifiedName, publicId, systemId);\n    doctype.ownerDocument = this;\n    return doctype;\n  }\n  createElement(tagName) {\n    const element = new BaseRRElement(tagName);\n    element.ownerDocument = this;\n    return element;\n  }\n  createElementNS(_namespaceURI, qualifiedName) {\n    return this.createElement(qualifiedName);\n  }\n  createTextNode(data) {\n    const text = new BaseRRText(data);\n    text.ownerDocument = this;\n    return text;\n  }\n  createComment(data) {\n    const comment = new BaseRRComment(data);\n    comment.ownerDocument = this;\n    return comment;\n  }\n  createCDATASection(data) {\n    const CDATASection = new BaseRRCDATASection(data);\n    CDATASection.ownerDocument = this;\n    return CDATASection;\n  }\n  toString() {\n    return \"RRDocument\";\n  }\n}\nclass BaseRRDocumentType extends BaseRRNode {\n  constructor(qualifiedName, publicId, systemId) {\n    super();\n    __publicField(this, \"nodeType\", 10);\n    __publicField(this, \"RRNodeType\", NodeType$1.DocumentType);\n    __publicField(this, \"name\");\n    __publicField(this, \"publicId\");\n    __publicField(this, \"systemId\");\n    __publicField(this, \"textContent\", null);\n    this.name = qualifiedName;\n    this.publicId = publicId;\n    this.systemId = systemId;\n    this.nodeName = qualifiedName;\n  }\n  toString() {\n    return \"RRDocumentType\";\n  }\n}\nclass BaseRRElement extends BaseRRNode {\n  constructor(tagName) {\n    super();\n    __publicField(this, \"nodeType\", 1);\n    __publicField(this, \"RRNodeType\", NodeType$1.Element);\n    __publicField(this, \"tagName\");\n    __publicField(this, \"attributes\", {});\n    __publicField(this, \"shadowRoot\", null);\n    __publicField(this, \"scrollLeft\");\n    __publicField(this, \"scrollTop\");\n    this.tagName = tagName.toUpperCase();\n    this.nodeName = tagName.toUpperCase();\n  }\n  get textContent() {\n    let result = \"\";\n    this.childNodes.forEach((node) => result += node.textContent);\n    return result;\n  }\n  set textContent(textContent) {\n    this.firstChild = null;\n    this.lastChild = null;\n    this.appendChild(this.ownerDocument.createTextNode(textContent));\n  }\n  get classList() {\n    return new ClassList(\n      this.attributes.class,\n      (newClassName) => {\n        this.attributes.class = newClassName;\n      }\n    );\n  }\n  get id() {\n    return this.attributes.id || \"\";\n  }\n  get className() {\n    return this.attributes.class || \"\";\n  }\n  get style() {\n    const style = this.attributes.style ? parseCSSText(this.attributes.style) : {};\n    const hyphenateRE2 = /\\B([A-Z])/g;\n    style.setProperty = (name, value, priority) => {\n      if (hyphenateRE2.test(name)) return;\n      const normalizedName = camelize(name);\n      if (!value) delete style[normalizedName];\n      else style[normalizedName] = value;\n      if (priority === \"important\") style[normalizedName] += \" !important\";\n      this.attributes.style = toCSSText(style);\n    };\n    style.removeProperty = (name) => {\n      if (hyphenateRE2.test(name)) return \"\";\n      const normalizedName = camelize(name);\n      const value = style[normalizedName] || \"\";\n      delete style[normalizedName];\n      this.attributes.style = toCSSText(style);\n      return value;\n    };\n    return style;\n  }\n  getAttribute(name) {\n    return this.attributes[name] || null;\n  }\n  setAttribute(name, attribute) {\n    this.attributes[name] = attribute;\n  }\n  setAttributeNS(_namespace, qualifiedName, value) {\n    this.setAttribute(qualifiedName, value);\n  }\n  removeAttribute(name) {\n    delete this.attributes[name];\n  }\n  appendChild(newChild) {\n    return appendChild(this, newChild);\n  }\n  insertBefore(newChild, refChild) {\n    return insertBefore(this, newChild, refChild);\n  }\n  removeChild(node) {\n    return removeChild(this, node);\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  attachShadow(_init) {\n    const shadowRoot = this.ownerDocument.createElement(\"SHADOWROOT\");\n    this.shadowRoot = shadowRoot;\n    return shadowRoot;\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  dispatchEvent(_event) {\n    return true;\n  }\n  toString() {\n    let attributeString = \"\";\n    for (const attribute in this.attributes) {\n      attributeString += `${attribute}=\"${this.attributes[attribute]}\" `;\n    }\n    return `${this.tagName} ${attributeString}`;\n  }\n}\nclass BaseRRMediaElement extends BaseRRElement {\n  constructor() {\n    super(...arguments);\n    __publicField(this, \"currentTime\");\n    __publicField(this, \"volume\");\n    __publicField(this, \"paused\");\n    __publicField(this, \"muted\");\n    __publicField(this, \"playbackRate\");\n    __publicField(this, \"loop\");\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  attachShadow(_init) {\n    throw new Error(\n      `RRDomException: Failed to execute 'attachShadow' on 'RRElement': This RRElement does not support attachShadow`\n    );\n  }\n  play() {\n    this.paused = false;\n  }\n  pause() {\n    this.paused = true;\n  }\n}\nclass BaseRRText extends BaseRRNode {\n  constructor(data) {\n    super();\n    __publicField(this, \"nodeType\", 3);\n    __publicField(this, \"nodeName\", \"#text\");\n    __publicField(this, \"RRNodeType\", NodeType$1.Text);\n    __publicField(this, \"data\");\n    this.data = data;\n  }\n  get textContent() {\n    return this.data;\n  }\n  set textContent(textContent) {\n    this.data = textContent;\n  }\n  toString() {\n    return `RRText text=${JSON.stringify(this.data)}`;\n  }\n}\nclass BaseRRComment extends BaseRRNode {\n  constructor(data) {\n    super();\n    __publicField(this, \"nodeType\", 8);\n    __publicField(this, \"nodeName\", \"#comment\");\n    __publicField(this, \"RRNodeType\", NodeType$1.Comment);\n    __publicField(this, \"data\");\n    this.data = data;\n  }\n  get textContent() {\n    return this.data;\n  }\n  set textContent(textContent) {\n    this.data = textContent;\n  }\n  toString() {\n    return `RRComment text=${JSON.stringify(this.data)}`;\n  }\n}\nclass BaseRRCDATASection extends BaseRRNode {\n  constructor(data) {\n    super();\n    __publicField(this, \"nodeName\", \"#cdata-section\");\n    __publicField(this, \"nodeType\", 4);\n    __publicField(this, \"RRNodeType\", NodeType$1.CDATA);\n    __publicField(this, \"data\");\n    this.data = data;\n  }\n  get textContent() {\n    return this.data;\n  }\n  set textContent(textContent) {\n    this.data = textContent;\n  }\n  toString() {\n    return `RRCDATASection data=${JSON.stringify(this.data)}`;\n  }\n}\nclass ClassList {\n  constructor(classText, onChange) {\n    __publicField(this, \"onChange\");\n    __publicField(this, \"classes\", []);\n    __publicField(this, \"add\", (...classNames) => {\n      for (const item of classNames) {\n        const className = String(item);\n        if (this.classes.indexOf(className) >= 0) continue;\n        this.classes.push(className);\n      }\n      this.onChange && this.onChange(this.classes.join(\" \"));\n    });\n    __publicField(this, \"remove\", (...classNames) => {\n      this.classes = this.classes.filter(\n        (item) => classNames.indexOf(item) === -1\n      );\n      this.onChange && this.onChange(this.classes.join(\" \"));\n    });\n    if (classText) {\n      const classes = classText.trim().split(/\\s+/);\n      this.classes.push(...classes);\n    }\n    this.onChange = onChange;\n  }\n}\nfunction appendChild(parent, newChild) {\n  if (newChild.parentNode) newChild.parentNode.removeChild(newChild);\n  if (parent.lastChild) {\n    parent.lastChild.nextSibling = newChild;\n    newChild.previousSibling = parent.lastChild;\n  } else {\n    parent.firstChild = newChild;\n    newChild.previousSibling = null;\n  }\n  parent.lastChild = newChild;\n  newChild.nextSibling = null;\n  newChild.parentNode = parent;\n  newChild.parentElement = parent;\n  newChild.ownerDocument = parent.ownerDocument;\n  return newChild;\n}\nfunction insertBefore(parent, newChild, refChild) {\n  if (!refChild) return appendChild(parent, newChild);\n  if (refChild.parentNode !== parent)\n    throw new Error(\n      \"Failed to execute 'insertBefore' on 'RRNode': The RRNode before which the new node is to be inserted is not a child of this RRNode.\"\n    );\n  if (newChild === refChild) return newChild;\n  if (newChild.parentNode) newChild.parentNode.removeChild(newChild);\n  newChild.previousSibling = refChild.previousSibling;\n  refChild.previousSibling = newChild;\n  newChild.nextSibling = refChild;\n  if (newChild.previousSibling) newChild.previousSibling.nextSibling = newChild;\n  else parent.firstChild = newChild;\n  newChild.parentElement = parent;\n  newChild.parentNode = parent;\n  newChild.ownerDocument = parent.ownerDocument;\n  return newChild;\n}\nfunction removeChild(parent, child) {\n  if (child.parentNode !== parent)\n    throw new Error(\n      \"Failed to execute 'removeChild' on 'RRNode': The RRNode to be removed is not a child of this RRNode.\"\n    );\n  if (child.previousSibling)\n    child.previousSibling.nextSibling = child.nextSibling;\n  else parent.firstChild = child.nextSibling;\n  if (child.nextSibling)\n    child.nextSibling.previousSibling = child.previousSibling;\n  else parent.lastChild = child.previousSibling;\n  child.previousSibling = null;\n  child.nextSibling = null;\n  child.parentElement = null;\n  child.parentNode = null;\n  return child;\n}\nvar NodeType = /* @__PURE__ */ ((NodeType2) => {\n  NodeType2[NodeType2[\"PLACEHOLDER\"] = 0] = \"PLACEHOLDER\";\n  NodeType2[NodeType2[\"ELEMENT_NODE\"] = 1] = \"ELEMENT_NODE\";\n  NodeType2[NodeType2[\"ATTRIBUTE_NODE\"] = 2] = \"ATTRIBUTE_NODE\";\n  NodeType2[NodeType2[\"TEXT_NODE\"] = 3] = \"TEXT_NODE\";\n  NodeType2[NodeType2[\"CDATA_SECTION_NODE\"] = 4] = \"CDATA_SECTION_NODE\";\n  NodeType2[NodeType2[\"ENTITY_REFERENCE_NODE\"] = 5] = \"ENTITY_REFERENCE_NODE\";\n  NodeType2[NodeType2[\"ENTITY_NODE\"] = 6] = \"ENTITY_NODE\";\n  NodeType2[NodeType2[\"PROCESSING_INSTRUCTION_NODE\"] = 7] = \"PROCESSING_INSTRUCTION_NODE\";\n  NodeType2[NodeType2[\"COMMENT_NODE\"] = 8] = \"COMMENT_NODE\";\n  NodeType2[NodeType2[\"DOCUMENT_NODE\"] = 9] = \"DOCUMENT_NODE\";\n  NodeType2[NodeType2[\"DOCUMENT_TYPE_NODE\"] = 10] = \"DOCUMENT_TYPE_NODE\";\n  NodeType2[NodeType2[\"DOCUMENT_FRAGMENT_NODE\"] = 11] = \"DOCUMENT_FRAGMENT_NODE\";\n  return NodeType2;\n})(NodeType || {});\nfunction getIFrameContentDocument(iframe) {\n  try {\n    return iframe.contentDocument;\n  } catch (e2) {\n  }\n}\nfunction getIFrameContentWindow(iframe) {\n  try {\n    return iframe.contentWindow;\n  } catch (e2) {\n  }\n}\nconst NAMESPACES = {\n  svg: \"http://www.w3.org/2000/svg\",\n  \"xlink:href\": \"http://www.w3.org/1999/xlink\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\nconst SVGTagMap = {\n  altglyph: \"altGlyph\",\n  altglyphdef: \"altGlyphDef\",\n  altglyphitem: \"altGlyphItem\",\n  animatecolor: \"animateColor\",\n  animatemotion: \"animateMotion\",\n  animatetransform: \"animateTransform\",\n  clippath: \"clipPath\",\n  feblend: \"feBlend\",\n  fecolormatrix: \"feColorMatrix\",\n  fecomponenttransfer: \"feComponentTransfer\",\n  fecomposite: \"feComposite\",\n  feconvolvematrix: \"feConvolveMatrix\",\n  fediffuselighting: \"feDiffuseLighting\",\n  fedisplacementmap: \"feDisplacementMap\",\n  fedistantlight: \"feDistantLight\",\n  fedropshadow: \"feDropShadow\",\n  feflood: \"feFlood\",\n  fefunca: \"feFuncA\",\n  fefuncb: \"feFuncB\",\n  fefuncg: \"feFuncG\",\n  fefuncr: \"feFuncR\",\n  fegaussianblur: \"feGaussianBlur\",\n  feimage: \"feImage\",\n  femerge: \"feMerge\",\n  femergenode: \"feMergeNode\",\n  femorphology: \"feMorphology\",\n  feoffset: \"feOffset\",\n  fepointlight: \"fePointLight\",\n  fespecularlighting: \"feSpecularLighting\",\n  fespotlight: \"feSpotLight\",\n  fetile: \"feTile\",\n  feturbulence: \"feTurbulence\",\n  foreignobject: \"foreignObject\",\n  glyphref: \"glyphRef\",\n  lineargradient: \"linearGradient\",\n  radialgradient: \"radialGradient\"\n};\nlet createdNodeSet = null;\nfunction diff(oldTree, newTree, replayer, rrnodeMirror = newTree.mirror || newTree.ownerDocument.mirror) {\n  oldTree = diffBeforeUpdatingChildren(\n    oldTree,\n    newTree,\n    replayer,\n    rrnodeMirror\n  );\n  diffChildren(oldTree, newTree, replayer, rrnodeMirror);\n  diffAfterUpdatingChildren(oldTree, newTree, replayer);\n}\nfunction diffBeforeUpdatingChildren(oldTree, newTree, replayer, rrnodeMirror) {\n  if (replayer.afterAppend && !createdNodeSet) {\n    createdNodeSet = /* @__PURE__ */ new WeakSet();\n    setTimeout(() => {\n      createdNodeSet = null;\n    }, 0);\n  }\n  if (!sameNodeType(oldTree, newTree)) {\n    const calibratedOldTree = createOrGetNode(\n      newTree,\n      replayer.mirror,\n      rrnodeMirror\n    );\n    oldTree.parentNode?.replaceChild(calibratedOldTree, oldTree);\n    oldTree = calibratedOldTree;\n  }\n  switch (newTree.RRNodeType) {\n    case NodeType$1.Document: {\n      if (!nodeMatching(oldTree, newTree, replayer.mirror, rrnodeMirror)) {\n        const newMeta = rrnodeMirror.getMeta(newTree);\n        if (newMeta) {\n          replayer.mirror.removeNodeFromMap(oldTree);\n          oldTree.close();\n          oldTree.open();\n          replayer.mirror.add(oldTree, newMeta);\n          createdNodeSet?.add(oldTree);\n        }\n      }\n      break;\n    }\n    case NodeType$1.Element: {\n      const oldElement = oldTree;\n      const newRRElement = newTree;\n      switch (newRRElement.tagName) {\n        case \"IFRAME\": {\n          const oldContentDocument = getIFrameContentDocument(\n            oldTree\n          );\n          if (!oldContentDocument) break;\n          diff(\n            oldContentDocument,\n            newTree.contentDocument,\n            replayer,\n            rrnodeMirror\n          );\n          break;\n        }\n      }\n      if (newRRElement.shadowRoot) {\n        if (!oldElement.shadowRoot) oldElement.attachShadow({ mode: \"open\" });\n        diffChildren(\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          oldElement.shadowRoot,\n          newRRElement.shadowRoot,\n          replayer,\n          rrnodeMirror\n        );\n      }\n      diffProps(oldElement, newRRElement, rrnodeMirror);\n      break;\n    }\n  }\n  return oldTree;\n}\nfunction diffAfterUpdatingChildren(oldTree, newTree, replayer) {\n  switch (newTree.RRNodeType) {\n    case NodeType$1.Document: {\n      const scrollData = newTree.scrollData;\n      scrollData && replayer.applyScroll(scrollData, true);\n      break;\n    }\n    case NodeType$1.Element: {\n      const oldElement = oldTree;\n      const newRRElement = newTree;\n      newRRElement.scrollData && replayer.applyScroll(newRRElement.scrollData, true);\n      newRRElement.inputData && replayer.applyInput(newRRElement.inputData);\n      switch (newRRElement.tagName) {\n        case \"AUDIO\":\n        case \"VIDEO\": {\n          const oldMediaElement = oldTree;\n          const newMediaRRElement = newRRElement;\n          if (newMediaRRElement.paused !== void 0)\n            newMediaRRElement.paused ? void oldMediaElement.pause() : void oldMediaElement.play();\n          if (newMediaRRElement.muted !== void 0)\n            oldMediaElement.muted = newMediaRRElement.muted;\n          if (newMediaRRElement.volume !== void 0)\n            oldMediaElement.volume = newMediaRRElement.volume;\n          if (newMediaRRElement.currentTime !== void 0)\n            oldMediaElement.currentTime = newMediaRRElement.currentTime;\n          if (newMediaRRElement.playbackRate !== void 0)\n            oldMediaElement.playbackRate = newMediaRRElement.playbackRate;\n          break;\n        }\n        case \"CANVAS\": {\n          const rrCanvasElement = newTree;\n          if (rrCanvasElement.rr_dataURL !== null) {\n            const image = document.createElement(\"img\");\n            image.onload = () => {\n              const ctx = oldElement.getContext(\"2d\");\n              if (ctx) {\n                ctx.drawImage(image, 0, 0, image.width, image.height);\n              }\n            };\n            image.src = rrCanvasElement.rr_dataURL;\n          }\n          rrCanvasElement.canvasMutations.forEach(\n            (canvasMutation2) => replayer.applyCanvas(\n              canvasMutation2.event,\n              canvasMutation2.mutation,\n              oldTree\n            )\n          );\n          break;\n        }\n        case \"STYLE\": {\n          const styleSheet = oldElement.sheet;\n          styleSheet && newTree.rules.forEach(\n            (data) => replayer.applyStyleSheetMutation(data, styleSheet)\n          );\n          break;\n        }\n      }\n      break;\n    }\n    case NodeType$1.Text:\n    case NodeType$1.Comment:\n    case NodeType$1.CDATA: {\n      if (oldTree.textContent !== newTree.data)\n        oldTree.textContent = newTree.data;\n      break;\n    }\n  }\n  if (createdNodeSet?.has(oldTree)) {\n    createdNodeSet.delete(oldTree);\n    replayer.afterAppend?.(oldTree, replayer.mirror.getId(oldTree));\n  }\n}\nfunction diffProps(oldTree, newTree, rrnodeMirror) {\n  const oldAttributes = oldTree.attributes;\n  const newAttributes = newTree.attributes;\n  for (const name in newAttributes) {\n    const newValue = newAttributes[name];\n    const sn = rrnodeMirror.getMeta(newTree);\n    if (sn?.isSVG && NAMESPACES[name])\n      oldTree.setAttributeNS(NAMESPACES[name], name, newValue);\n    else if (newTree.tagName === \"CANVAS\" && name === \"rr_dataURL\") {\n      const image = document.createElement(\"img\");\n      image.src = newValue;\n      image.onload = () => {\n        const ctx = oldTree.getContext(\"2d\");\n        if (ctx) {\n          ctx.drawImage(image, 0, 0, image.width, image.height);\n        }\n      };\n    } else if (newTree.tagName === \"IFRAME\" && name === \"srcdoc\") continue;\n    else {\n      try {\n        oldTree.setAttribute(name, newValue);\n      } catch (err) {\n        console.warn(err);\n      }\n    }\n  }\n  for (const { name } of Array.from(oldAttributes))\n    if (!(name in newAttributes)) oldTree.removeAttribute(name);\n  newTree.scrollLeft && (oldTree.scrollLeft = newTree.scrollLeft);\n  newTree.scrollTop && (oldTree.scrollTop = newTree.scrollTop);\n}\nfunction diffChildren(oldTree, newTree, replayer, rrnodeMirror) {\n  const oldChildren = Array.from(oldTree.childNodes);\n  const newChildren = newTree.childNodes;\n  if (oldChildren.length === 0 && newChildren.length === 0) return;\n  let oldStartIndex = 0, oldEndIndex = oldChildren.length - 1, newStartIndex = 0, newEndIndex = newChildren.length - 1;\n  let oldStartNode = oldChildren[oldStartIndex], oldEndNode = oldChildren[oldEndIndex], newStartNode = newChildren[newStartIndex], newEndNode = newChildren[newEndIndex];\n  let oldIdToIndex = void 0, indexInOld = void 0;\n  while (oldStartIndex <= oldEndIndex && newStartIndex <= newEndIndex) {\n    if (oldStartNode === void 0) {\n      oldStartNode = oldChildren[++oldStartIndex];\n    } else if (oldEndNode === void 0) {\n      oldEndNode = oldChildren[--oldEndIndex];\n    } else if (\n      // same first node?\n      nodeMatching(oldStartNode, newStartNode, replayer.mirror, rrnodeMirror)\n    ) {\n      oldStartNode = oldChildren[++oldStartIndex];\n      newStartNode = newChildren[++newStartIndex];\n    } else if (\n      // same last node?\n      nodeMatching(oldEndNode, newEndNode, replayer.mirror, rrnodeMirror)\n    ) {\n      oldEndNode = oldChildren[--oldEndIndex];\n      newEndNode = newChildren[--newEndIndex];\n    } else if (\n      // is the first old node the same as the last new node?\n      nodeMatching(oldStartNode, newEndNode, replayer.mirror, rrnodeMirror)\n    ) {\n      try {\n        handleInsertBefore(oldTree, oldStartNode, oldEndNode.nextSibling);\n      } catch (e2) {\n        console.warn(e2);\n      }\n      oldStartNode = oldChildren[++oldStartIndex];\n      newEndNode = newChildren[--newEndIndex];\n    } else if (\n      // is the last old node the same as the first new node?\n      nodeMatching(oldEndNode, newStartNode, replayer.mirror, rrnodeMirror)\n    ) {\n      try {\n        handleInsertBefore(oldTree, oldEndNode, oldStartNode);\n      } catch (e2) {\n        console.warn(e2);\n      }\n      oldEndNode = oldChildren[--oldEndIndex];\n      newStartNode = newChildren[++newStartIndex];\n    } else {\n      if (!oldIdToIndex) {\n        oldIdToIndex = {};\n        for (let i2 = oldStartIndex; i2 <= oldEndIndex; i2++) {\n          const oldChild2 = oldChildren[i2];\n          if (oldChild2 && replayer.mirror.hasNode(oldChild2))\n            oldIdToIndex[replayer.mirror.getId(oldChild2)] = i2;\n        }\n      }\n      indexInOld = oldIdToIndex[rrnodeMirror.getId(newStartNode)];\n      const nodeToMove = oldChildren[indexInOld];\n      if (indexInOld !== void 0 && nodeToMove && nodeMatching(nodeToMove, newStartNode, replayer.mirror, rrnodeMirror)) {\n        try {\n          handleInsertBefore(oldTree, nodeToMove, oldStartNode);\n        } catch (e2) {\n          console.warn(e2);\n        }\n        oldChildren[indexInOld] = void 0;\n      } else {\n        const newNode = createOrGetNode(\n          newStartNode,\n          replayer.mirror,\n          rrnodeMirror\n        );\n        if (oldTree.nodeName === \"#document\" && oldStartNode && /**\n        * Special case 1: one document isn't allowed to have two doctype nodes at the same time, so we need to remove the old one first before inserting the new one.\n        * How this case happens: A parent document in the old tree already has a doctype node with an id e.g. #1. A new full snapshot rebuilds the replayer with a new doctype node with another id #2. According to the algorithm, the new doctype node will be inserted before the old one, which is not allowed by the Document standard.\n        */\n        (newNode.nodeType === newNode.DOCUMENT_TYPE_NODE && oldStartNode.nodeType === oldStartNode.DOCUMENT_TYPE_NODE || /**\n        * Special case 2: one document isn't allowed to have two HTMLElements at the same time, so we need to remove the old one first before inserting the new one.\n        * How this case happens: A mounted iframe element has an automatically created HTML element. We should delete it before inserting a serialized one. Otherwise, an error 'Only one element on document allowed' will be thrown.\n        */\n        newNode.nodeType === newNode.ELEMENT_NODE && oldStartNode.nodeType === oldStartNode.ELEMENT_NODE)) {\n          oldTree.removeChild(oldStartNode);\n          replayer.mirror.removeNodeFromMap(oldStartNode);\n          oldStartNode = oldChildren[++oldStartIndex];\n        }\n        try {\n          handleInsertBefore(oldTree, newNode, oldStartNode || null);\n        } catch (e2) {\n          console.warn(e2);\n        }\n      }\n      newStartNode = newChildren[++newStartIndex];\n    }\n  }\n  if (oldStartIndex > oldEndIndex) {\n    const referenceRRNode = newChildren[newEndIndex + 1];\n    let referenceNode = null;\n    if (referenceRRNode)\n      referenceNode = replayer.mirror.getNode(\n        rrnodeMirror.getId(referenceRRNode)\n      );\n    for (; newStartIndex <= newEndIndex; ++newStartIndex) {\n      const newNode = createOrGetNode(\n        newChildren[newStartIndex],\n        replayer.mirror,\n        rrnodeMirror\n      );\n      try {\n        handleInsertBefore(oldTree, newNode, referenceNode);\n      } catch (e2) {\n        console.warn(e2);\n      }\n    }\n  } else if (newStartIndex > newEndIndex) {\n    for (; oldStartIndex <= oldEndIndex; oldStartIndex++) {\n      const node = oldChildren[oldStartIndex];\n      if (!node || node.parentNode !== oldTree) continue;\n      try {\n        oldTree.removeChild(node);\n        replayer.mirror.removeNodeFromMap(node);\n      } catch (e2) {\n        console.warn(e2);\n      }\n    }\n  }\n  let oldChild = oldTree.firstChild;\n  let newChild = newTree.firstChild;\n  while (oldChild !== null && newChild !== null) {\n    diff(oldChild, newChild, replayer, rrnodeMirror);\n    oldChild = oldChild.nextSibling;\n    newChild = newChild.nextSibling;\n  }\n}\nfunction createOrGetNode(rrNode, domMirror, rrnodeMirror) {\n  const nodeId = rrnodeMirror.getId(rrNode);\n  const sn = rrnodeMirror.getMeta(rrNode);\n  let node = null;\n  if (nodeId > -1) node = domMirror.getNode(nodeId);\n  if (node !== null && sameNodeType(node, rrNode)) return node;\n  switch (rrNode.RRNodeType) {\n    case NodeType$1.Document:\n      node = new Document();\n      break;\n    case NodeType$1.DocumentType:\n      node = document.implementation.createDocumentType(\n        rrNode.name,\n        rrNode.publicId,\n        rrNode.systemId\n      );\n      break;\n    case NodeType$1.Element: {\n      let tagName = rrNode.tagName.toLowerCase();\n      tagName = SVGTagMap[tagName] || tagName;\n      if (sn && \"isSVG\" in sn && sn?.isSVG) {\n        node = document.createElementNS(NAMESPACES[\"svg\"], tagName);\n      } else node = document.createElement(rrNode.tagName);\n      break;\n    }\n    case NodeType$1.Text:\n      node = document.createTextNode(rrNode.data);\n      break;\n    case NodeType$1.Comment:\n      node = document.createComment(rrNode.data);\n      break;\n    case NodeType$1.CDATA:\n      node = document.createCDATASection(rrNode.data);\n      break;\n  }\n  if (sn) domMirror.add(node, { ...sn });\n  try {\n    createdNodeSet?.add(node);\n  } catch (e2) {\n  }\n  return node;\n}\nfunction sameNodeType(node1, node2) {\n  if (node1.nodeType !== node2.nodeType) return false;\n  return node1.nodeType !== node1.ELEMENT_NODE || node1.tagName.toUpperCase() === node2.tagName;\n}\nfunction nodeMatching(node1, node2, domMirror, rrdomMirror) {\n  const node1Id = domMirror.getId(node1);\n  const node2Id = rrdomMirror.getId(node2);\n  if (node1Id === -1 || node1Id !== node2Id) return false;\n  return sameNodeType(node1, node2);\n}\nfunction getInsertedStylesFromElement(styleElement) {\n  const elementCssRules = styleElement.sheet?.cssRules;\n  if (!elementCssRules || !elementCssRules.length) return;\n  const tempStyleSheet = new CSSStyleSheet();\n  tempStyleSheet.replaceSync(styleElement.innerText);\n  const innerTextStylesMap = {};\n  for (let i2 = 0; i2 < tempStyleSheet.cssRules.length; i2++) {\n    innerTextStylesMap[tempStyleSheet.cssRules[i2].cssText] = tempStyleSheet.cssRules[i2];\n  }\n  const insertedStylesStyleSheet = [];\n  for (let i2 = 0; i2 < elementCssRules?.length; i2++) {\n    const cssRuleText = elementCssRules[i2].cssText;\n    if (!innerTextStylesMap[cssRuleText]) {\n      insertedStylesStyleSheet.push({\n        index: i2,\n        cssRuleText\n      });\n    }\n  }\n  return insertedStylesStyleSheet;\n}\nfunction handleInsertBefore(oldTree, nodeToMove, insertBeforeNode) {\n  let insertedStyles;\n  if (nodeToMove.nodeName === \"STYLE\") {\n    insertedStyles = getInsertedStylesFromElement(\n      nodeToMove\n    );\n  }\n  oldTree.insertBefore(nodeToMove, insertBeforeNode);\n  if (insertedStyles && insertedStyles.length) {\n    insertedStyles.forEach(({ cssRuleText, index }) => {\n      nodeToMove.sheet?.insertRule(cssRuleText, index);\n    });\n  }\n}\nclass RRDocument extends BaseRRDocument {\n  constructor(mirror2) {\n    super();\n    __publicField(this, \"UNSERIALIZED_STARTING_ID\", -2);\n    __publicField(this, \"_unserializedId\", this.UNSERIALIZED_STARTING_ID);\n    __publicField(this, \"mirror\", createMirror());\n    __publicField(this, \"scrollData\", null);\n    if (mirror2) {\n      this.mirror = mirror2;\n    }\n  }\n  /**\n   * Every time the id is used, it will minus 1 automatically to avoid collisions.\n   */\n  get unserializedId() {\n    return this._unserializedId--;\n  }\n  createDocument(_namespace, _qualifiedName, _doctype) {\n    return new RRDocument();\n  }\n  createDocumentType(qualifiedName, publicId, systemId) {\n    const documentTypeNode = new RRDocumentType(\n      qualifiedName,\n      publicId,\n      systemId\n    );\n    documentTypeNode.ownerDocument = this;\n    return documentTypeNode;\n  }\n  createElement(tagName) {\n    const upperTagName = tagName.toUpperCase();\n    let element;\n    switch (upperTagName) {\n      case \"AUDIO\":\n      case \"VIDEO\":\n        element = new RRMediaElement(upperTagName);\n        break;\n      case \"IFRAME\":\n        element = new RRIFrameElement(upperTagName, this.mirror);\n        break;\n      case \"CANVAS\":\n        element = new RRCanvasElement(upperTagName);\n        break;\n      case \"STYLE\":\n        element = new RRStyleElement(upperTagName);\n        break;\n      default:\n        element = new RRElement(upperTagName);\n        break;\n    }\n    element.ownerDocument = this;\n    return element;\n  }\n  createComment(data) {\n    const commentNode = new RRComment(data);\n    commentNode.ownerDocument = this;\n    return commentNode;\n  }\n  createCDATASection(data) {\n    const sectionNode = new RRCDATASection(data);\n    sectionNode.ownerDocument = this;\n    return sectionNode;\n  }\n  createTextNode(data) {\n    const textNode = new RRText(data);\n    textNode.ownerDocument = this;\n    return textNode;\n  }\n  destroyTree() {\n    this.firstChild = null;\n    this.lastChild = null;\n    this.mirror.reset();\n  }\n  open() {\n    super.open();\n    this._unserializedId = this.UNSERIALIZED_STARTING_ID;\n  }\n}\nconst RRDocumentType = BaseRRDocumentType;\nclass RRElement extends BaseRRElement {\n  constructor() {\n    super(...arguments);\n    __publicField(this, \"inputData\", null);\n    __publicField(this, \"scrollData\", null);\n  }\n}\nclass RRMediaElement extends BaseRRMediaElement {\n}\nclass RRCanvasElement extends RRElement {\n  constructor() {\n    super(...arguments);\n    __publicField(this, \"rr_dataURL\", null);\n    __publicField(this, \"canvasMutations\", []);\n  }\n  /**\n   * This is a dummy implementation to distinguish RRCanvasElement from real HTMLCanvasElement.\n   */\n  getContext() {\n    return null;\n  }\n}\nclass RRStyleElement extends RRElement {\n  constructor() {\n    super(...arguments);\n    __publicField(this, \"rules\", []);\n  }\n}\nclass RRIFrameElement extends RRElement {\n  constructor(upperTagName, mirror2) {\n    super(upperTagName);\n    __publicField(this, \"contentDocument\", new RRDocument());\n    this.contentDocument.mirror = mirror2;\n  }\n}\nconst RRText = BaseRRText;\nconst RRComment = BaseRRComment;\nconst RRCDATASection = BaseRRCDATASection;\nfunction getValidTagName(element) {\n  if (element instanceof HTMLFormElement) {\n    return \"FORM\";\n  }\n  return element.tagName.toUpperCase();\n}\nfunction buildFromNode(node, rrdom, domMirror, parentRRNode) {\n  let rrNode;\n  switch (node.nodeType) {\n    case NodeType.DOCUMENT_NODE:\n      if (parentRRNode && parentRRNode.nodeName === \"IFRAME\")\n        rrNode = parentRRNode.contentDocument;\n      else {\n        rrNode = rrdom;\n        rrNode.compatMode = node.compatMode;\n      }\n      break;\n    case NodeType.DOCUMENT_TYPE_NODE: {\n      const documentType = node;\n      rrNode = rrdom.createDocumentType(\n        documentType.name,\n        documentType.publicId,\n        documentType.systemId\n      );\n      break;\n    }\n    case NodeType.ELEMENT_NODE: {\n      const elementNode = node;\n      const tagName = getValidTagName(elementNode);\n      rrNode = rrdom.createElement(tagName);\n      const rrElement = rrNode;\n      for (const { name, value } of Array.from(elementNode.attributes)) {\n        rrElement.attributes[name] = value;\n      }\n      elementNode.scrollLeft && (rrElement.scrollLeft = elementNode.scrollLeft);\n      elementNode.scrollTop && (rrElement.scrollTop = elementNode.scrollTop);\n      break;\n    }\n    case NodeType.TEXT_NODE:\n      rrNode = rrdom.createTextNode(node.textContent || \"\");\n      break;\n    case NodeType.CDATA_SECTION_NODE:\n      rrNode = rrdom.createCDATASection(node.data);\n      break;\n    case NodeType.COMMENT_NODE:\n      rrNode = rrdom.createComment(node.textContent || \"\");\n      break;\n    case NodeType.DOCUMENT_FRAGMENT_NODE:\n      rrNode = parentRRNode.attachShadow({ mode: \"open\" });\n      break;\n    default:\n      return null;\n  }\n  let sn = domMirror.getMeta(node);\n  if (rrdom instanceof RRDocument) {\n    if (!sn) {\n      sn = getDefaultSN(rrNode, rrdom.unserializedId);\n      domMirror.add(node, sn);\n    }\n    rrdom.mirror.add(rrNode, { ...sn });\n  }\n  return rrNode;\n}\nfunction buildFromDom(dom, domMirror = createMirror$1(), rrdom = new RRDocument()) {\n  function walk2(node, parentRRNode) {\n    const rrNode = buildFromNode(node, rrdom, domMirror, parentRRNode);\n    if (rrNode === null) return;\n    if (\n      // if the parentRRNode isn't a RRIFrameElement\n      parentRRNode?.nodeName !== \"IFRAME\" && // if node isn't a shadow root\n      node.nodeType !== NodeType.DOCUMENT_FRAGMENT_NODE\n    ) {\n      parentRRNode?.appendChild(rrNode);\n      rrNode.parentNode = parentRRNode;\n      rrNode.parentElement = parentRRNode;\n    }\n    if (node.nodeName === \"IFRAME\") {\n      const iframeDoc = getIFrameContentDocument(node);\n      iframeDoc && walk2(iframeDoc, rrNode);\n    } else if (node.nodeType === NodeType.DOCUMENT_NODE || node.nodeType === NodeType.ELEMENT_NODE || node.nodeType === NodeType.DOCUMENT_FRAGMENT_NODE) {\n      if (node.nodeType === NodeType.ELEMENT_NODE && node.shadowRoot)\n        walk2(node.shadowRoot, rrNode);\n      node.childNodes.forEach((childNode) => walk2(childNode, rrNode));\n    }\n  }\n  walk2(dom, null);\n  return rrdom;\n}\nfunction createMirror() {\n  return new Mirror22();\n}\nclass Mirror22 {\n  constructor() {\n    __publicField(this, \"idNodeMap\", /* @__PURE__ */ new Map());\n    __publicField(this, \"nodeMetaMap\", /* @__PURE__ */ new WeakMap());\n  }\n  getId(n2) {\n    if (!n2) return -1;\n    const id = this.getMeta(n2)?.id;\n    return id ?? -1;\n  }\n  getNode(id) {\n    return this.idNodeMap.get(id) || null;\n  }\n  getIds() {\n    return Array.from(this.idNodeMap.keys());\n  }\n  getMeta(n2) {\n    return this.nodeMetaMap.get(n2) || null;\n  }\n  // removes the node from idNodeMap\n  // doesn't remove the node from nodeMetaMap\n  removeNodeFromMap(n2) {\n    const id = this.getId(n2);\n    this.idNodeMap.delete(id);\n    if (n2.childNodes) {\n      n2.childNodes.forEach((childNode) => this.removeNodeFromMap(childNode));\n    }\n  }\n  has(id) {\n    return this.idNodeMap.has(id);\n  }\n  hasNode(node) {\n    return this.nodeMetaMap.has(node);\n  }\n  add(n2, meta) {\n    const id = meta.id;\n    this.idNodeMap.set(id, n2);\n    this.nodeMetaMap.set(n2, meta);\n  }\n  replace(id, n2) {\n    const oldNode = this.getNode(id);\n    if (oldNode) {\n      const meta = this.nodeMetaMap.get(oldNode);\n      if (meta) this.nodeMetaMap.set(n2, meta);\n    }\n    this.idNodeMap.set(id, n2);\n  }\n  reset() {\n    this.idNodeMap = /* @__PURE__ */ new Map();\n    this.nodeMetaMap = /* @__PURE__ */ new WeakMap();\n  }\n}\nfunction getDefaultSN(node, id) {\n  switch (node.RRNodeType) {\n    case NodeType$1.Document:\n      return {\n        id,\n        type: node.RRNodeType,\n        childNodes: []\n      };\n    case NodeType$1.DocumentType: {\n      const doctype = node;\n      return {\n        id,\n        type: node.RRNodeType,\n        name: doctype.name,\n        publicId: doctype.publicId,\n        systemId: doctype.systemId\n      };\n    }\n    case NodeType$1.Element:\n      return {\n        id,\n        type: node.RRNodeType,\n        tagName: node.tagName.toLowerCase(),\n        // In rrweb data, all tagNames are lowercase.\n        attributes: {},\n        childNodes: []\n      };\n    case NodeType$1.Text:\n      return {\n        id,\n        type: node.RRNodeType,\n        textContent: node.textContent || \"\"\n      };\n    case NodeType$1.Comment:\n      return {\n        id,\n        type: node.RRNodeType,\n        textContent: node.textContent || \"\"\n      };\n    case NodeType$1.CDATA:\n      return {\n        id,\n        type: node.RRNodeType,\n        textContent: \"\"\n      };\n  }\n}\nfunction isNodeInLinkedList(n2) {\n  return \"__ln\" in n2;\n}\nclass DoubleLinkedList {\n  constructor() {\n    this.length = 0;\n    this.head = null;\n    this.tail = null;\n  }\n  get(position) {\n    if (position >= this.length) {\n      throw new Error(\"Position outside of list range\");\n    }\n    let current = this.head;\n    for (let index = 0; index < position; index++) {\n      current = current?.next || null;\n    }\n    return current;\n  }\n  addNode(n2) {\n    const node = {\n      value: n2,\n      previous: null,\n      next: null\n    };\n    n2.__ln = node;\n    if (n2.previousSibling && isNodeInLinkedList(n2.previousSibling)) {\n      const current = n2.previousSibling.__ln.next;\n      node.next = current;\n      node.previous = n2.previousSibling.__ln;\n      n2.previousSibling.__ln.next = node;\n      if (current) {\n        current.previous = node;\n      }\n    } else if (n2.nextSibling && isNodeInLinkedList(n2.nextSibling) && n2.nextSibling.__ln.previous) {\n      const current = n2.nextSibling.__ln.previous;\n      node.previous = current;\n      node.next = n2.nextSibling.__ln;\n      n2.nextSibling.__ln.previous = node;\n      if (current) {\n        current.next = node;\n      }\n    } else {\n      if (this.head) {\n        this.head.previous = node;\n      }\n      node.next = this.head;\n      this.head = node;\n    }\n    if (node.next === null) {\n      this.tail = node;\n    }\n    this.length++;\n  }\n  removeNode(n2) {\n    const current = n2.__ln;\n    if (!this.head) {\n      return;\n    }\n    if (!current.previous) {\n      this.head = current.next;\n      if (this.head) {\n        this.head.previous = null;\n      } else {\n        this.tail = null;\n      }\n    } else {\n      current.previous.next = current.next;\n      if (current.next) {\n        current.next.previous = current.previous;\n      } else {\n        this.tail = current.previous;\n      }\n    }\n    if (n2.__ln) {\n      delete n2.__ln;\n    }\n    this.length--;\n  }\n}\nconst moveKey = (id, parentId) => `${id}@${parentId}`;\nclass MutationBuffer {\n  constructor() {\n    this.frozen = false;\n    this.locked = false;\n    this.texts = [];\n    this.attributes = [];\n    this.attributeMap = /* @__PURE__ */ new WeakMap();\n    this.removes = [];\n    this.mapRemoves = [];\n    this.movedMap = {};\n    this.addedSet = /* @__PURE__ */ new Set();\n    this.movedSet = /* @__PURE__ */ new Set();\n    this.droppedSet = /* @__PURE__ */ new Set();\n    this.processMutations = (mutations) => {\n      mutations.forEach(this.processMutation);\n      this.emit();\n    };\n    this.emit = () => {\n      if (this.frozen || this.locked) {\n        return;\n      }\n      const adds = [];\n      const addedIds = /* @__PURE__ */ new Set();\n      const addList = new DoubleLinkedList();\n      const getNextId = (n2) => {\n        let ns = n2;\n        let nextId = IGNORED_NODE;\n        while (nextId === IGNORED_NODE) {\n          ns = ns && ns.nextSibling;\n          nextId = ns && this.mirror.getId(ns);\n        }\n        return nextId;\n      };\n      const pushAdd = (n2) => {\n        if (!n2.parentNode || !inDom(n2)) {\n          return;\n        }\n        const parentId = isShadowRoot(n2.parentNode) ? this.mirror.getId(getShadowHost(n2)) : this.mirror.getId(n2.parentNode);\n        const nextId = getNextId(n2);\n        if (parentId === -1 || nextId === -1) {\n          return addList.addNode(n2);\n        }\n        const sn = serializeNodeWithId(n2, {\n          doc: this.doc,\n          mirror: this.mirror,\n          blockClass: this.blockClass,\n          blockSelector: this.blockSelector,\n          maskAllText: this.maskAllText,\n          unblockSelector: this.unblockSelector,\n          maskTextClass: this.maskTextClass,\n          unmaskTextClass: this.unmaskTextClass,\n          maskTextSelector: this.maskTextSelector,\n          unmaskTextSelector: this.unmaskTextSelector,\n          skipChild: true,\n          newlyAddedElement: true,\n          inlineStylesheet: this.inlineStylesheet,\n          maskInputOptions: this.maskInputOptions,\n          maskAttributeFn: this.maskAttributeFn,\n          maskTextFn: this.maskTextFn,\n          maskInputFn: this.maskInputFn,\n          slimDOMOptions: this.slimDOMOptions,\n          dataURLOptions: this.dataURLOptions,\n          recordCanvas: this.recordCanvas,\n          inlineImages: this.inlineImages,\n          onSerialize: (currentN) => {\n            if (isSerializedIframe(currentN, this.mirror) && !isBlocked(\n              currentN,\n              this.blockClass,\n              this.blockSelector,\n              this.unblockSelector,\n              false\n            )) {\n              this.iframeManager.addIframe(currentN);\n            }\n            if (isSerializedStylesheet(currentN, this.mirror)) {\n              this.stylesheetManager.trackLinkElement(\n                currentN\n              );\n            }\n            if (hasShadowRoot(n2)) {\n              this.shadowDomManager.addShadowRoot(n2.shadowRoot, this.doc);\n            }\n          },\n          onIframeLoad: (iframe, childSn) => {\n            if (isBlocked(\n              iframe,\n              this.blockClass,\n              this.blockSelector,\n              this.unblockSelector,\n              false\n            )) {\n              return;\n            }\n            this.iframeManager.attachIframe(iframe, childSn);\n            if (iframe.contentWindow) {\n              this.canvasManager.addWindow(iframe.contentWindow);\n            }\n            this.shadowDomManager.observeAttachShadow(iframe);\n          },\n          onStylesheetLoad: (link, childSn) => {\n            this.stylesheetManager.attachLinkElement(link, childSn);\n          }\n        });\n        if (sn) {\n          adds.push({\n            parentId,\n            nextId,\n            node: sn\n          });\n          addedIds.add(sn.id);\n        }\n      };\n      while (this.mapRemoves.length) {\n        this.mirror.removeNodeFromMap(this.mapRemoves.shift());\n      }\n      for (const n2 of this.movedSet) {\n        if (isParentRemoved(this.removes, n2, this.mirror) && !this.movedSet.has(n2.parentNode)) {\n          continue;\n        }\n        pushAdd(n2);\n      }\n      for (const n2 of this.addedSet) {\n        if (!isAncestorInSet(this.droppedSet, n2) && !isParentRemoved(this.removes, n2, this.mirror)) {\n          pushAdd(n2);\n        } else if (isAncestorInSet(this.movedSet, n2)) {\n          pushAdd(n2);\n        } else {\n          this.droppedSet.add(n2);\n        }\n      }\n      let candidate = null;\n      while (addList.length) {\n        let node = null;\n        if (candidate) {\n          const parentId = this.mirror.getId(candidate.value.parentNode);\n          const nextId = getNextId(candidate.value);\n          if (parentId !== -1 && nextId !== -1) {\n            node = candidate;\n          }\n        }\n        if (!node) {\n          let tailNode = addList.tail;\n          while (tailNode) {\n            const _node = tailNode;\n            tailNode = tailNode.previous;\n            if (_node) {\n              const parentId = this.mirror.getId(_node.value.parentNode);\n              const nextId = getNextId(_node.value);\n              if (nextId === -1) continue;\n              else if (parentId !== -1) {\n                node = _node;\n                break;\n              } else {\n                const unhandledNode = _node.value;\n                if (unhandledNode.parentNode && unhandledNode.parentNode.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n                  const shadowHost = unhandledNode.parentNode.host;\n                  const parentId2 = this.mirror.getId(shadowHost);\n                  if (parentId2 !== -1) {\n                    node = _node;\n                    break;\n                  }\n                }\n              }\n            }\n          }\n        }\n        if (!node) {\n          while (addList.head) {\n            addList.removeNode(addList.head.value);\n          }\n          break;\n        }\n        candidate = node.previous;\n        addList.removeNode(node.value);\n        pushAdd(node.value);\n      }\n      const payload = {\n        texts: this.texts.map((text) => ({\n          id: this.mirror.getId(text.node),\n          value: text.value\n        })).filter((text) => !addedIds.has(text.id)).filter((text) => this.mirror.has(text.id)),\n        attributes: this.attributes.map((attribute) => {\n          const { attributes } = attribute;\n          if (typeof attributes.style === \"string\") {\n            const diffAsStr = JSON.stringify(attribute.styleDiff);\n            const unchangedAsStr = JSON.stringify(attribute._unchangedStyles);\n            if (diffAsStr.length < attributes.style.length) {\n              if ((diffAsStr + unchangedAsStr).split(\"var(\").length === attributes.style.split(\"var(\").length) {\n                attributes.style = attribute.styleDiff;\n              }\n            }\n          }\n          return {\n            id: this.mirror.getId(attribute.node),\n            attributes\n          };\n        }).filter((attribute) => !addedIds.has(attribute.id)).filter((attribute) => this.mirror.has(attribute.id)),\n        removes: this.removes,\n        adds\n      };\n      if (!payload.texts.length && !payload.attributes.length && !payload.removes.length && !payload.adds.length) {\n        return;\n      }\n      this.texts = [];\n      this.attributes = [];\n      this.attributeMap = /* @__PURE__ */ new WeakMap();\n      this.removes = [];\n      this.addedSet = /* @__PURE__ */ new Set();\n      this.movedSet = /* @__PURE__ */ new Set();\n      this.droppedSet = /* @__PURE__ */ new Set();\n      this.movedMap = {};\n      this.mutationCb(payload);\n    };\n    this.processMutation = (m) => {\n      if (isIgnored(m.target, this.mirror)) {\n        return;\n      }\n      switch (m.type) {\n        case \"characterData\": {\n          const value = m.target.textContent;\n          if (!isBlocked(\n            m.target,\n            this.blockClass,\n            this.blockSelector,\n            this.unblockSelector,\n            false\n          ) && value !== m.oldValue) {\n            this.texts.push({\n              value: needMaskingText(\n                m.target,\n                this.maskTextClass,\n                this.maskTextSelector,\n                this.unmaskTextClass,\n                this.unmaskTextSelector,\n                this.maskAllText\n              ) && value ? this.maskTextFn ? this.maskTextFn(value, closestElementOfNode(m.target)) : value.replace(/[\\S]/g, \"*\") : value,\n              node: m.target\n            });\n          }\n          break;\n        }\n        case \"attributes\": {\n          const target = m.target;\n          let attributeName = m.attributeName;\n          let value = m.target.getAttribute(attributeName);\n          if (attributeName === \"value\") {\n            const type = getInputType(target);\n            const tagName = target.tagName;\n            value = getInputValue(target, tagName, type);\n            const isInputMasked = shouldMaskInput({\n              maskInputOptions: this.maskInputOptions,\n              tagName,\n              type\n            });\n            const forceMask = needMaskingText(\n              m.target,\n              this.maskTextClass,\n              this.maskTextSelector,\n              this.unmaskTextClass,\n              this.unmaskTextSelector,\n              isInputMasked\n            );\n            value = maskInputValue({\n              isMasked: forceMask,\n              element: target,\n              value,\n              maskInputFn: this.maskInputFn\n            });\n          }\n          if (isBlocked(\n            m.target,\n            this.blockClass,\n            this.blockSelector,\n            this.unblockSelector,\n            false\n          ) || value === m.oldValue) {\n            return;\n          }\n          let item = this.attributeMap.get(m.target);\n          if (target.tagName === \"IFRAME\" && attributeName === \"src\" && !this.keepIframeSrcFn(value)) {\n            const iframeDoc = getIFrameContentDocument(\n              target\n            );\n            if (!iframeDoc) {\n              attributeName = \"rr_src\";\n            } else {\n              return;\n            }\n          }\n          if (!item) {\n            item = {\n              node: m.target,\n              attributes: {},\n              styleDiff: {},\n              _unchangedStyles: {}\n            };\n            this.attributes.push(item);\n            this.attributeMap.set(m.target, item);\n          }\n          if (attributeName === \"type\" && target.tagName === \"INPUT\" && (m.oldValue || \"\").toLowerCase() === \"password\") {\n            target.setAttribute(\"data-rr-is-password\", \"true\");\n          }\n          if (!ignoreAttribute(target.tagName, attributeName)) {\n            item.attributes[attributeName] = transformAttribute(\n              this.doc,\n              toLowerCase(target.tagName),\n              toLowerCase(attributeName),\n              value,\n              target,\n              this.maskAttributeFn\n            );\n            if (attributeName === \"style\") {\n              if (!this.unattachedDoc) {\n                try {\n                  this.unattachedDoc = document.implementation.createHTMLDocument();\n                } catch (e2) {\n                  this.unattachedDoc = this.doc;\n                }\n              }\n              const old = this.unattachedDoc.createElement(\"span\");\n              if (m.oldValue) {\n                old.setAttribute(\"style\", m.oldValue);\n              }\n              for (const pname of Array.from(target.style)) {\n                const newValue = target.style.getPropertyValue(pname);\n                const newPriority = target.style.getPropertyPriority(pname);\n                if (newValue !== old.style.getPropertyValue(pname) || newPriority !== old.style.getPropertyPriority(pname)) {\n                  if (newPriority === \"\") {\n                    item.styleDiff[pname] = newValue;\n                  } else {\n                    item.styleDiff[pname] = [newValue, newPriority];\n                  }\n                } else {\n                  item._unchangedStyles[pname] = [newValue, newPriority];\n                }\n              }\n              for (const pname of Array.from(old.style)) {\n                if (target.style.getPropertyValue(pname) === \"\") {\n                  item.styleDiff[pname] = false;\n                }\n              }\n            }\n          }\n          break;\n        }\n        case \"childList\": {\n          if (isBlocked(\n            m.target,\n            this.blockClass,\n            this.blockSelector,\n            this.unblockSelector,\n            true\n          )) {\n            return;\n          }\n          m.addedNodes.forEach((n2) => this.genAdds(n2, m.target));\n          m.removedNodes.forEach((n2) => {\n            const nodeId = this.mirror.getId(n2);\n            const parentId = isShadowRoot(m.target) ? this.mirror.getId(m.target.host) : this.mirror.getId(m.target);\n            if (isBlocked(\n              m.target,\n              this.blockClass,\n              this.blockSelector,\n              this.unblockSelector,\n              false\n            ) || isIgnored(n2, this.mirror) || !isSerialized(n2, this.mirror)) {\n              return;\n            }\n            if (this.addedSet.has(n2)) {\n              deepDelete(this.addedSet, n2);\n              this.droppedSet.add(n2);\n            } else if (this.addedSet.has(m.target) && nodeId === -1) ;\n            else if (isAncestorRemoved(m.target, this.mirror)) ;\n            else if (this.movedSet.has(n2) && this.movedMap[moveKey(nodeId, parentId)]) {\n              deepDelete(this.movedSet, n2);\n            } else {\n              this.removes.push({\n                parentId,\n                id: nodeId,\n                isShadow: isShadowRoot(m.target) && isNativeShadowDom(m.target) ? true : void 0\n              });\n            }\n            this.mapRemoves.push(n2);\n          });\n          break;\n        }\n      }\n    };\n    this.genAdds = (n2, target) => {\n      if (this.processedNodeManager.inOtherBuffer(n2, this)) return;\n      if (this.addedSet.has(n2) || this.movedSet.has(n2)) return;\n      if (this.mirror.hasNode(n2)) {\n        if (isIgnored(n2, this.mirror)) {\n          return;\n        }\n        this.movedSet.add(n2);\n        let targetId = null;\n        if (target && this.mirror.hasNode(target)) {\n          targetId = this.mirror.getId(target);\n        }\n        if (targetId && targetId !== -1) {\n          this.movedMap[moveKey(this.mirror.getId(n2), targetId)] = true;\n        }\n      } else {\n        this.addedSet.add(n2);\n        this.droppedSet.delete(n2);\n      }\n      if (!isBlocked(\n        n2,\n        this.blockClass,\n        this.blockSelector,\n        this.unblockSelector,\n        false\n      )) {\n        n2.childNodes.forEach((childN) => this.genAdds(childN));\n        if (hasShadowRoot(n2)) {\n          n2.shadowRoot.childNodes.forEach((childN) => {\n            this.processedNodeManager.add(childN, this);\n            this.genAdds(childN, n2);\n          });\n        }\n      }\n    };\n  }\n  init(options) {\n    [\n      \"mutationCb\",\n      \"blockClass\",\n      \"blockSelector\",\n      \"unblockSelector\",\n      \"maskAllText\",\n      \"maskTextClass\",\n      \"unmaskTextClass\",\n      \"maskTextSelector\",\n      \"unmaskTextSelector\",\n      \"inlineStylesheet\",\n      \"maskInputOptions\",\n      \"maskAttributeFn\",\n      \"maskTextFn\",\n      \"maskInputFn\",\n      \"keepIframeSrcFn\",\n      \"recordCanvas\",\n      \"inlineImages\",\n      \"slimDOMOptions\",\n      \"dataURLOptions\",\n      \"doc\",\n      \"mirror\",\n      \"iframeManager\",\n      \"stylesheetManager\",\n      \"shadowDomManager\",\n      \"canvasManager\",\n      \"processedNodeManager\"\n    ].forEach((key) => {\n      this[key] = options[key];\n    });\n  }\n  freeze() {\n    this.frozen = true;\n    this.canvasManager.freeze();\n  }\n  unfreeze() {\n    this.frozen = false;\n    this.canvasManager.unfreeze();\n    this.emit();\n  }\n  isFrozen() {\n    return this.frozen;\n  }\n  lock() {\n    this.locked = true;\n    this.canvasManager.lock();\n  }\n  unlock() {\n    this.locked = false;\n    this.canvasManager.unlock();\n    this.emit();\n  }\n  reset() {\n    this.shadowDomManager.reset();\n    this.canvasManager.reset();\n  }\n}\nfunction deepDelete(addsSet, n2) {\n  addsSet.delete(n2);\n  n2.childNodes.forEach((childN) => deepDelete(addsSet, childN));\n}\nfunction isParentRemoved(removes, n2, mirror2) {\n  if (removes.length === 0) return false;\n  return _isParentRemoved(removes, n2, mirror2);\n}\nfunction _isParentRemoved(removes, n2, mirror2) {\n  let node = n2.parentNode;\n  while (node) {\n    const parentId = mirror2.getId(node);\n    if (removes.some((r2) => r2.id === parentId)) {\n      return true;\n    }\n    node = node.parentNode;\n  }\n  return false;\n}\nfunction isAncestorInSet(set, n2) {\n  if (set.size === 0) return false;\n  return _isAncestorInSet(set, n2);\n}\nfunction _isAncestorInSet(set, n2) {\n  const { parentNode } = n2;\n  if (!parentNode) {\n    return false;\n  }\n  if (set.has(parentNode)) {\n    return true;\n  }\n  return _isAncestorInSet(set, parentNode);\n}\nlet errorHandler;\nfunction registerErrorHandler(handler) {\n  errorHandler = handler;\n}\nfunction unregisterErrorHandler() {\n  errorHandler = void 0;\n}\nconst callbackWrapper = (cb) => {\n  if (!errorHandler) {\n    return cb;\n  }\n  const rrwebWrapped = (...rest) => {\n    try {\n      return cb(...rest);\n    } catch (error) {\n      if (errorHandler && errorHandler(error) === true) {\n        return () => {\n        };\n      }\n      throw error;\n    }\n  };\n  return rrwebWrapped;\n};\nconst mutationBuffers = [];\nfunction getEventTarget(event) {\n  try {\n    if (\"composedPath\" in event) {\n      const path = event.composedPath();\n      if (path.length) {\n        return path[0];\n      }\n    } else if (\"path\" in event && event.path.length) {\n      return event.path[0];\n    }\n  } catch {\n  }\n  return event && event.target;\n}\nfunction initMutationObserver(options, rootEl) {\n  const mutationBuffer = new MutationBuffer();\n  mutationBuffers.push(mutationBuffer);\n  mutationBuffer.init(options);\n  let mutationObserverCtor = window.MutationObserver || /**\n  * Some websites may disable MutationObserver by removing it from the window object.\n  * If someone is using rrweb to build a browser extention or things like it, they\n  * could not change the website's code but can have an opportunity to inject some\n  * code before the website executing its JS logic.\n  * Then they can do this to store the native MutationObserver:\n  * window.__rrMutationObserver = MutationObserver\n  */\n  window.__rrMutationObserver;\n  const angularZoneSymbol = window?.Zone?.__symbol__?.(\"MutationObserver\");\n  if (angularZoneSymbol && window[angularZoneSymbol]) {\n    mutationObserverCtor = window[angularZoneSymbol];\n  }\n  const observer = new mutationObserverCtor(\n    callbackWrapper((mutations) => {\n      if (options.onMutation && options.onMutation(mutations) === false) {\n        return;\n      }\n      mutationBuffer.processMutations.bind(mutationBuffer)(mutations);\n    })\n  );\n  observer.observe(rootEl, {\n    attributes: true,\n    attributeOldValue: true,\n    characterData: true,\n    characterDataOldValue: true,\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\nfunction initMoveObserver({\n  mousemoveCb,\n  sampling,\n  doc,\n  mirror: mirror2\n}) {\n  if (sampling.mousemove === false) {\n    return () => {\n    };\n  }\n  const threshold = typeof sampling.mousemove === \"number\" ? sampling.mousemove : 50;\n  const callbackThreshold = typeof sampling.mousemoveCallback === \"number\" ? sampling.mousemoveCallback : 500;\n  let positions = [];\n  let timeBaseline;\n  const wrappedCb = throttle(\n    callbackWrapper(\n      (source) => {\n        const totalOffset = Date.now() - timeBaseline;\n        mousemoveCb(\n          positions.map((p) => {\n            p.timeOffset -= totalOffset;\n            return p;\n          }),\n          source\n        );\n        positions = [];\n        timeBaseline = null;\n      }\n    ),\n    callbackThreshold\n  );\n  const updatePosition = callbackWrapper(\n    throttle(\n      callbackWrapper((evt) => {\n        const target = getEventTarget(evt);\n        const { clientX, clientY } = legacy_isTouchEvent(evt) ? evt.changedTouches[0] : evt;\n        if (!timeBaseline) {\n          timeBaseline = nowTimestamp();\n        }\n        positions.push({\n          x: clientX,\n          y: clientY,\n          id: mirror2.getId(target),\n          timeOffset: nowTimestamp() - timeBaseline\n        });\n        wrappedCb(\n          typeof DragEvent !== \"undefined\" && evt instanceof DragEvent ? IncrementalSource.Drag : evt instanceof MouseEvent ? IncrementalSource.MouseMove : IncrementalSource.TouchMove\n        );\n      }),\n      threshold,\n      {\n        trailing: false\n      }\n    )\n  );\n  const handlers = [\n    on(\"mousemove\", updatePosition, doc),\n    on(\"touchmove\", updatePosition, doc),\n    on(\"drag\", updatePosition, doc)\n  ];\n  return callbackWrapper(() => {\n    handlers.forEach((h) => h());\n  });\n}\nfunction initMouseInteractionObserver({\n  mouseInteractionCb,\n  doc,\n  mirror: mirror2,\n  blockClass,\n  blockSelector,\n  unblockSelector,\n  sampling\n}) {\n  if (sampling.mouseInteraction === false) {\n    return () => {\n    };\n  }\n  const disableMap = sampling.mouseInteraction === true || sampling.mouseInteraction === void 0 ? {} : sampling.mouseInteraction;\n  const handlers = [];\n  let currentPointerType = null;\n  const getHandler = (eventKey) => {\n    return (event) => {\n      const target = getEventTarget(event);\n      if (isBlocked(target, blockClass, blockSelector, unblockSelector, true)) {\n        return;\n      }\n      let pointerType = null;\n      let thisEventKey = eventKey;\n      if (\"pointerType\" in event) {\n        switch (event.pointerType) {\n          case \"mouse\":\n            pointerType = PointerTypes.Mouse;\n            break;\n          case \"touch\":\n            pointerType = PointerTypes.Touch;\n            break;\n          case \"pen\":\n            pointerType = PointerTypes.Pen;\n            break;\n        }\n        if (pointerType === PointerTypes.Touch) {\n          if (MouseInteractions[eventKey] === MouseInteractions.MouseDown) {\n            thisEventKey = \"TouchStart\";\n          } else if (MouseInteractions[eventKey] === MouseInteractions.MouseUp) {\n            thisEventKey = \"TouchEnd\";\n          }\n        } else if (pointerType === PointerTypes.Pen) ;\n      } else if (legacy_isTouchEvent(event)) {\n        pointerType = PointerTypes.Touch;\n      }\n      if (pointerType !== null) {\n        currentPointerType = pointerType;\n        if (thisEventKey.startsWith(\"Touch\") && pointerType === PointerTypes.Touch || thisEventKey.startsWith(\"Mouse\") && pointerType === PointerTypes.Mouse) {\n          pointerType = null;\n        }\n      } else if (MouseInteractions[eventKey] === MouseInteractions.Click) {\n        pointerType = currentPointerType;\n        currentPointerType = null;\n      }\n      const e2 = legacy_isTouchEvent(event) ? event.changedTouches[0] : event;\n      if (!e2) {\n        return;\n      }\n      const id = mirror2.getId(target);\n      const { clientX, clientY } = e2;\n      callbackWrapper(mouseInteractionCb)({\n        type: MouseInteractions[thisEventKey],\n        id,\n        x: clientX,\n        y: clientY,\n        ...pointerType !== null && { pointerType }\n      });\n    };\n  };\n  Object.keys(MouseInteractions).filter(\n    (key) => Number.isNaN(Number(key)) && !key.endsWith(\"_Departed\") && disableMap[key] !== false\n  ).forEach((eventKey) => {\n    let eventName = toLowerCase(eventKey);\n    const handler = getHandler(eventKey);\n    if (window.PointerEvent) {\n      switch (MouseInteractions[eventKey]) {\n        case MouseInteractions.MouseDown:\n        case MouseInteractions.MouseUp:\n          eventName = eventName.replace(\n            \"mouse\",\n            \"pointer\"\n          );\n          break;\n        case MouseInteractions.TouchStart:\n        case MouseInteractions.TouchEnd:\n          return;\n      }\n    }\n    handlers.push(on(eventName, handler, doc));\n  });\n  return callbackWrapper(() => {\n    handlers.forEach((h) => h());\n  });\n}\nfunction initScrollObserver({\n  scrollCb,\n  doc,\n  mirror: mirror2,\n  blockClass,\n  blockSelector,\n  unblockSelector,\n  sampling\n}) {\n  const updatePosition = callbackWrapper(\n    throttle(\n      callbackWrapper((evt) => {\n        const target = getEventTarget(evt);\n        if (!target || isBlocked(\n          target,\n          blockClass,\n          blockSelector,\n          unblockSelector,\n          true\n        )) {\n          return;\n        }\n        const id = mirror2.getId(target);\n        if (target === doc && doc.defaultView) {\n          const scrollLeftTop = getWindowScroll(doc.defaultView);\n          scrollCb({\n            id,\n            x: scrollLeftTop.left,\n            y: scrollLeftTop.top\n          });\n        } else {\n          scrollCb({\n            id,\n            x: target.scrollLeft,\n            y: target.scrollTop\n          });\n        }\n      }),\n      sampling.scroll || 100\n    )\n  );\n  return on(\"scroll\", updatePosition, doc);\n}\nfunction initViewportResizeObserver({ viewportResizeCb }, { win }) {\n  let lastH = -1;\n  let lastW = -1;\n  const updateDimension = callbackWrapper(\n    throttle(\n      callbackWrapper(() => {\n        const height = getWindowHeight();\n        const width = getWindowWidth();\n        if (lastH !== height || lastW !== width) {\n          viewportResizeCb({\n            width: Number(width),\n            height: Number(height)\n          });\n          lastH = height;\n          lastW = width;\n        }\n      }),\n      200\n    )\n  );\n  return on(\"resize\", updateDimension, win);\n}\nconst INPUT_TAGS = [\"INPUT\", \"TEXTAREA\", \"SELECT\"];\nconst lastInputValueMap = /* @__PURE__ */ new WeakMap();\nfunction initInputObserver({\n  inputCb,\n  doc,\n  mirror: mirror2,\n  blockClass,\n  blockSelector,\n  unblockSelector,\n  ignoreClass,\n  ignoreSelector,\n  maskInputOptions,\n  maskInputFn,\n  sampling,\n  userTriggeredOnInput,\n  maskTextClass,\n  unmaskTextClass,\n  maskTextSelector,\n  unmaskTextSelector\n}) {\n  function eventHandler(event) {\n    let target = getEventTarget(event);\n    const userTriggered = event.isTrusted;\n    const tagName = target && toUpperCase(target.tagName);\n    if (tagName === \"OPTION\") target = target.parentElement;\n    if (!target || !tagName || INPUT_TAGS.indexOf(tagName) < 0 || isBlocked(\n      target,\n      blockClass,\n      blockSelector,\n      unblockSelector,\n      true\n    )) {\n      return;\n    }\n    const el = target;\n    if (el.classList.contains(ignoreClass) || ignoreSelector && el.matches(ignoreSelector)) {\n      return;\n    }\n    const type = getInputType(target);\n    let text = getInputValue(el, tagName, type);\n    let isChecked = false;\n    const isInputMasked = shouldMaskInput({\n      maskInputOptions,\n      tagName,\n      type\n    });\n    const forceMask = needMaskingText(\n      target,\n      maskTextClass,\n      maskTextSelector,\n      unmaskTextClass,\n      unmaskTextSelector,\n      isInputMasked\n    );\n    if (type === \"radio\" || type === \"checkbox\") {\n      isChecked = target.checked;\n    }\n    text = maskInputValue({\n      isMasked: forceMask,\n      element: target,\n      value: text,\n      maskInputFn\n    });\n    cbWithDedup(\n      target,\n      userTriggeredOnInput ? { text, isChecked, userTriggered } : { text, isChecked }\n    );\n    const name = target.name;\n    if (type === \"radio\" && name && isChecked) {\n      doc.querySelectorAll(`input[type=\"radio\"][name=\"${name}\"]`).forEach((el2) => {\n        if (el2 !== target) {\n          const text2 = maskInputValue({\n            // share mask behavior of `target`\n            isMasked: forceMask,\n            element: el2,\n            value: getInputValue(el2, tagName, type),\n            maskInputFn\n          });\n          cbWithDedup(\n            el2,\n            userTriggeredOnInput ? { text: text2, isChecked: !isChecked, userTriggered: false } : { text: text2, isChecked: !isChecked }\n          );\n        }\n      });\n    }\n  }\n  function cbWithDedup(target, v2) {\n    const lastInputValue = lastInputValueMap.get(target);\n    if (!lastInputValue || lastInputValue.text !== v2.text || lastInputValue.isChecked !== v2.isChecked) {\n      lastInputValueMap.set(target, v2);\n      const id = mirror2.getId(target);\n      callbackWrapper(inputCb)({\n        ...v2,\n        id\n      });\n    }\n  }\n  const events = sampling.input === \"last\" ? [\"change\"] : [\"input\", \"change\"];\n  const handlers = events.map(\n    (eventName) => on(eventName, callbackWrapper(eventHandler), doc)\n  );\n  const currentWindow = doc.defaultView;\n  if (!currentWindow) {\n    return () => {\n      handlers.forEach((h) => h());\n    };\n  }\n  const propertyDescriptor = currentWindow.Object.getOwnPropertyDescriptor(\n    currentWindow.HTMLInputElement.prototype,\n    \"value\"\n  );\n  const hookProperties = [\n    [currentWindow.HTMLInputElement.prototype, \"value\"],\n    [currentWindow.HTMLInputElement.prototype, \"checked\"],\n    [currentWindow.HTMLSelectElement.prototype, \"value\"],\n    [currentWindow.HTMLTextAreaElement.prototype, \"value\"],\n    // Some UI library use selectedIndex to set select value\n    [currentWindow.HTMLSelectElement.prototype, \"selectedIndex\"],\n    [currentWindow.HTMLOptionElement.prototype, \"selected\"]\n  ];\n  if (propertyDescriptor && propertyDescriptor.set) {\n    handlers.push(\n      ...hookProperties.map(\n        (p) => hookSetter(\n          p[0],\n          p[1],\n          {\n            set() {\n              callbackWrapper(eventHandler)({\n                target: this,\n                isTrusted: false\n                // userTriggered to false as this could well be programmatic\n              });\n            }\n          },\n          false,\n          currentWindow\n        )\n      )\n    );\n  }\n  return callbackWrapper(() => {\n    handlers.forEach((h) => h());\n  });\n}\nfunction getNestedCSSRulePositions(rule) {\n  const positions = [];\n  function recurse(childRule, pos) {\n    if (hasNestedCSSRule(\"CSSGroupingRule\") && childRule.parentRule instanceof CSSGroupingRule || hasNestedCSSRule(\"CSSMediaRule\") && childRule.parentRule instanceof CSSMediaRule || hasNestedCSSRule(\"CSSSupportsRule\") && childRule.parentRule instanceof CSSSupportsRule || hasNestedCSSRule(\"CSSConditionRule\") && childRule.parentRule instanceof CSSConditionRule) {\n      const rules2 = Array.from(\n        childRule.parentRule.cssRules\n      );\n      const index = rules2.indexOf(childRule);\n      pos.unshift(index);\n    } else if (childRule.parentStyleSheet) {\n      const rules2 = Array.from(childRule.parentStyleSheet.cssRules);\n      const index = rules2.indexOf(childRule);\n      pos.unshift(index);\n    }\n    return pos;\n  }\n  return recurse(rule, positions);\n}\nfunction getIdAndStyleId(sheet, mirror2, styleMirror) {\n  let id, styleId;\n  if (!sheet) return {};\n  if (sheet.ownerNode) id = mirror2.getId(sheet.ownerNode);\n  else styleId = styleMirror.getId(sheet);\n  return {\n    styleId,\n    id\n  };\n}\nfunction initStyleSheetObserver({ styleSheetRuleCb, mirror: mirror2, stylesheetManager }, { win }) {\n  if (!win.CSSStyleSheet || !win.CSSStyleSheet.prototype) {\n    return () => {\n    };\n  }\n  const insertRule = win.CSSStyleSheet.prototype.insertRule;\n  win.CSSStyleSheet.prototype.insertRule = new Proxy(insertRule, {\n    apply: callbackWrapper(\n      (target, thisArg, argumentsList) => {\n        const [rule, index] = argumentsList;\n        const { id, styleId } = getIdAndStyleId(\n          thisArg,\n          mirror2,\n          stylesheetManager.styleMirror\n        );\n        if (id && id !== -1 || styleId && styleId !== -1) {\n          styleSheetRuleCb({\n            id,\n            styleId,\n            adds: [{ rule, index }]\n          });\n        }\n        return target.apply(thisArg, argumentsList);\n      }\n    )\n  });\n  const deleteRule = win.CSSStyleSheet.prototype.deleteRule;\n  win.CSSStyleSheet.prototype.deleteRule = new Proxy(deleteRule, {\n    apply: callbackWrapper(\n      (target, thisArg, argumentsList) => {\n        const [index] = argumentsList;\n        const { id, styleId } = getIdAndStyleId(\n          thisArg,\n          mirror2,\n          stylesheetManager.styleMirror\n        );\n        if (id && id !== -1 || styleId && styleId !== -1) {\n          styleSheetRuleCb({\n            id,\n            styleId,\n            removes: [{ index }]\n          });\n        }\n        return target.apply(thisArg, argumentsList);\n      }\n    )\n  });\n  let replace;\n  if (win.CSSStyleSheet.prototype.replace) {\n    replace = win.CSSStyleSheet.prototype.replace;\n    win.CSSStyleSheet.prototype.replace = new Proxy(replace, {\n      apply: callbackWrapper(\n        (target, thisArg, argumentsList) => {\n          const [text] = argumentsList;\n          const { id, styleId } = getIdAndStyleId(\n            thisArg,\n            mirror2,\n            stylesheetManager.styleMirror\n          );\n          if (id && id !== -1 || styleId && styleId !== -1) {\n            styleSheetRuleCb({\n              id,\n              styleId,\n              replace: text\n            });\n          }\n          return target.apply(thisArg, argumentsList);\n        }\n      )\n    });\n  }\n  let replaceSync;\n  if (win.CSSStyleSheet.prototype.replaceSync) {\n    replaceSync = win.CSSStyleSheet.prototype.replaceSync;\n    win.CSSStyleSheet.prototype.replaceSync = new Proxy(replaceSync, {\n      apply: callbackWrapper(\n        (target, thisArg, argumentsList) => {\n          const [text] = argumentsList;\n          const { id, styleId } = getIdAndStyleId(\n            thisArg,\n            mirror2,\n            stylesheetManager.styleMirror\n          );\n          if (id && id !== -1 || styleId && styleId !== -1) {\n            styleSheetRuleCb({\n              id,\n              styleId,\n              replaceSync: text\n            });\n          }\n          return target.apply(thisArg, argumentsList);\n        }\n      )\n    });\n  }\n  const supportedNestedCSSRuleTypes = {};\n  if (canMonkeyPatchNestedCSSRule(\"CSSGroupingRule\")) {\n    supportedNestedCSSRuleTypes.CSSGroupingRule = win.CSSGroupingRule;\n  } else {\n    if (canMonkeyPatchNestedCSSRule(\"CSSMediaRule\")) {\n      supportedNestedCSSRuleTypes.CSSMediaRule = win.CSSMediaRule;\n    }\n    if (canMonkeyPatchNestedCSSRule(\"CSSConditionRule\")) {\n      supportedNestedCSSRuleTypes.CSSConditionRule = win.CSSConditionRule;\n    }\n    if (canMonkeyPatchNestedCSSRule(\"CSSSupportsRule\")) {\n      supportedNestedCSSRuleTypes.CSSSupportsRule = win.CSSSupportsRule;\n    }\n  }\n  const unmodifiedFunctions = {};\n  Object.entries(supportedNestedCSSRuleTypes).forEach(([typeKey, type]) => {\n    unmodifiedFunctions[typeKey] = {\n      // eslint-disable-next-line @typescript-eslint/unbound-method\n      insertRule: type.prototype.insertRule,\n      // eslint-disable-next-line @typescript-eslint/unbound-method\n      deleteRule: type.prototype.deleteRule\n    };\n    type.prototype.insertRule = new Proxy(\n      unmodifiedFunctions[typeKey].insertRule,\n      {\n        apply: callbackWrapper(\n          (target, thisArg, argumentsList) => {\n            const [rule, index] = argumentsList;\n            const { id, styleId } = getIdAndStyleId(\n              thisArg.parentStyleSheet,\n              mirror2,\n              stylesheetManager.styleMirror\n            );\n            if (id && id !== -1 || styleId && styleId !== -1) {\n              styleSheetRuleCb({\n                id,\n                styleId,\n                adds: [\n                  {\n                    rule,\n                    index: [\n                      ...getNestedCSSRulePositions(thisArg),\n                      index || 0\n                      // defaults to 0\n                    ]\n                  }\n                ]\n              });\n            }\n            return target.apply(thisArg, argumentsList);\n          }\n        )\n      }\n    );\n    type.prototype.deleteRule = new Proxy(\n      unmodifiedFunctions[typeKey].deleteRule,\n      {\n        apply: callbackWrapper(\n          (target, thisArg, argumentsList) => {\n            const [index] = argumentsList;\n            const { id, styleId } = getIdAndStyleId(\n              thisArg.parentStyleSheet,\n              mirror2,\n              stylesheetManager.styleMirror\n            );\n            if (id && id !== -1 || styleId && styleId !== -1) {\n              styleSheetRuleCb({\n                id,\n                styleId,\n                removes: [\n                  { index: [...getNestedCSSRulePositions(thisArg), index] }\n                ]\n              });\n            }\n            return target.apply(thisArg, argumentsList);\n          }\n        )\n      }\n    );\n  });\n  return callbackWrapper(() => {\n    win.CSSStyleSheet.prototype.insertRule = insertRule;\n    win.CSSStyleSheet.prototype.deleteRule = deleteRule;\n    replace && (win.CSSStyleSheet.prototype.replace = replace);\n    replaceSync && (win.CSSStyleSheet.prototype.replaceSync = replaceSync);\n    Object.entries(supportedNestedCSSRuleTypes).forEach(([typeKey, type]) => {\n      type.prototype.insertRule = unmodifiedFunctions[typeKey].insertRule;\n      type.prototype.deleteRule = unmodifiedFunctions[typeKey].deleteRule;\n    });\n  });\n}\nfunction initAdoptedStyleSheetObserver({\n  mirror: mirror2,\n  stylesheetManager\n}, host) {\n  let hostId = null;\n  if (host.nodeName === \"#document\") hostId = mirror2.getId(host);\n  else hostId = mirror2.getId(host.host);\n  const patchTarget = host.nodeName === \"#document\" ? host.defaultView?.Document : host.ownerDocument?.defaultView?.ShadowRoot;\n  const originalPropertyDescriptor = patchTarget?.prototype ? Object.getOwnPropertyDescriptor(\n    patchTarget?.prototype,\n    \"adoptedStyleSheets\"\n  ) : void 0;\n  if (hostId === null || hostId === -1 || !patchTarget || !originalPropertyDescriptor)\n    return () => {\n    };\n  Object.defineProperty(host, \"adoptedStyleSheets\", {\n    configurable: originalPropertyDescriptor.configurable,\n    enumerable: originalPropertyDescriptor.enumerable,\n    get() {\n      return originalPropertyDescriptor.get?.call(this);\n    },\n    set(sheets) {\n      const result = originalPropertyDescriptor.set?.call(this, sheets);\n      if (hostId !== null && hostId !== -1) {\n        try {\n          stylesheetManager.adoptStyleSheets(sheets, hostId);\n        } catch (e2) {\n        }\n      }\n      return result;\n    }\n  });\n  return callbackWrapper(() => {\n    Object.defineProperty(host, \"adoptedStyleSheets\", {\n      configurable: originalPropertyDescriptor.configurable,\n      enumerable: originalPropertyDescriptor.enumerable,\n      // eslint-disable-next-line @typescript-eslint/unbound-method\n      get: originalPropertyDescriptor.get,\n      // eslint-disable-next-line @typescript-eslint/unbound-method\n      set: originalPropertyDescriptor.set\n    });\n  });\n}\nfunction initStyleDeclarationObserver({\n  styleDeclarationCb,\n  mirror: mirror2,\n  ignoreCSSAttributes,\n  stylesheetManager\n}, { win }) {\n  const setProperty = win.CSSStyleDeclaration.prototype.setProperty;\n  win.CSSStyleDeclaration.prototype.setProperty = new Proxy(setProperty, {\n    apply: callbackWrapper(\n      (target, thisArg, argumentsList) => {\n        const [property, value, priority] = argumentsList;\n        if (ignoreCSSAttributes.has(property)) {\n          return setProperty.apply(thisArg, [property, value, priority]);\n        }\n        const { id, styleId } = getIdAndStyleId(\n          thisArg.parentRule?.parentStyleSheet,\n          mirror2,\n          stylesheetManager.styleMirror\n        );\n        if (id && id !== -1 || styleId && styleId !== -1) {\n          styleDeclarationCb({\n            id,\n            styleId,\n            set: {\n              property,\n              value,\n              priority\n            },\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            index: getNestedCSSRulePositions(thisArg.parentRule)\n          });\n        }\n        return target.apply(thisArg, argumentsList);\n      }\n    )\n  });\n  const removeProperty = win.CSSStyleDeclaration.prototype.removeProperty;\n  win.CSSStyleDeclaration.prototype.removeProperty = new Proxy(removeProperty, {\n    apply: callbackWrapper(\n      (target, thisArg, argumentsList) => {\n        const [property] = argumentsList;\n        if (ignoreCSSAttributes.has(property)) {\n          return removeProperty.apply(thisArg, [property]);\n        }\n        const { id, styleId } = getIdAndStyleId(\n          thisArg.parentRule?.parentStyleSheet,\n          mirror2,\n          stylesheetManager.styleMirror\n        );\n        if (id && id !== -1 || styleId && styleId !== -1) {\n          styleDeclarationCb({\n            id,\n            styleId,\n            remove: {\n              property\n            },\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            index: getNestedCSSRulePositions(thisArg.parentRule)\n          });\n        }\n        return target.apply(thisArg, argumentsList);\n      }\n    )\n  });\n  return callbackWrapper(() => {\n    win.CSSStyleDeclaration.prototype.setProperty = setProperty;\n    win.CSSStyleDeclaration.prototype.removeProperty = removeProperty;\n  });\n}\nfunction initMediaInteractionObserver({\n  mediaInteractionCb,\n  blockClass,\n  blockSelector,\n  unblockSelector,\n  mirror: mirror2,\n  sampling,\n  doc\n}) {\n  const handler = callbackWrapper(\n    (type) => throttle(\n      callbackWrapper((event) => {\n        const target = getEventTarget(event);\n        if (!target || isBlocked(\n          target,\n          blockClass,\n          blockSelector,\n          unblockSelector,\n          true\n        )) {\n          return;\n        }\n        const { currentTime, volume, muted, playbackRate } = target;\n        mediaInteractionCb({\n          type,\n          id: mirror2.getId(target),\n          currentTime,\n          volume,\n          muted,\n          playbackRate\n        });\n      }),\n      sampling.media || 500\n    )\n  );\n  const handlers = [\n    on(\"play\", handler(MediaInteractions.Play), doc),\n    on(\"pause\", handler(MediaInteractions.Pause), doc),\n    on(\"seeked\", handler(MediaInteractions.Seeked), doc),\n    on(\"volumechange\", handler(MediaInteractions.VolumeChange), doc),\n    on(\"ratechange\", handler(MediaInteractions.RateChange), doc)\n  ];\n  return callbackWrapper(() => {\n    handlers.forEach((h) => h());\n  });\n}\nfunction initFontObserver({ fontCb, doc }) {\n  const win = doc.defaultView;\n  if (!win) {\n    return () => {\n    };\n  }\n  const handlers = [];\n  const fontMap = /* @__PURE__ */ new WeakMap();\n  const originalFontFace = win.FontFace;\n  win.FontFace = function FontFace2(family, source, descriptors) {\n    const fontFace = new originalFontFace(family, source, descriptors);\n    fontMap.set(fontFace, {\n      family,\n      buffer: typeof source !== \"string\",\n      descriptors,\n      fontSource: typeof source === \"string\" ? source : JSON.stringify(Array.from(new Uint8Array(source)))\n    });\n    return fontFace;\n  };\n  const restoreHandler = patch(\n    doc.fonts,\n    \"add\",\n    function(original) {\n      return function(fontFace) {\n        setTimeout$1(\n          callbackWrapper(() => {\n            const p = fontMap.get(fontFace);\n            if (p) {\n              fontCb(p);\n              fontMap.delete(fontFace);\n            }\n          }),\n          0\n        );\n        return original.apply(this, [fontFace]);\n      };\n    }\n  );\n  handlers.push(() => {\n    win.FontFace = originalFontFace;\n  });\n  handlers.push(restoreHandler);\n  return callbackWrapper(() => {\n    handlers.forEach((h) => h());\n  });\n}\nfunction initSelectionObserver(param) {\n  const {\n    doc,\n    mirror: mirror2,\n    blockClass,\n    blockSelector,\n    unblockSelector,\n    selectionCb\n  } = param;\n  let collapsed = true;\n  const updateSelection = callbackWrapper(() => {\n    const selection = doc.getSelection();\n    if (!selection || collapsed && selection?.isCollapsed) return;\n    collapsed = selection.isCollapsed || false;\n    const ranges = [];\n    const count = selection.rangeCount || 0;\n    for (let i2 = 0; i2 < count; i2++) {\n      const range = selection.getRangeAt(i2);\n      const { startContainer, startOffset, endContainer, endOffset } = range;\n      const blocked = isBlocked(\n        startContainer,\n        blockClass,\n        blockSelector,\n        unblockSelector,\n        true\n      ) || isBlocked(\n        endContainer,\n        blockClass,\n        blockSelector,\n        unblockSelector,\n        true\n      );\n      if (blocked) continue;\n      ranges.push({\n        start: mirror2.getId(startContainer),\n        startOffset,\n        end: mirror2.getId(endContainer),\n        endOffset\n      });\n    }\n    selectionCb({ ranges });\n  });\n  updateSelection();\n  return on(\"selectionchange\", updateSelection);\n}\nfunction initCustomElementObserver({\n  doc,\n  customElementCb\n}) {\n  const win = doc.defaultView;\n  if (!win || !win.customElements) return () => {\n  };\n  const restoreHandler = patch(\n    win.customElements,\n    \"define\",\n    function(original) {\n      return function(name, constructor, options) {\n        try {\n          customElementCb({\n            define: {\n              name\n            }\n          });\n        } catch (e2) {\n        }\n        return original.apply(this, [name, constructor, options]);\n      };\n    }\n  );\n  return restoreHandler;\n}\nfunction initObservers(o2, _hooks = {}) {\n  const currentWindow = o2.doc.defaultView;\n  if (!currentWindow) {\n    return () => {\n    };\n  }\n  let mutationObserver;\n  if (o2.recordDOM) {\n    mutationObserver = initMutationObserver(o2, o2.doc);\n  }\n  const mousemoveHandler = initMoveObserver(o2);\n  const mouseInteractionHandler = initMouseInteractionObserver(o2);\n  const scrollHandler = initScrollObserver(o2);\n  const viewportResizeHandler = initViewportResizeObserver(o2, {\n    win: currentWindow\n  });\n  const inputHandler = initInputObserver(o2);\n  const mediaInteractionHandler = initMediaInteractionObserver(o2);\n  let styleSheetObserver = () => {\n  };\n  let adoptedStyleSheetObserver = () => {\n  };\n  let styleDeclarationObserver = () => {\n  };\n  let fontObserver = () => {\n  };\n  if (o2.recordDOM) {\n    styleSheetObserver = initStyleSheetObserver(o2, { win: currentWindow });\n    adoptedStyleSheetObserver = initAdoptedStyleSheetObserver(o2, o2.doc);\n    styleDeclarationObserver = initStyleDeclarationObserver(o2, {\n      win: currentWindow\n    });\n    if (o2.collectFonts) {\n      fontObserver = initFontObserver(o2);\n    }\n  }\n  const selectionObserver = initSelectionObserver(o2);\n  const customElementObserver = initCustomElementObserver(o2);\n  const pluginHandlers = [];\n  for (const plugin of o2.plugins) {\n    pluginHandlers.push(\n      plugin.observer(plugin.callback, currentWindow, plugin.options)\n    );\n  }\n  return callbackWrapper(() => {\n    mutationBuffers.forEach((b) => b.reset());\n    mutationObserver?.disconnect();\n    mousemoveHandler();\n    mouseInteractionHandler();\n    scrollHandler();\n    viewportResizeHandler();\n    inputHandler();\n    mediaInteractionHandler();\n    styleSheetObserver();\n    adoptedStyleSheetObserver();\n    styleDeclarationObserver();\n    fontObserver();\n    selectionObserver();\n    customElementObserver();\n    pluginHandlers.forEach((h) => h());\n  });\n}\nfunction hasNestedCSSRule(prop) {\n  return typeof window[prop] !== \"undefined\";\n}\nfunction canMonkeyPatchNestedCSSRule(prop) {\n  return Boolean(\n    typeof window[prop] !== \"undefined\" && // Note: Generally, this check _shouldn't_ be necessary\n    // However, in some scenarios (e.g. jsdom) this can sometimes fail, so we check for it here\n    window[prop].prototype && \"insertRule\" in window[prop].prototype && \"deleteRule\" in window[prop].prototype\n  );\n}\nclass CrossOriginIframeMirror {\n  constructor(generateIdFn) {\n    this.generateIdFn = generateIdFn;\n    this.iframeIdToRemoteIdMap = /* @__PURE__ */ new WeakMap();\n    this.iframeRemoteIdToIdMap = /* @__PURE__ */ new WeakMap();\n  }\n  getId(iframe, remoteId, idToRemoteMap, remoteToIdMap) {\n    const idToRemoteIdMap = idToRemoteMap || this.getIdToRemoteIdMap(iframe);\n    const remoteIdToIdMap = remoteToIdMap || this.getRemoteIdToIdMap(iframe);\n    let id = idToRemoteIdMap.get(remoteId);\n    if (!id) {\n      id = this.generateIdFn();\n      idToRemoteIdMap.set(remoteId, id);\n      remoteIdToIdMap.set(id, remoteId);\n    }\n    return id;\n  }\n  getIds(iframe, remoteId) {\n    const idToRemoteIdMap = this.getIdToRemoteIdMap(iframe);\n    const remoteIdToIdMap = this.getRemoteIdToIdMap(iframe);\n    return remoteId.map(\n      (id) => this.getId(iframe, id, idToRemoteIdMap, remoteIdToIdMap)\n    );\n  }\n  getRemoteId(iframe, id, map) {\n    const remoteIdToIdMap = map || this.getRemoteIdToIdMap(iframe);\n    if (typeof id !== \"number\") return id;\n    const remoteId = remoteIdToIdMap.get(id);\n    if (!remoteId) return -1;\n    return remoteId;\n  }\n  getRemoteIds(iframe, ids) {\n    const remoteIdToIdMap = this.getRemoteIdToIdMap(iframe);\n    return ids.map((id) => this.getRemoteId(iframe, id, remoteIdToIdMap));\n  }\n  reset(iframe) {\n    if (!iframe) {\n      this.iframeIdToRemoteIdMap = /* @__PURE__ */ new WeakMap();\n      this.iframeRemoteIdToIdMap = /* @__PURE__ */ new WeakMap();\n      return;\n    }\n    this.iframeIdToRemoteIdMap.delete(iframe);\n    this.iframeRemoteIdToIdMap.delete(iframe);\n  }\n  getIdToRemoteIdMap(iframe) {\n    let idToRemoteIdMap = this.iframeIdToRemoteIdMap.get(iframe);\n    if (!idToRemoteIdMap) {\n      idToRemoteIdMap = /* @__PURE__ */ new Map();\n      this.iframeIdToRemoteIdMap.set(iframe, idToRemoteIdMap);\n    }\n    return idToRemoteIdMap;\n  }\n  getRemoteIdToIdMap(iframe) {\n    let remoteIdToIdMap = this.iframeRemoteIdToIdMap.get(iframe);\n    if (!remoteIdToIdMap) {\n      remoteIdToIdMap = /* @__PURE__ */ new Map();\n      this.iframeRemoteIdToIdMap.set(iframe, remoteIdToIdMap);\n    }\n    return remoteIdToIdMap;\n  }\n}\nclass IframeManagerNoop {\n  constructor() {\n    this.crossOriginIframeMirror = new CrossOriginIframeMirror(genId);\n    this.crossOriginIframeRootIdMap = /* @__PURE__ */ new WeakMap();\n  }\n  addIframe() {\n  }\n  addLoadListener() {\n  }\n  attachIframe() {\n  }\n}\nclass IframeManager {\n  constructor(options) {\n    this.iframes = /* @__PURE__ */ new WeakMap();\n    this.crossOriginIframeMap = /* @__PURE__ */ new WeakMap();\n    this.crossOriginIframeMirror = new CrossOriginIframeMirror(genId);\n    this.crossOriginIframeRootIdMap = /* @__PURE__ */ new WeakMap();\n    this.mutationCb = options.mutationCb;\n    this.wrappedEmit = options.wrappedEmit;\n    this.stylesheetManager = options.stylesheetManager;\n    this.recordCrossOriginIframes = options.recordCrossOriginIframes;\n    this.crossOriginIframeStyleMirror = new CrossOriginIframeMirror(\n      this.stylesheetManager.styleMirror.generateId.bind(\n        this.stylesheetManager.styleMirror\n      )\n    );\n    this.mirror = options.mirror;\n    if (this.recordCrossOriginIframes) {\n      window.addEventListener(\"message\", this.handleMessage.bind(this));\n    }\n  }\n  addIframe(iframeEl) {\n    this.iframes.set(iframeEl, true);\n    if (iframeEl.contentWindow)\n      this.crossOriginIframeMap.set(iframeEl.contentWindow, iframeEl);\n  }\n  addLoadListener(cb) {\n    this.loadListener = cb;\n  }\n  attachIframe(iframeEl, childSn) {\n    this.mutationCb({\n      adds: [\n        {\n          parentId: this.mirror.getId(iframeEl),\n          nextId: null,\n          node: childSn\n        }\n      ],\n      removes: [],\n      texts: [],\n      attributes: [],\n      isAttachIframe: true\n    });\n    if (this.recordCrossOriginIframes)\n      iframeEl.contentWindow?.addEventListener(\n        \"message\",\n        this.handleMessage.bind(this)\n      );\n    this.loadListener?.(iframeEl);\n    const iframeDoc = getIFrameContentDocument(iframeEl);\n    if (iframeDoc && iframeDoc.adoptedStyleSheets && iframeDoc.adoptedStyleSheets.length > 0)\n      this.stylesheetManager.adoptStyleSheets(\n        iframeDoc.adoptedStyleSheets,\n        this.mirror.getId(iframeDoc)\n      );\n  }\n  handleMessage(message) {\n    const crossOriginMessageEvent = message;\n    if (crossOriginMessageEvent.data.type !== \"rrweb\" || // To filter out the rrweb messages which are forwarded by some sites.\n    crossOriginMessageEvent.origin !== crossOriginMessageEvent.data.origin)\n      return;\n    const iframeSourceWindow = message.source;\n    if (!iframeSourceWindow) return;\n    const iframeEl = this.crossOriginIframeMap.get(message.source);\n    if (!iframeEl) return;\n    const transformedEvent = this.transformCrossOriginEvent(\n      iframeEl,\n      crossOriginMessageEvent.data.event\n    );\n    if (transformedEvent)\n      this.wrappedEmit(\n        transformedEvent,\n        crossOriginMessageEvent.data.isCheckout\n      );\n  }\n  transformCrossOriginEvent(iframeEl, e2) {\n    switch (e2.type) {\n      case EventType.FullSnapshot: {\n        this.crossOriginIframeMirror.reset(iframeEl);\n        this.crossOriginIframeStyleMirror.reset(iframeEl);\n        this.replaceIdOnNode(e2.data.node, iframeEl);\n        const rootId = e2.data.node.id;\n        this.crossOriginIframeRootIdMap.set(iframeEl, rootId);\n        this.patchRootIdOnNode(e2.data.node, rootId);\n        return {\n          timestamp: e2.timestamp,\n          type: EventType.IncrementalSnapshot,\n          data: {\n            source: IncrementalSource.Mutation,\n            adds: [\n              {\n                parentId: this.mirror.getId(iframeEl),\n                nextId: null,\n                node: e2.data.node\n              }\n            ],\n            removes: [],\n            texts: [],\n            attributes: [],\n            isAttachIframe: true\n          }\n        };\n      }\n      case EventType.Meta:\n      case EventType.Load:\n      case EventType.DomContentLoaded: {\n        return false;\n      }\n      case EventType.Plugin: {\n        return e2;\n      }\n      case EventType.Custom: {\n        this.replaceIds(\n          e2.data.payload,\n          iframeEl,\n          [\"id\", \"parentId\", \"previousId\", \"nextId\"]\n        );\n        return e2;\n      }\n      case EventType.IncrementalSnapshot: {\n        switch (e2.data.source) {\n          case IncrementalSource.Mutation: {\n            e2.data.adds.forEach((n2) => {\n              this.replaceIds(n2, iframeEl, [\n                \"parentId\",\n                \"nextId\",\n                \"previousId\"\n              ]);\n              this.replaceIdOnNode(n2.node, iframeEl);\n              const rootId = this.crossOriginIframeRootIdMap.get(iframeEl);\n              rootId && this.patchRootIdOnNode(n2.node, rootId);\n            });\n            e2.data.removes.forEach((n2) => {\n              this.replaceIds(n2, iframeEl, [\"parentId\", \"id\"]);\n            });\n            e2.data.attributes.forEach((n2) => {\n              this.replaceIds(n2, iframeEl, [\"id\"]);\n            });\n            e2.data.texts.forEach((n2) => {\n              this.replaceIds(n2, iframeEl, [\"id\"]);\n            });\n            return e2;\n          }\n          case IncrementalSource.Drag:\n          case IncrementalSource.TouchMove:\n          case IncrementalSource.MouseMove: {\n            e2.data.positions.forEach((p) => {\n              this.replaceIds(p, iframeEl, [\"id\"]);\n            });\n            return e2;\n          }\n          case IncrementalSource.ViewportResize: {\n            return false;\n          }\n          case IncrementalSource.MediaInteraction:\n          case IncrementalSource.MouseInteraction:\n          case IncrementalSource.Scroll:\n          case IncrementalSource.CanvasMutation:\n          case IncrementalSource.Input: {\n            this.replaceIds(e2.data, iframeEl, [\"id\"]);\n            return e2;\n          }\n          case IncrementalSource.StyleSheetRule:\n          case IncrementalSource.StyleDeclaration: {\n            this.replaceIds(e2.data, iframeEl, [\"id\"]);\n            this.replaceStyleIds(e2.data, iframeEl, [\"styleId\"]);\n            return e2;\n          }\n          case IncrementalSource.Font: {\n            return e2;\n          }\n          case IncrementalSource.Selection: {\n            e2.data.ranges.forEach((range) => {\n              this.replaceIds(range, iframeEl, [\"start\", \"end\"]);\n            });\n            return e2;\n          }\n          case IncrementalSource.AdoptedStyleSheet: {\n            this.replaceIds(e2.data, iframeEl, [\"id\"]);\n            this.replaceStyleIds(e2.data, iframeEl, [\"styleIds\"]);\n            e2.data.styles?.forEach((style) => {\n              this.replaceStyleIds(style, iframeEl, [\"styleId\"]);\n            });\n            return e2;\n          }\n        }\n      }\n    }\n    return false;\n  }\n  replace(iframeMirror, obj, iframeEl, keys) {\n    for (const key of keys) {\n      if (!Array.isArray(obj[key]) && typeof obj[key] !== \"number\") continue;\n      if (Array.isArray(obj[key])) {\n        obj[key] = iframeMirror.getIds(\n          iframeEl,\n          obj[key]\n        );\n      } else {\n        obj[key] = iframeMirror.getId(iframeEl, obj[key]);\n      }\n    }\n    return obj;\n  }\n  replaceIds(obj, iframeEl, keys) {\n    return this.replace(this.crossOriginIframeMirror, obj, iframeEl, keys);\n  }\n  replaceStyleIds(obj, iframeEl, keys) {\n    return this.replace(this.crossOriginIframeStyleMirror, obj, iframeEl, keys);\n  }\n  replaceIdOnNode(node, iframeEl) {\n    this.replaceIds(node, iframeEl, [\"id\", \"rootId\"]);\n    if (\"childNodes\" in node) {\n      node.childNodes.forEach((child) => {\n        this.replaceIdOnNode(child, iframeEl);\n      });\n    }\n  }\n  patchRootIdOnNode(node, rootId) {\n    if (node.type !== NodeType$2.Document && !node.rootId) node.rootId = rootId;\n    if (\"childNodes\" in node) {\n      node.childNodes.forEach((child) => {\n        this.patchRootIdOnNode(child, rootId);\n      });\n    }\n  }\n}\nclass ShadowDomManagerNoop {\n  init() {\n  }\n  addShadowRoot() {\n  }\n  observeAttachShadow() {\n  }\n  reset() {\n  }\n}\nclass ShadowDomManager {\n  constructor(options) {\n    this.shadowDoms = /* @__PURE__ */ new WeakSet();\n    this.restoreHandlers = [];\n    this.mutationCb = options.mutationCb;\n    this.scrollCb = options.scrollCb;\n    this.bypassOptions = options.bypassOptions;\n    this.mirror = options.mirror;\n    this.init();\n  }\n  init() {\n    this.reset();\n    this.patchAttachShadow(Element, document);\n  }\n  addShadowRoot(shadowRoot, doc) {\n    if (!isNativeShadowDom(shadowRoot)) return;\n    if (this.shadowDoms.has(shadowRoot)) return;\n    this.shadowDoms.add(shadowRoot);\n    this.bypassOptions.canvasManager.addShadowRoot(shadowRoot);\n    const observer = initMutationObserver(\n      {\n        ...this.bypassOptions,\n        doc,\n        mutationCb: this.mutationCb,\n        mirror: this.mirror,\n        shadowDomManager: this\n      },\n      shadowRoot\n    );\n    this.restoreHandlers.push(() => observer.disconnect());\n    this.restoreHandlers.push(\n      initScrollObserver({\n        ...this.bypassOptions,\n        scrollCb: this.scrollCb,\n        // https://gist.github.com/praveenpuglia/0832da687ed5a5d7a0907046c9ef1813\n        // scroll is not allowed to pass the boundary, so we need to listen the shadow document\n        doc: shadowRoot,\n        mirror: this.mirror\n      })\n    );\n    setTimeout$1(() => {\n      if (shadowRoot.adoptedStyleSheets && shadowRoot.adoptedStyleSheets.length > 0)\n        this.bypassOptions.stylesheetManager.adoptStyleSheets(\n          shadowRoot.adoptedStyleSheets,\n          this.mirror.getId(shadowRoot.host)\n        );\n      this.restoreHandlers.push(\n        initAdoptedStyleSheetObserver(\n          {\n            mirror: this.mirror,\n            stylesheetManager: this.bypassOptions.stylesheetManager\n          },\n          shadowRoot\n        )\n      );\n    }, 0);\n  }\n  /**\n   * Monkey patch 'attachShadow' of an IFrameElement to observe newly added shadow doms.\n   */\n  observeAttachShadow(iframeElement) {\n    const iframeDoc = getIFrameContentDocument(iframeElement);\n    const iframeWindow = getIFrameContentWindow(iframeElement);\n    if (!iframeDoc || !iframeWindow) return;\n    this.patchAttachShadow(\n      iframeWindow.Element,\n      iframeDoc\n    );\n  }\n  /**\n   * Patch 'attachShadow' to observe newly added shadow doms.\n   */\n  patchAttachShadow(element, doc) {\n    const manager = this;\n    this.restoreHandlers.push(\n      patch(\n        element.prototype,\n        \"attachShadow\",\n        function(original) {\n          return function(option) {\n            const shadowRoot = original.call(this, option);\n            if (this.shadowRoot && inDom(this))\n              manager.addShadowRoot(this.shadowRoot, doc);\n            return shadowRoot;\n          };\n        }\n      )\n    );\n  }\n  reset() {\n    this.restoreHandlers.forEach((handler) => {\n      try {\n        handler();\n      } catch (e2) {\n      }\n    });\n    this.restoreHandlers = [];\n    this.shadowDoms = /* @__PURE__ */ new WeakSet();\n    this.bypassOptions.canvasManager.resetShadowRoots();\n  }\n}\nvar chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\nvar lookup = typeof Uint8Array === \"undefined\" ? [] : new Uint8Array(256);\nfor (var i$1 = 0; i$1 < chars.length; i$1++) {\n  lookup[chars.charCodeAt(i$1)] = i$1;\n}\nvar encode = function(arraybuffer) {\n  var bytes = new Uint8Array(arraybuffer), i2, len = bytes.length, base64 = \"\";\n  for (i2 = 0; i2 < len; i2 += 3) {\n    base64 += chars[bytes[i2] >> 2];\n    base64 += chars[(bytes[i2] & 3) << 4 | bytes[i2 + 1] >> 4];\n    base64 += chars[(bytes[i2 + 1] & 15) << 2 | bytes[i2 + 2] >> 6];\n    base64 += chars[bytes[i2 + 2] & 63];\n  }\n  if (len % 3 === 2) {\n    base64 = base64.substring(0, base64.length - 1) + \"=\";\n  } else if (len % 3 === 1) {\n    base64 = base64.substring(0, base64.length - 2) + \"==\";\n  }\n  return base64;\n};\nvar decode = function(base64) {\n  var bufferLength = base64.length * 0.75, len = base64.length, i2, p = 0, encoded1, encoded2, encoded3, encoded4;\n  if (base64[base64.length - 1] === \"=\") {\n    bufferLength--;\n    if (base64[base64.length - 2] === \"=\") {\n      bufferLength--;\n    }\n  }\n  var arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n  for (i2 = 0; i2 < len; i2 += 4) {\n    encoded1 = lookup[base64.charCodeAt(i2)];\n    encoded2 = lookup[base64.charCodeAt(i2 + 1)];\n    encoded3 = lookup[base64.charCodeAt(i2 + 2)];\n    encoded4 = lookup[base64.charCodeAt(i2 + 3)];\n    bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n    bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n    bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n  }\n  return arraybuffer;\n};\nconst canvasVarMap = /* @__PURE__ */ new Map();\nfunction variableListFor$1(ctx, ctor) {\n  let contextMap = canvasVarMap.get(ctx);\n  if (!contextMap) {\n    contextMap = /* @__PURE__ */ new Map();\n    canvasVarMap.set(ctx, contextMap);\n  }\n  if (!contextMap.has(ctor)) {\n    contextMap.set(ctor, []);\n  }\n  return contextMap.get(ctor);\n}\nconst saveWebGLVar = (value, win, ctx) => {\n  if (!value || !(isInstanceOfWebGLObject(value, win) || typeof value === \"object\"))\n    return;\n  const name = value.constructor.name;\n  const list = variableListFor$1(ctx, name);\n  let index = list.indexOf(value);\n  if (index === -1) {\n    index = list.length;\n    list.push(value);\n  }\n  return index;\n};\nfunction serializeArg(value, win, ctx) {\n  if (value instanceof Array) {\n    return value.map((arg) => serializeArg(arg, win, ctx));\n  } else if (value === null) {\n    return value;\n  } else if (value instanceof Float32Array || value instanceof Float64Array || value instanceof Int32Array || value instanceof Uint32Array || value instanceof Uint8Array || value instanceof Uint16Array || value instanceof Int16Array || value instanceof Int8Array || value instanceof Uint8ClampedArray) {\n    const name = value.constructor.name;\n    return {\n      rr_type: name,\n      args: [Object.values(value)]\n    };\n  } else if (\n    // SharedArrayBuffer disabled on most browsers due to spectre.\n    // More info: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer/SharedArrayBuffer\n    // value instanceof SharedArrayBuffer ||\n    value instanceof ArrayBuffer\n  ) {\n    const name = value.constructor.name;\n    const base64 = encode(value);\n    return {\n      rr_type: name,\n      base64\n    };\n  } else if (value instanceof DataView) {\n    const name = value.constructor.name;\n    return {\n      rr_type: name,\n      args: [\n        serializeArg(value.buffer, win, ctx),\n        value.byteOffset,\n        value.byteLength\n      ]\n    };\n  } else if (value instanceof HTMLImageElement) {\n    const name = value.constructor.name;\n    const { src } = value;\n    return {\n      rr_type: name,\n      src\n    };\n  } else if (value instanceof HTMLCanvasElement) {\n    const name = \"HTMLImageElement\";\n    const src = value.toDataURL();\n    return {\n      rr_type: name,\n      src\n    };\n  } else if (value instanceof ImageData) {\n    const name = value.constructor.name;\n    return {\n      rr_type: name,\n      args: [serializeArg(value.data, win, ctx), value.width, value.height]\n    };\n  } else if (isInstanceOfWebGLObject(value, win) || typeof value === \"object\") {\n    const name = value.constructor.name;\n    const index = saveWebGLVar(value, win, ctx);\n    return {\n      rr_type: name,\n      index\n    };\n  }\n  return value;\n}\nconst serializeArgs = (args, win, ctx) => {\n  return args.map((arg) => serializeArg(arg, win, ctx));\n};\nconst isInstanceOfWebGLObject = (value, win) => {\n  const webGLConstructorNames = [\n    \"WebGLActiveInfo\",\n    \"WebGLBuffer\",\n    \"WebGLFramebuffer\",\n    \"WebGLProgram\",\n    \"WebGLRenderbuffer\",\n    \"WebGLShader\",\n    \"WebGLShaderPrecisionFormat\",\n    \"WebGLTexture\",\n    \"WebGLUniformLocation\",\n    \"WebGLVertexArrayObject\",\n    // In old Chrome versions, value won't be an instanceof WebGLVertexArrayObject.\n    \"WebGLVertexArrayObjectOES\"\n  ];\n  const supportedWebGLConstructorNames = webGLConstructorNames.filter(\n    (name) => typeof win[name] === \"function\"\n  );\n  return Boolean(\n    supportedWebGLConstructorNames.find(\n      (name) => value instanceof win[name]\n    )\n  );\n};\nfunction initCanvas2DMutationObserver(cb, win, blockClass2, blockSelector, unblockSelector) {\n  const handlers = [];\n  const props2D = Object.getOwnPropertyNames(\n    win.CanvasRenderingContext2D.prototype\n  );\n  for (const prop of props2D) {\n    try {\n      if (typeof win.CanvasRenderingContext2D.prototype[prop] !== \"function\") {\n        continue;\n      }\n      const restoreHandler = patch(\n        win.CanvasRenderingContext2D.prototype,\n        prop,\n        function(original) {\n          return function(...args) {\n            if (!isBlocked(\n              this.canvas,\n              blockClass2,\n              blockSelector,\n              unblockSelector,\n              true\n            )) {\n              setTimeout$1(() => {\n                const recordArgs = serializeArgs(args, win, this);\n                cb(this.canvas, {\n                  type: CanvasContext[\"2D\"],\n                  property: prop,\n                  args: recordArgs\n                });\n              }, 0);\n            }\n            return original.apply(this, args);\n          };\n        }\n      );\n      handlers.push(restoreHandler);\n    } catch {\n      const hookHandler = hookSetter(\n        win.CanvasRenderingContext2D.prototype,\n        prop,\n        {\n          set(v2) {\n            cb(this.canvas, {\n              type: CanvasContext[\"2D\"],\n              property: prop,\n              args: [v2],\n              setter: true\n            });\n          }\n        }\n      );\n      handlers.push(hookHandler);\n    }\n  }\n  return () => {\n    handlers.forEach((h) => h());\n  };\n}\nfunction getNormalizedContextName(contextType) {\n  return contextType === \"experimental-webgl\" ? \"webgl\" : contextType;\n}\nfunction initCanvasContextObserver(win, blockClass, blockSelector, unblockSelector, setPreserveDrawingBufferToTrue) {\n  const handlers = [];\n  try {\n    const restoreHandler = patch(\n      win.HTMLCanvasElement.prototype,\n      \"getContext\",\n      function(original) {\n        return function(contextType, ...args) {\n          if (!isBlocked(this, blockClass, blockSelector, unblockSelector, true)) {\n            const ctxName = getNormalizedContextName(contextType);\n            if (!(\"__context\" in this)) this.__context = ctxName;\n            if (setPreserveDrawingBufferToTrue && [\"webgl\", \"webgl2\"].includes(ctxName)) {\n              if (args[0] && typeof args[0] === \"object\") {\n                const contextAttributes = args[0];\n                if (!contextAttributes.preserveDrawingBuffer) {\n                  contextAttributes.preserveDrawingBuffer = true;\n                }\n              } else {\n                args.splice(0, 1, {\n                  preserveDrawingBuffer: true\n                });\n              }\n            }\n          }\n          return original.apply(this, [contextType, ...args]);\n        };\n      }\n    );\n    handlers.push(restoreHandler);\n  } catch {\n    console.error(\"failed to patch HTMLCanvasElement.prototype.getContext\");\n  }\n  return () => {\n    handlers.forEach((h) => h());\n  };\n}\nfunction patchGLPrototype(prototype, type, cb, blockClass2, blockSelector, unblockSelector, _mirror2, win) {\n  const handlers = [];\n  const props = Object.getOwnPropertyNames(prototype);\n  for (const prop of props) {\n    if (\n      //prop.startsWith('get') ||  // e.g. getProgramParameter, but too risky\n      [\n        \"isContextLost\",\n        \"canvas\",\n        \"drawingBufferWidth\",\n        \"drawingBufferHeight\"\n      ].includes(prop)\n    ) {\n      continue;\n    }\n    try {\n      if (typeof prototype[prop] !== \"function\") {\n        continue;\n      }\n      const restoreHandler = patch(\n        prototype,\n        prop,\n        function(original) {\n          return function(...args) {\n            const result = original.apply(this, args);\n            saveWebGLVar(result, win, this);\n            if (\"tagName\" in this.canvas && !isBlocked(\n              this.canvas,\n              blockClass2,\n              blockSelector,\n              unblockSelector,\n              true\n            )) {\n              const recordArgs = serializeArgs(args, win, this);\n              const mutation = {\n                type,\n                property: prop,\n                args: recordArgs\n              };\n              cb(this.canvas, mutation);\n            }\n            return result;\n          };\n        }\n      );\n      handlers.push(restoreHandler);\n    } catch {\n      const hookHandler = hookSetter(prototype, prop, {\n        set(v2) {\n          cb(this.canvas, {\n            type,\n            property: prop,\n            args: [v2],\n            setter: true\n          });\n        }\n      });\n      handlers.push(hookHandler);\n    }\n  }\n  return handlers;\n}\nfunction initCanvasWebGLMutationObserver(cb, win, blockClass2, blockSelector, unblockSelector, mirror2) {\n  const handlers = [];\n  handlers.push(\n    ...patchGLPrototype(\n      win.WebGLRenderingContext.prototype,\n      CanvasContext.WebGL,\n      cb,\n      blockClass2,\n      blockSelector,\n      unblockSelector,\n      mirror2,\n      win\n    )\n  );\n  if (typeof win.WebGL2RenderingContext !== \"undefined\") {\n    handlers.push(\n      ...patchGLPrototype(\n        win.WebGL2RenderingContext.prototype,\n        CanvasContext.WebGL2,\n        cb,\n        blockClass2,\n        blockSelector,\n        unblockSelector,\n        mirror2,\n        win\n      )\n    );\n  }\n  return () => {\n    handlers.forEach((h) => h());\n  };\n}\nconst r$1 = `for(var e=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\",t=\"undefined\"==typeof Uint8Array?[]:new Uint8Array(256),a=0;a<64;a++)t[e.charCodeAt(a)]=a;var n=function(t){var a,n=new Uint8Array(t),r=n.length,s=\"\";for(a=0;a<r;a+=3)s+=e[n[a]>>2],s+=e[(3&n[a])<<4|n[a+1]>>4],s+=e[(15&n[a+1])<<2|n[a+2]>>6],s+=e[63&n[a+2]];return r%3==2?s=s.substring(0,s.length-1)+\"=\":r%3==1&&(s=s.substring(0,s.length-2)+\"==\"),s};const r=new Map,s=new Map;const i=self;i.onmessage=async function(e){if(!(\"OffscreenCanvas\"in globalThis))return i.postMessage({id:e.data.id});{const{id:t,bitmap:a,width:o,height:f,maxCanvasSize:c,dataURLOptions:g}=e.data,u=async function(e,t,a){const r=e+\"-\"+t;if(\"OffscreenCanvas\"in globalThis){if(s.has(r))return s.get(r);const i=new OffscreenCanvas(e,t);i.getContext(\"2d\");const o=await i.convertToBlob(a),f=await o.arrayBuffer(),c=n(f);return s.set(r,c),c}return\"\"}(o,f,g),[h,d]=function(e,t,a){if(!a)return[e,t];const[n,r]=a;if(e<=n&&t<=r)return[e,t];let s=e,i=t;return s>n&&(i=Math.floor(n*t/e),s=n),i>r&&(s=Math.floor(r*e/t),i=r),[s,i]}(o,f,c),l=new OffscreenCanvas(h,d),w=l.getContext(\"bitmaprenderer\"),p=h===o&&d===f?a:await createImageBitmap(a,{resizeWidth:h,resizeHeight:d,resizeQuality:\"low\"});w.transferFromImageBitmap(p),a.close();const y=await l.convertToBlob(g),v=y.type,b=await y.arrayBuffer(),m=n(b);if(p.close(),!r.has(t)&&await u===m)return r.set(t,m),i.postMessage({id:t});if(r.get(t)===m)return i.postMessage({id:t});i.postMessage({id:t,type:v,base64:m,width:o,height:f}),r.set(t,m)}};`;\nfunction t$1() {\n  const t2 = new Blob([r$1]);\n  return URL.createObjectURL(t2);\n}\nclass CanvasManagerNoop {\n  reset() {\n  }\n  freeze() {\n  }\n  unfreeze() {\n  }\n  lock() {\n  }\n  unlock() {\n  }\n  snapshot() {\n  }\n  addWindow() {\n  }\n  addShadowRoot() {\n  }\n  resetShadowRoots() {\n  }\n}\nclass CanvasManager {\n  constructor(options) {\n    this.pendingCanvasMutations = /* @__PURE__ */ new Map();\n    this.rafStamps = { latestId: 0, invokeId: null };\n    this.shadowDoms = /* @__PURE__ */ new Set();\n    this.windowsSet = /* @__PURE__ */ new WeakSet();\n    this.windows = [];\n    this.restoreHandlers = [];\n    this.frozen = false;\n    this.locked = false;\n    this.snapshotInProgressMap = /* @__PURE__ */ new Map();\n    this.worker = null;\n    this.lastSnapshotTime = 0;\n    this.processMutation = (target, mutation) => {\n      const newFrame = this.rafStamps.invokeId && this.rafStamps.latestId !== this.rafStamps.invokeId;\n      if (newFrame || !this.rafStamps.invokeId)\n        this.rafStamps.invokeId = this.rafStamps.latestId;\n      if (!this.pendingCanvasMutations.has(target)) {\n        this.pendingCanvasMutations.set(target, []);\n      }\n      this.pendingCanvasMutations.get(target).push(mutation);\n    };\n    const {\n      sampling = \"all\",\n      win,\n      blockClass,\n      blockSelector,\n      unblockSelector,\n      maxCanvasSize,\n      recordCanvas,\n      dataURLOptions,\n      errorHandler: errorHandler2\n    } = options;\n    this.mutationCb = options.mutationCb;\n    this.mirror = options.mirror;\n    this.options = options;\n    if (errorHandler2) {\n      registerErrorHandler(errorHandler2);\n    }\n    if (recordCanvas && typeof sampling === \"number\" || options.enableManualSnapshot) {\n      this.worker = this.initFPSWorker();\n    }\n    this.addWindow(win);\n    if (options.enableManualSnapshot) {\n      return;\n    }\n    callbackWrapper(() => {\n      if (recordCanvas && sampling === \"all\") {\n        this.startRAFTimestamping();\n        this.startPendingCanvasMutationFlusher();\n      }\n      if (recordCanvas && typeof sampling === \"number\") {\n        this.initCanvasFPSObserver(\n          sampling,\n          blockClass,\n          blockSelector,\n          unblockSelector,\n          maxCanvasSize,\n          {\n            dataURLOptions\n          }\n        );\n      }\n    })();\n  }\n  reset() {\n    this.pendingCanvasMutations.clear();\n    this.restoreHandlers.forEach((handler) => {\n      try {\n        handler();\n      } catch (e2) {\n      }\n    });\n    this.restoreHandlers = [];\n    this.windowsSet = /* @__PURE__ */ new WeakSet();\n    this.windows = [];\n    this.shadowDoms = /* @__PURE__ */ new Set();\n    this.worker?.terminate();\n    this.worker = null;\n    this.snapshotInProgressMap = /* @__PURE__ */ new Map();\n  }\n  freeze() {\n    this.frozen = true;\n  }\n  unfreeze() {\n    this.frozen = false;\n  }\n  lock() {\n    this.locked = true;\n  }\n  unlock() {\n    this.locked = false;\n  }\n  addWindow(win) {\n    const {\n      sampling = \"all\",\n      blockClass,\n      blockSelector,\n      unblockSelector,\n      recordCanvas,\n      enableManualSnapshot\n    } = this.options;\n    if (this.windowsSet.has(win)) return;\n    if (enableManualSnapshot) {\n      this.windowsSet.add(win);\n      this.windows.push(new WeakRef(win));\n      return;\n    }\n    callbackWrapper(() => {\n      if (recordCanvas && sampling === \"all\") {\n        this.initCanvasMutationObserver(\n          win,\n          blockClass,\n          blockSelector,\n          unblockSelector\n        );\n      }\n      if (recordCanvas && typeof sampling === \"number\") {\n        const canvasContextReset = initCanvasContextObserver(\n          win,\n          blockClass,\n          blockSelector,\n          unblockSelector,\n          true\n        );\n        this.restoreHandlers.push(() => {\n          canvasContextReset();\n        });\n      }\n    })();\n    this.windowsSet.add(win);\n    this.windows.push(new WeakRef(win));\n  }\n  addShadowRoot(shadowRoot) {\n    this.shadowDoms.add(new WeakRef(shadowRoot));\n  }\n  resetShadowRoots() {\n    this.shadowDoms = /* @__PURE__ */ new Set();\n  }\n  initFPSWorker() {\n    const worker = new Worker(t$1());\n    worker.onmessage = (e2) => {\n      const data = e2.data;\n      const { id } = data;\n      this.snapshotInProgressMap.set(id, false);\n      if (!(\"base64\" in data)) return;\n      const { base64, type, width, height } = data;\n      this.mutationCb({\n        id,\n        type: CanvasContext[\"2D\"],\n        commands: [\n          {\n            property: \"clearRect\",\n            // wipe canvas\n            args: [0, 0, width, height]\n          },\n          {\n            property: \"drawImage\",\n            // draws (semi-transparent) image\n            args: [\n              {\n                rr_type: \"ImageBitmap\",\n                args: [\n                  {\n                    rr_type: \"Blob\",\n                    data: [{ rr_type: \"ArrayBuffer\", base64 }],\n                    type\n                  }\n                ]\n              },\n              0,\n              0,\n              // The below args are needed if we enforce a max size, we want to\n              // retain the original size when drawing the image (which should be smaller)\n              width,\n              height\n            ]\n          }\n        ]\n      });\n    };\n    return worker;\n  }\n  initCanvasFPSObserver(fps, blockClass, blockSelector, unblockSelector, maxCanvasSize, options) {\n    const rafId = this.takeSnapshot(\n      false,\n      fps,\n      blockClass,\n      blockSelector,\n      unblockSelector,\n      maxCanvasSize,\n      options.dataURLOptions\n    );\n    this.restoreHandlers.push(() => {\n      cancelAnimationFrame(rafId);\n    });\n  }\n  initCanvasMutationObserver(win, blockClass, blockSelector, unblockSelector) {\n    const canvasContextReset = initCanvasContextObserver(\n      win,\n      blockClass,\n      blockSelector,\n      unblockSelector,\n      false\n    );\n    const canvas2DReset = initCanvas2DMutationObserver(\n      this.processMutation.bind(this),\n      win,\n      blockClass,\n      blockSelector,\n      unblockSelector\n    );\n    const canvasWebGL1and2Reset = initCanvasWebGLMutationObserver(\n      this.processMutation.bind(this),\n      win,\n      blockClass,\n      blockSelector,\n      unblockSelector,\n      this.mirror\n    );\n    this.restoreHandlers.push(() => {\n      canvasContextReset();\n      canvas2DReset();\n      canvasWebGL1and2Reset();\n    });\n  }\n  snapshot(canvasElement) {\n    const { options } = this;\n    const rafId = this.takeSnapshot(\n      true,\n      options.sampling === \"all\" ? 2 : options.sampling || 2,\n      options.blockClass,\n      options.blockSelector,\n      options.unblockSelector,\n      options.maxCanvasSize,\n      options.dataURLOptions,\n      canvasElement\n    );\n    this.restoreHandlers.push(() => {\n      cancelAnimationFrame(rafId);\n    });\n  }\n  takeSnapshot(isManualSnapshot, fps, blockClass, blockSelector, unblockSelector, maxCanvasSize, dataURLOptions, canvasElement) {\n    const timeBetweenSnapshots = 1e3 / fps;\n    let rafId;\n    const getCanvas = (canvasElement2) => {\n      if (canvasElement2) {\n        return [canvasElement2];\n      }\n      const matchedCanvas = [];\n      const searchCanvas = (root) => {\n        root.querySelectorAll(\"canvas\").forEach((canvas) => {\n          if (!isBlocked(canvas, blockClass, blockSelector, unblockSelector, true)) {\n            matchedCanvas.push(canvas);\n          }\n        });\n      };\n      for (const item of this.windows) {\n        const window2 = item.deref();\n        let _document;\n        try {\n          _document = window2 && window2.document;\n        } catch {\n        }\n        if (_document) {\n          searchCanvas(_document);\n        }\n      }\n      for (const item of this.shadowDoms) {\n        const shadowRoot = item.deref();\n        if (shadowRoot) {\n          searchCanvas(shadowRoot);\n        }\n      }\n      return matchedCanvas;\n    };\n    const takeCanvasSnapshots = (timestamp) => {\n      if (!this.windows.length) {\n        return;\n      }\n      if (this.lastSnapshotTime && timestamp - this.lastSnapshotTime < timeBetweenSnapshots) {\n        rafId = onRequestAnimationFrame(takeCanvasSnapshots);\n        return;\n      }\n      this.lastSnapshotTime = timestamp;\n      getCanvas(canvasElement).forEach((canvas) => {\n        if (!this.mirror.hasNode(canvas)) {\n          return;\n        }\n        const id = this.mirror.getId(canvas);\n        if (this.snapshotInProgressMap.get(id)) return;\n        if (!canvas.width || !canvas.height) return;\n        this.snapshotInProgressMap.set(id, true);\n        if (!isManualSnapshot && [\"webgl\", \"webgl2\"].includes(canvas.__context)) {\n          const context = canvas.getContext(canvas.__context);\n          if (context?.getContextAttributes()?.preserveDrawingBuffer === false) {\n            context.clear(context.COLOR_BUFFER_BIT);\n          }\n        }\n        createImageBitmap(canvas).then((bitmap) => {\n          this.worker?.postMessage(\n            {\n              id,\n              bitmap,\n              width: canvas.width,\n              height: canvas.height,\n              dataURLOptions,\n              maxCanvasSize\n            },\n            [bitmap]\n          );\n        }).catch((error) => {\n          callbackWrapper(() => {\n            throw error;\n          })();\n        });\n      });\n      if (!isManualSnapshot) {\n        rafId = onRequestAnimationFrame(takeCanvasSnapshots);\n      }\n    };\n    rafId = onRequestAnimationFrame(takeCanvasSnapshots);\n    return rafId;\n  }\n  startPendingCanvasMutationFlusher() {\n    onRequestAnimationFrame(() => this.flushPendingCanvasMutations());\n  }\n  startRAFTimestamping() {\n    const setLatestRAFTimestamp = (timestamp) => {\n      this.rafStamps.latestId = timestamp;\n      onRequestAnimationFrame(setLatestRAFTimestamp);\n    };\n    onRequestAnimationFrame(setLatestRAFTimestamp);\n  }\n  flushPendingCanvasMutations() {\n    this.pendingCanvasMutations.forEach(\n      (_values, canvas) => {\n        const id = this.mirror.getId(canvas);\n        this.flushPendingCanvasMutationFor(canvas, id);\n      }\n    );\n    onRequestAnimationFrame(() => this.flushPendingCanvasMutations());\n  }\n  flushPendingCanvasMutationFor(canvas, id) {\n    if (this.frozen || this.locked) {\n      return;\n    }\n    const valuesWithType = this.pendingCanvasMutations.get(canvas);\n    if (!valuesWithType || id === -1) return;\n    const values = valuesWithType.map((value) => {\n      const { type: type2, ...rest } = value;\n      return rest;\n    });\n    const { type } = valuesWithType[0];\n    this.mutationCb({ id, type, commands: values });\n    this.pendingCanvasMutations.delete(canvas);\n  }\n}\nclass StylesheetManager {\n  constructor(options) {\n    this.trackedLinkElements = /* @__PURE__ */ new WeakSet();\n    this.styleMirror = new StyleSheetMirror();\n    this.mutationCb = options.mutationCb;\n    this.adoptedStyleSheetCb = options.adoptedStyleSheetCb;\n  }\n  attachLinkElement(linkEl, childSn) {\n    if (\"_cssText\" in childSn.attributes)\n      this.mutationCb({\n        adds: [],\n        removes: [],\n        texts: [],\n        attributes: [\n          {\n            id: childSn.id,\n            attributes: childSn.attributes\n          }\n        ]\n      });\n    this.trackLinkElement(linkEl);\n  }\n  trackLinkElement(linkEl) {\n    if (this.trackedLinkElements.has(linkEl)) return;\n    this.trackedLinkElements.add(linkEl);\n    this.trackStylesheetInLinkElement(linkEl);\n  }\n  adoptStyleSheets(sheets, hostId) {\n    if (sheets.length === 0) return;\n    const adoptedStyleSheetData = {\n      id: hostId,\n      styleIds: []\n    };\n    const styles = [];\n    for (const sheet of sheets) {\n      let styleId;\n      if (!this.styleMirror.has(sheet)) {\n        styleId = this.styleMirror.add(sheet);\n        styles.push({\n          styleId,\n          rules: Array.from(sheet.rules || CSSRule, (r2, index) => ({\n            rule: stringifyRule(r2),\n            index\n          }))\n        });\n      } else styleId = this.styleMirror.getId(sheet);\n      adoptedStyleSheetData.styleIds.push(styleId);\n    }\n    if (styles.length > 0) adoptedStyleSheetData.styles = styles;\n    this.adoptedStyleSheetCb(adoptedStyleSheetData);\n  }\n  reset() {\n    this.styleMirror.reset();\n    this.trackedLinkElements = /* @__PURE__ */ new WeakSet();\n  }\n  // TODO: take snapshot on stylesheet reload by applying event listener\n  trackStylesheetInLinkElement(_linkEl) {\n  }\n}\nclass ProcessedNodeManager {\n  constructor() {\n    this.nodeMap = /* @__PURE__ */ new WeakMap();\n    this.active = false;\n  }\n  inOtherBuffer(node, thisBuffer) {\n    const buffers = this.nodeMap.get(node);\n    return buffers && Array.from(buffers).some((buffer) => buffer !== thisBuffer);\n  }\n  add(node, buffer) {\n    if (!this.active) {\n      this.active = true;\n      onRequestAnimationFrame(() => {\n        this.nodeMap = /* @__PURE__ */ new WeakMap();\n        this.active = false;\n      });\n    }\n    this.nodeMap.set(node, (this.nodeMap.get(node) || /* @__PURE__ */ new Set()).add(buffer));\n  }\n  destroy() {\n  }\n}\nlet wrappedEmit;\nlet _wrappedEmit;\nlet _takeFullSnapshot;\ntry {\n  if (Array.from([1], (x) => x * 2)[0] !== 2) {\n    const cleanFrame = document.createElement(\"iframe\");\n    document.body.appendChild(cleanFrame);\n    Array.from = cleanFrame.contentWindow?.Array.from || Array.from;\n    document.body.removeChild(cleanFrame);\n  }\n} catch (err) {\n  console.debug(\"Unable to override Array.from\", err);\n}\nconst mirror = createMirror$2();\nfunction record(options = {}) {\n  const {\n    emit,\n    checkoutEveryNms,\n    checkoutEveryNth,\n    blockClass = \"rr-block\",\n    blockSelector = null,\n    unblockSelector = null,\n    ignoreClass = \"rr-ignore\",\n    ignoreSelector = null,\n    maskAllText = false,\n    maskTextClass = \"rr-mask\",\n    unmaskTextClass = null,\n    maskTextSelector = null,\n    unmaskTextSelector = null,\n    inlineStylesheet = true,\n    maskAllInputs,\n    maskInputOptions: _maskInputOptions,\n    slimDOMOptions: _slimDOMOptions,\n    maskAttributeFn,\n    maskInputFn,\n    maskTextFn,\n    maxCanvasSize = null,\n    packFn,\n    sampling = {},\n    dataURLOptions = {},\n    mousemoveWait,\n    recordDOM = true,\n    recordCanvas = false,\n    recordCrossOriginIframes = false,\n    recordAfter = options.recordAfter === \"DOMContentLoaded\" ? options.recordAfter : \"load\",\n    userTriggeredOnInput = false,\n    collectFonts = false,\n    inlineImages = false,\n    plugins,\n    keepIframeSrcFn = () => false,\n    ignoreCSSAttributes = /* @__PURE__ */ new Set([]),\n    errorHandler: errorHandler2,\n    onMutation,\n    getCanvasManager\n  } = options;\n  registerErrorHandler(errorHandler2);\n  const inEmittingFrame = recordCrossOriginIframes ? window.parent === window : true;\n  let passEmitsToParent = false;\n  if (!inEmittingFrame) {\n    try {\n      if (window.parent.document) {\n        passEmitsToParent = false;\n      }\n    } catch (e2) {\n      passEmitsToParent = true;\n    }\n  }\n  if (inEmittingFrame && !emit) {\n    throw new Error(\"emit function is required\");\n  }\n  if (!inEmittingFrame && !passEmitsToParent) {\n    return () => {\n    };\n  }\n  if (mousemoveWait !== void 0 && sampling.mousemove === void 0) {\n    sampling.mousemove = mousemoveWait;\n  }\n  mirror.reset();\n  const maskInputOptions = maskAllInputs === true ? {\n    color: true,\n    date: true,\n    \"datetime-local\": true,\n    email: true,\n    month: true,\n    number: true,\n    range: true,\n    search: true,\n    tel: true,\n    text: true,\n    time: true,\n    url: true,\n    week: true,\n    textarea: true,\n    select: true,\n    radio: true,\n    checkbox: true\n  } : _maskInputOptions !== void 0 ? _maskInputOptions : {};\n  const slimDOMOptions = _slimDOMOptions === true || _slimDOMOptions === \"all\" ? {\n    script: true,\n    comment: true,\n    headFavicon: true,\n    headWhitespace: true,\n    headMetaSocial: true,\n    headMetaRobots: true,\n    headMetaHttpEquiv: true,\n    headMetaVerification: true,\n    // the following are off for slimDOMOptions === true,\n    // as they destroy some (hidden) info:\n    headMetaAuthorship: _slimDOMOptions === \"all\",\n    headMetaDescKeywords: _slimDOMOptions === \"all\"\n  } : _slimDOMOptions ? _slimDOMOptions : {};\n  polyfill$1();\n  let lastFullSnapshotEvent;\n  let incrementalSnapshotCount = 0;\n  const eventProcessor = (e2) => {\n    for (const plugin of plugins || []) {\n      if (plugin.eventProcessor) {\n        e2 = plugin.eventProcessor(e2);\n      }\n    }\n    if (packFn && // Disable packing events which will be emitted to parent frames.\n    !passEmitsToParent) {\n      e2 = packFn(e2);\n    }\n    return e2;\n  };\n  wrappedEmit = (r2, isCheckout) => {\n    const e2 = r2;\n    e2.timestamp = nowTimestamp();\n    if (mutationBuffers[0]?.isFrozen() && e2.type !== EventType.FullSnapshot && !(e2.type === EventType.IncrementalSnapshot && e2.data.source === IncrementalSource.Mutation)) {\n      mutationBuffers.forEach((buf) => buf.unfreeze());\n    }\n    if (inEmittingFrame) {\n      emit?.(eventProcessor(e2), isCheckout);\n    } else if (passEmitsToParent) {\n      const message = {\n        type: \"rrweb\",\n        event: eventProcessor(e2),\n        origin: window.location.origin,\n        isCheckout\n      };\n      window.parent.postMessage(message, \"*\");\n    }\n    if (e2.type === EventType.FullSnapshot) {\n      lastFullSnapshotEvent = e2;\n      incrementalSnapshotCount = 0;\n    } else if (e2.type === EventType.IncrementalSnapshot) {\n      if (e2.data.source === IncrementalSource.Mutation && e2.data.isAttachIframe) {\n        return;\n      }\n      incrementalSnapshotCount++;\n      const exceedCount = checkoutEveryNth && incrementalSnapshotCount >= checkoutEveryNth;\n      const exceedTime = checkoutEveryNms && lastFullSnapshotEvent && e2.timestamp - lastFullSnapshotEvent.timestamp > checkoutEveryNms;\n      if (exceedCount || exceedTime) {\n        takeFullSnapshot2(true);\n      }\n    }\n  };\n  _wrappedEmit = wrappedEmit;\n  const wrappedMutationEmit = (m) => {\n    wrappedEmit({\n      type: EventType.IncrementalSnapshot,\n      data: {\n        source: IncrementalSource.Mutation,\n        ...m\n      }\n    });\n  };\n  const wrappedScrollEmit = (p) => wrappedEmit({\n    type: EventType.IncrementalSnapshot,\n    data: {\n      source: IncrementalSource.Scroll,\n      ...p\n    }\n  });\n  const wrappedCanvasMutationEmit = (p) => wrappedEmit({\n    type: EventType.IncrementalSnapshot,\n    data: {\n      source: IncrementalSource.CanvasMutation,\n      ...p\n    }\n  });\n  const wrappedAdoptedStyleSheetEmit = (a2) => wrappedEmit({\n    type: EventType.IncrementalSnapshot,\n    data: {\n      source: IncrementalSource.AdoptedStyleSheet,\n      ...a2\n    }\n  });\n  const stylesheetManager = new StylesheetManager({\n    mutationCb: wrappedMutationEmit,\n    adoptedStyleSheetCb: wrappedAdoptedStyleSheetEmit\n  });\n  const iframeManager = typeof __RRWEB_EXCLUDE_IFRAME__ === \"boolean\" && __RRWEB_EXCLUDE_IFRAME__ ? new IframeManagerNoop() : new IframeManager({\n    mirror,\n    mutationCb: wrappedMutationEmit,\n    stylesheetManager,\n    recordCrossOriginIframes,\n    wrappedEmit\n  });\n  for (const plugin of plugins || []) {\n    if (plugin.getMirror)\n      plugin.getMirror({\n        nodeMirror: mirror,\n        crossOriginIframeMirror: iframeManager.crossOriginIframeMirror,\n        crossOriginIframeStyleMirror: iframeManager.crossOriginIframeStyleMirror\n      });\n  }\n  const processedNodeManager = new ProcessedNodeManager();\n  const canvasManager = _getCanvasManager(\n    getCanvasManager,\n    {\n      mirror,\n      win: window,\n      mutationCb: (p) => wrappedEmit({\n        type: EventType.IncrementalSnapshot,\n        data: {\n          source: IncrementalSource.CanvasMutation,\n          ...p\n        }\n      }),\n      recordCanvas,\n      blockClass,\n      blockSelector,\n      unblockSelector,\n      maxCanvasSize,\n      sampling: sampling[\"canvas\"],\n      dataURLOptions,\n      errorHandler: errorHandler2\n    }\n  );\n  const shadowDomManager = typeof __RRWEB_EXCLUDE_SHADOW_DOM__ === \"boolean\" && __RRWEB_EXCLUDE_SHADOW_DOM__ ? new ShadowDomManagerNoop() : new ShadowDomManager({\n    mutationCb: wrappedMutationEmit,\n    scrollCb: wrappedScrollEmit,\n    bypassOptions: {\n      onMutation,\n      blockClass,\n      blockSelector,\n      unblockSelector,\n      maskAllText,\n      maskTextClass,\n      unmaskTextClass,\n      maskTextSelector,\n      unmaskTextSelector,\n      inlineStylesheet,\n      maskInputOptions,\n      dataURLOptions,\n      maskAttributeFn,\n      maskTextFn,\n      maskInputFn,\n      recordCanvas,\n      inlineImages,\n      sampling,\n      slimDOMOptions,\n      iframeManager,\n      stylesheetManager,\n      canvasManager,\n      keepIframeSrcFn,\n      processedNodeManager\n    },\n    mirror\n  });\n  const takeFullSnapshot2 = (isCheckout = false) => {\n    if (!recordDOM) {\n      return;\n    }\n    wrappedEmit(\n      {\n        type: EventType.Meta,\n        data: {\n          href: window.location.href,\n          width: getWindowWidth(),\n          height: getWindowHeight()\n        }\n      },\n      isCheckout\n    );\n    stylesheetManager.reset();\n    shadowDomManager.init();\n    mutationBuffers.forEach((buf) => buf.lock());\n    const node = snapshot(document, {\n      mirror,\n      blockClass,\n      blockSelector,\n      unblockSelector,\n      maskAllText,\n      maskTextClass,\n      unmaskTextClass,\n      maskTextSelector,\n      unmaskTextSelector,\n      inlineStylesheet,\n      maskAllInputs: maskInputOptions,\n      maskAttributeFn,\n      maskInputFn,\n      maskTextFn,\n      slimDOM: slimDOMOptions,\n      dataURLOptions,\n      recordCanvas,\n      inlineImages,\n      onSerialize: (n2) => {\n        if (isSerializedIframe(n2, mirror)) {\n          iframeManager.addIframe(n2);\n        }\n        if (isSerializedStylesheet(n2, mirror)) {\n          stylesheetManager.trackLinkElement(n2);\n        }\n        if (hasShadowRoot(n2)) {\n          shadowDomManager.addShadowRoot(n2.shadowRoot, document);\n        }\n      },\n      onIframeLoad: (iframe, childSn) => {\n        iframeManager.attachIframe(iframe, childSn);\n        if (iframe.contentWindow) {\n          canvasManager.addWindow(iframe.contentWindow);\n        }\n        shadowDomManager.observeAttachShadow(iframe);\n      },\n      onStylesheetLoad: (linkEl, childSn) => {\n        stylesheetManager.attachLinkElement(linkEl, childSn);\n      },\n      keepIframeSrcFn\n    });\n    if (!node) {\n      return console.warn(\"Failed to snapshot the document\");\n    }\n    wrappedEmit({\n      type: EventType.FullSnapshot,\n      data: {\n        node,\n        initialOffset: getWindowScroll(window)\n      }\n    });\n    mutationBuffers.forEach((buf) => buf.unlock());\n    if (document.adoptedStyleSheets && document.adoptedStyleSheets.length > 0)\n      stylesheetManager.adoptStyleSheets(\n        document.adoptedStyleSheets,\n        mirror.getId(document)\n      );\n  };\n  _takeFullSnapshot = takeFullSnapshot2;\n  try {\n    const handlers = [];\n    const observe = (doc) => {\n      return callbackWrapper(initObservers)(\n        {\n          onMutation,\n          mutationCb: wrappedMutationEmit,\n          mousemoveCb: (positions, source) => wrappedEmit({\n            type: EventType.IncrementalSnapshot,\n            data: {\n              source,\n              positions\n            }\n          }),\n          mouseInteractionCb: (d) => wrappedEmit({\n            type: EventType.IncrementalSnapshot,\n            data: {\n              source: IncrementalSource.MouseInteraction,\n              ...d\n            }\n          }),\n          scrollCb: wrappedScrollEmit,\n          viewportResizeCb: (d) => wrappedEmit({\n            type: EventType.IncrementalSnapshot,\n            data: {\n              source: IncrementalSource.ViewportResize,\n              ...d\n            }\n          }),\n          inputCb: (v2) => wrappedEmit({\n            type: EventType.IncrementalSnapshot,\n            data: {\n              source: IncrementalSource.Input,\n              ...v2\n            }\n          }),\n          mediaInteractionCb: (p) => wrappedEmit({\n            type: EventType.IncrementalSnapshot,\n            data: {\n              source: IncrementalSource.MediaInteraction,\n              ...p\n            }\n          }),\n          styleSheetRuleCb: (r2) => wrappedEmit({\n            type: EventType.IncrementalSnapshot,\n            data: {\n              source: IncrementalSource.StyleSheetRule,\n              ...r2\n            }\n          }),\n          styleDeclarationCb: (r2) => wrappedEmit({\n            type: EventType.IncrementalSnapshot,\n            data: {\n              source: IncrementalSource.StyleDeclaration,\n              ...r2\n            }\n          }),\n          canvasMutationCb: wrappedCanvasMutationEmit,\n          fontCb: (p) => wrappedEmit({\n            type: EventType.IncrementalSnapshot,\n            data: {\n              source: IncrementalSource.Font,\n              ...p\n            }\n          }),\n          selectionCb: (p) => {\n            wrappedEmit({\n              type: EventType.IncrementalSnapshot,\n              data: {\n                source: IncrementalSource.Selection,\n                ...p\n              }\n            });\n          },\n          customElementCb: (c2) => {\n            wrappedEmit({\n              type: EventType.IncrementalSnapshot,\n              data: {\n                source: IncrementalSource.CustomElement,\n                ...c2\n              }\n            });\n          },\n          blockClass,\n          ignoreClass,\n          ignoreSelector,\n          maskAllText,\n          maskTextClass,\n          unmaskTextClass,\n          maskTextSelector,\n          unmaskTextSelector,\n          maskInputOptions,\n          inlineStylesheet,\n          sampling,\n          recordDOM,\n          recordCanvas,\n          inlineImages,\n          userTriggeredOnInput,\n          collectFonts,\n          doc,\n          maskAttributeFn,\n          maskInputFn,\n          maskTextFn,\n          keepIframeSrcFn,\n          blockSelector,\n          unblockSelector,\n          slimDOMOptions,\n          dataURLOptions,\n          mirror,\n          iframeManager,\n          stylesheetManager,\n          shadowDomManager,\n          processedNodeManager,\n          canvasManager,\n          ignoreCSSAttributes,\n          plugins: plugins?.filter((p) => p.observer)?.map((p) => ({\n            observer: p.observer,\n            options: p.options,\n            callback: (payload) => wrappedEmit({\n              type: EventType.Plugin,\n              data: {\n                plugin: p.name,\n                payload\n              }\n            })\n          })) || []\n        },\n        {}\n      );\n    };\n    iframeManager.addLoadListener((iframeEl) => {\n      try {\n        handlers.push(observe(iframeEl.contentDocument));\n      } catch (error) {\n        console.warn(error);\n      }\n    });\n    const init = () => {\n      takeFullSnapshot2();\n      handlers.push(observe(document));\n    };\n    if (document.readyState === \"interactive\" || document.readyState === \"complete\") {\n      init();\n    } else {\n      handlers.push(\n        on(\"DOMContentLoaded\", () => {\n          wrappedEmit({\n            type: EventType.DomContentLoaded,\n            data: {}\n          });\n          if (recordAfter === \"DOMContentLoaded\") init();\n        })\n      );\n      handlers.push(\n        on(\n          \"load\",\n          () => {\n            wrappedEmit({\n              type: EventType.Load,\n              data: {}\n            });\n            if (recordAfter === \"load\") init();\n          },\n          window\n        )\n      );\n    }\n    return () => {\n      handlers.forEach((h) => h());\n      processedNodeManager.destroy();\n      _takeFullSnapshot = void 0;\n      unregisterErrorHandler();\n    };\n  } catch (error) {\n    console.warn(error);\n  }\n}\nfunction addCustomEvent(tag, payload) {\n  if (!_wrappedEmit) {\n    throw new Error(\"please add custom event after start recording\");\n  }\n  wrappedEmit({\n    type: EventType.Custom,\n    data: {\n      tag,\n      payload\n    }\n  });\n}\nfunction freezePage() {\n  mutationBuffers.forEach((buf) => buf.freeze());\n}\nfunction takeFullSnapshot(isCheckout) {\n  if (!_takeFullSnapshot) {\n    throw new Error(\"please take full snapshot after start recording\");\n  }\n  _takeFullSnapshot(isCheckout);\n}\nrecord.mirror = mirror;\nrecord.takeFullSnapshot = takeFullSnapshot;\nfunction _getCanvasManager(getCanvasManagerFn, options) {\n  try {\n    return getCanvasManagerFn ? getCanvasManagerFn(options) : new CanvasManagerNoop();\n  } catch {\n    console.warn(\"Unable to initialize CanvasManager\");\n    return new CanvasManagerNoop();\n  }\n}\nfunction mitt$1(n2) {\n  return { all: n2 = n2 || /* @__PURE__ */ new Map(), on: function(t2, e2) {\n    var i2 = n2.get(t2);\n    i2 ? i2.push(e2) : n2.set(t2, [e2]);\n  }, off: function(t2, e2) {\n    var i2 = n2.get(t2);\n    i2 && (e2 ? i2.splice(i2.indexOf(e2) >>> 0, 1) : n2.set(t2, []));\n  }, emit: function(t2, e2) {\n    var i2 = n2.get(t2);\n    i2 && i2.slice().map(function(n3) {\n      n3(e2);\n    }), (i2 = n2.get(\"*\")) && i2.slice().map(function(n3) {\n      n3(t2, e2);\n    });\n  } };\n}\nconst mittProxy = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  default: mitt$1\n}, Symbol.toStringTag, { value: \"Module\" }));\nfunction polyfill(w = window, d = document) {\n  if (\"scrollBehavior\" in d.documentElement.style && w.__forceSmoothScrollPolyfill__ !== true) {\n    return;\n  }\n  const Element2 = w.HTMLElement || w.Element;\n  const SCROLL_TIME = 468;\n  const original = {\n    scroll: w.scroll || w.scrollTo,\n    scrollBy: w.scrollBy,\n    elementScroll: Element2.prototype.scroll || scrollElement,\n    scrollIntoView: Element2.prototype.scrollIntoView\n  };\n  const now = w.performance && w.performance.now ? w.performance.now.bind(w.performance) : Date.now;\n  function isMicrosoftBrowser(userAgent) {\n    const userAgentPatterns = [\"MSIE \", \"Trident/\", \"Edge/\"];\n    return new RegExp(userAgentPatterns.join(\"|\")).test(userAgent);\n  }\n  const ROUNDING_TOLERANCE = isMicrosoftBrowser(w.navigator.userAgent) ? 1 : 0;\n  function scrollElement(x, y) {\n    this.scrollLeft = x;\n    this.scrollTop = y;\n  }\n  function ease(k) {\n    return 0.5 * (1 - Math.cos(Math.PI * k));\n  }\n  function shouldBailOut(firstArg) {\n    if (firstArg === null || typeof firstArg !== \"object\" || firstArg.behavior === void 0 || firstArg.behavior === \"auto\" || firstArg.behavior === \"instant\") {\n      return true;\n    }\n    if (typeof firstArg === \"object\" && firstArg.behavior === \"smooth\") {\n      return false;\n    }\n    throw new TypeError(\n      \"behavior member of ScrollOptions \" + firstArg.behavior + \" is not a valid value for enumeration ScrollBehavior.\"\n    );\n  }\n  function hasScrollableSpace(el, axis) {\n    if (axis === \"Y\") {\n      return el.clientHeight + ROUNDING_TOLERANCE < el.scrollHeight;\n    }\n    if (axis === \"X\") {\n      return el.clientWidth + ROUNDING_TOLERANCE < el.scrollWidth;\n    }\n  }\n  function canOverflow(el, axis) {\n    const overflowValue = w.getComputedStyle(el, null)[\"overflow\" + axis];\n    return overflowValue === \"auto\" || overflowValue === \"scroll\";\n  }\n  function isScrollable(el) {\n    const isScrollableY = hasScrollableSpace(el, \"Y\") && canOverflow(el, \"Y\");\n    const isScrollableX = hasScrollableSpace(el, \"X\") && canOverflow(el, \"X\");\n    return isScrollableY || isScrollableX;\n  }\n  function findScrollableParent(el) {\n    while (el !== d.body && isScrollable(el) === false) {\n      el = el.parentNode || el.host;\n    }\n    return el;\n  }\n  function step(context) {\n    const time = now();\n    let value;\n    let currentX;\n    let currentY;\n    let elapsed = (time - context.startTime) / SCROLL_TIME;\n    elapsed = elapsed > 1 ? 1 : elapsed;\n    value = ease(elapsed);\n    currentX = context.startX + (context.x - context.startX) * value;\n    currentY = context.startY + (context.y - context.startY) * value;\n    context.method.call(context.scrollable, currentX, currentY);\n    if (currentX !== context.x || currentY !== context.y) {\n      w.requestAnimationFrame(step.bind(w, context));\n    }\n  }\n  function smoothScroll(el, x, y) {\n    let scrollable;\n    let startX;\n    let startY;\n    let method;\n    const startTime = now();\n    if (el === d.body) {\n      scrollable = w;\n      startX = w.scrollX || w.pageXOffset;\n      startY = w.scrollY || w.pageYOffset;\n      method = original.scroll;\n    } else {\n      scrollable = el;\n      startX = el.scrollLeft;\n      startY = el.scrollTop;\n      method = scrollElement;\n    }\n    step({\n      scrollable,\n      method,\n      startTime,\n      startX,\n      startY,\n      x,\n      y\n    });\n  }\n  w.scroll = w.scrollTo = function() {\n    if (arguments[0] === void 0) {\n      return;\n    }\n    if (shouldBailOut(arguments[0]) === true) {\n      original.scroll.call(\n        w,\n        arguments[0].left !== void 0 ? arguments[0].left : typeof arguments[0] !== \"object\" ? arguments[0] : w.scrollX || w.pageXOffset,\n        // use top prop, second argument if present or fallback to scrollY\n        arguments[0].top !== void 0 ? arguments[0].top : arguments[1] !== void 0 ? arguments[1] : w.scrollY || w.pageYOffset\n      );\n      return;\n    }\n    smoothScroll.call(\n      w,\n      d.body,\n      arguments[0].left !== void 0 ? ~~arguments[0].left : w.scrollX || w.pageXOffset,\n      arguments[0].top !== void 0 ? ~~arguments[0].top : w.scrollY || w.pageYOffset\n    );\n  };\n  w.scrollBy = function() {\n    if (arguments[0] === void 0) {\n      return;\n    }\n    if (shouldBailOut(arguments[0])) {\n      original.scrollBy.call(\n        w,\n        arguments[0].left !== void 0 ? arguments[0].left : typeof arguments[0] !== \"object\" ? arguments[0] : 0,\n        arguments[0].top !== void 0 ? arguments[0].top : arguments[1] !== void 0 ? arguments[1] : 0\n      );\n      return;\n    }\n    smoothScroll.call(\n      w,\n      d.body,\n      ~~arguments[0].left + (w.scrollX || w.pageXOffset),\n      ~~arguments[0].top + (w.scrollY || w.pageYOffset)\n    );\n  };\n  Element2.prototype.scroll = Element2.prototype.scrollTo = function() {\n    if (arguments[0] === void 0) {\n      return;\n    }\n    if (shouldBailOut(arguments[0]) === true) {\n      if (typeof arguments[0] === \"number\" && arguments[1] === void 0) {\n        throw new SyntaxError(\"Value could not be converted\");\n      }\n      original.elementScroll.call(\n        this,\n        // use left prop, first number argument or fallback to scrollLeft\n        arguments[0].left !== void 0 ? ~~arguments[0].left : typeof arguments[0] !== \"object\" ? ~~arguments[0] : this.scrollLeft,\n        // use top prop, second argument or fallback to scrollTop\n        arguments[0].top !== void 0 ? ~~arguments[0].top : arguments[1] !== void 0 ? ~~arguments[1] : this.scrollTop\n      );\n      return;\n    }\n    const left = arguments[0].left;\n    const top = arguments[0].top;\n    smoothScroll.call(\n      this,\n      this,\n      typeof left === \"undefined\" ? this.scrollLeft : ~~left,\n      typeof top === \"undefined\" ? this.scrollTop : ~~top\n    );\n  };\n  Element2.prototype.scrollBy = function() {\n    if (arguments[0] === void 0) {\n      return;\n    }\n    if (shouldBailOut(arguments[0]) === true) {\n      original.elementScroll.call(\n        this,\n        arguments[0].left !== void 0 ? ~~arguments[0].left + this.scrollLeft : ~~arguments[0] + this.scrollLeft,\n        arguments[0].top !== void 0 ? ~~arguments[0].top + this.scrollTop : ~~arguments[1] + this.scrollTop\n      );\n      return;\n    }\n    this.scroll({\n      left: ~~arguments[0].left + this.scrollLeft,\n      top: ~~arguments[0].top + this.scrollTop,\n      behavior: arguments[0].behavior\n    });\n  };\n  Element2.prototype.scrollIntoView = function() {\n    if (shouldBailOut(arguments[0]) === true) {\n      original.scrollIntoView.call(\n        this,\n        arguments[0] === void 0 ? true : arguments[0]\n      );\n      return;\n    }\n    const scrollableParent = findScrollableParent(this);\n    const parentRects = scrollableParent.getBoundingClientRect();\n    const clientRects = this.getBoundingClientRect();\n    if (scrollableParent !== d.body) {\n      smoothScroll.call(\n        this,\n        scrollableParent,\n        scrollableParent.scrollLeft + clientRects.left - parentRects.left,\n        scrollableParent.scrollTop + clientRects.top - parentRects.top\n      );\n      if (w.getComputedStyle(scrollableParent).position !== \"fixed\") {\n        w.scrollBy({\n          left: parentRects.left,\n          top: parentRects.top,\n          behavior: \"smooth\"\n        });\n      }\n    } else {\n      w.scrollBy({\n        left: clientRects.left,\n        top: clientRects.top,\n        behavior: \"smooth\"\n      });\n    }\n  };\n}\nclass Timer {\n  constructor(actions = [], config) {\n    this.timeOffset = 0;\n    this.raf = null;\n    this.actions = actions;\n    this.speed = config.speed;\n  }\n  /**\n   * Add an action, possibly after the timer starts.\n   */\n  addAction(action) {\n    const rafWasActive = this.raf === true;\n    if (!this.actions.length || this.actions[this.actions.length - 1].delay <= action.delay) {\n      this.actions.push(action);\n    } else {\n      const index = this.findActionIndex(action);\n      this.actions.splice(index, 0, action);\n    }\n    if (rafWasActive) {\n      this.raf = onRequestAnimationFrame(this.rafCheck.bind(this));\n    }\n  }\n  start() {\n    this.timeOffset = 0;\n    this.lastTimestamp = performance.now();\n    this.raf = onRequestAnimationFrame(this.rafCheck.bind(this));\n  }\n  rafCheck() {\n    const time = performance.now();\n    this.timeOffset += (time - this.lastTimestamp) * this.speed;\n    this.lastTimestamp = time;\n    while (this.actions.length) {\n      const action = this.actions[0];\n      if (this.timeOffset >= action.delay) {\n        this.actions.shift();\n        action.doAction();\n      } else {\n        break;\n      }\n    }\n    if (this.actions.length > 0) {\n      this.raf = onRequestAnimationFrame(this.rafCheck.bind(this));\n    } else {\n      this.raf = true;\n    }\n  }\n  clear() {\n    if (this.raf) {\n      if (this.raf !== true) {\n        cancelAnimationFrame(this.raf);\n      }\n      this.raf = null;\n    }\n    this.actions.length = 0;\n  }\n  setSpeed(speed) {\n    this.speed = speed;\n  }\n  isActive() {\n    return this.raf !== null;\n  }\n  findActionIndex(action) {\n    let start = 0;\n    let end = this.actions.length - 1;\n    while (start <= end) {\n      const mid = Math.floor((start + end) / 2);\n      if (this.actions[mid].delay < action.delay) {\n        start = mid + 1;\n      } else if (this.actions[mid].delay > action.delay) {\n        end = mid - 1;\n      } else {\n        return mid + 1;\n      }\n    }\n    return start;\n  }\n}\nfunction addDelay(event, baselineTime) {\n  if (event.type === EventType.IncrementalSnapshot && event.data.source === IncrementalSource.MouseMove && event.data.positions && event.data.positions.length) {\n    const firstOffset = event.data.positions[0].timeOffset;\n    const firstTimestamp = event.timestamp + firstOffset;\n    event.delay = firstTimestamp - baselineTime;\n    return firstTimestamp - baselineTime;\n  }\n  event.delay = event.timestamp - baselineTime;\n  return event.delay;\n}\n/*! *****************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\nfunction t(t2, n2) {\n  var e2 = \"function\" == typeof Symbol && t2[Symbol.iterator];\n  if (!e2) return t2;\n  var r2, o2, i2 = e2.call(t2), a2 = [];\n  try {\n    for (; (void 0 === n2 || n2-- > 0) && !(r2 = i2.next()).done; ) a2.push(r2.value);\n  } catch (t3) {\n    o2 = { error: t3 };\n  } finally {\n    try {\n      r2 && !r2.done && (e2 = i2.return) && e2.call(i2);\n    } finally {\n      if (o2) throw o2.error;\n    }\n  }\n  return a2;\n}\nvar n;\n!function(t2) {\n  t2[t2.NotStarted = 0] = \"NotStarted\", t2[t2.Running = 1] = \"Running\", t2[t2.Stopped = 2] = \"Stopped\";\n}(n || (n = {}));\nvar e = { type: \"xstate.init\" };\nfunction r(t2) {\n  return void 0 === t2 ? [] : [].concat(t2);\n}\nfunction o(t2) {\n  return { type: \"xstate.assign\", assignment: t2 };\n}\nfunction i(t2, n2) {\n  return \"string\" == typeof (t2 = \"string\" == typeof t2 && n2 && n2[t2] ? n2[t2] : t2) ? { type: t2 } : \"function\" == typeof t2 ? { type: t2.name, exec: t2 } : t2;\n}\nfunction a(t2) {\n  return function(n2) {\n    return t2 === n2;\n  };\n}\nfunction u(t2) {\n  return \"string\" == typeof t2 ? { type: t2 } : t2;\n}\nfunction c(t2, n2) {\n  return { value: t2, context: n2, actions: [], changed: false, matches: a(t2) };\n}\nfunction f(t2, n2, e2) {\n  var r2 = n2, o2 = false;\n  return [t2.filter(function(t3) {\n    if (\"xstate.assign\" === t3.type) {\n      o2 = true;\n      var n3 = Object.assign({}, r2);\n      return \"function\" == typeof t3.assignment ? n3 = t3.assignment(r2, e2) : Object.keys(t3.assignment).forEach(function(o3) {\n        n3[o3] = \"function\" == typeof t3.assignment[o3] ? t3.assignment[o3](r2, e2) : t3.assignment[o3];\n      }), r2 = n3, false;\n    }\n    return true;\n  }), r2, o2];\n}\nfunction s(n2, o2) {\n  void 0 === o2 && (o2 = {});\n  var s2 = t(f(r(n2.states[n2.initial].entry).map(function(t2) {\n    return i(t2, o2.actions);\n  }), n2.context, e), 2), l2 = s2[0], v2 = s2[1], y = { config: n2, _options: o2, initialState: { value: n2.initial, actions: l2, context: v2, matches: a(n2.initial) }, transition: function(e2, o3) {\n    var s3, l3, v3 = \"string\" == typeof e2 ? { value: e2, context: n2.context } : e2, p = v3.value, g = v3.context, d = u(o3), x = n2.states[p];\n    if (x.on) {\n      var m = r(x.on[d.type]);\n      try {\n        for (var h = function(t2) {\n          var n3 = \"function\" == typeof Symbol && Symbol.iterator, e3 = n3 && t2[n3], r2 = 0;\n          if (e3) return e3.call(t2);\n          if (t2 && \"number\" == typeof t2.length) return { next: function() {\n            return t2 && r2 >= t2.length && (t2 = void 0), { value: t2 && t2[r2++], done: !t2 };\n          } };\n          throw new TypeError(n3 ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n        }(m), b = h.next(); !b.done; b = h.next()) {\n          var S = b.value;\n          if (void 0 === S) return c(p, g);\n          var w = \"string\" == typeof S ? { target: S } : S, j = w.target, E = w.actions, R = void 0 === E ? [] : E, N = w.cond, O = void 0 === N ? function() {\n            return true;\n          } : N, _ = void 0 === j, k = null != j ? j : p, T = n2.states[k];\n          if (O(g, d)) {\n            var q = t(f((_ ? r(R) : [].concat(x.exit, R, T.entry).filter(function(t2) {\n              return t2;\n            })).map(function(t2) {\n              return i(t2, y._options.actions);\n            }), g, d), 3), z = q[0], A = q[1], B = q[2], C = null != j ? j : p;\n            return { value: C, context: A, actions: z, changed: j !== p || z.length > 0 || B, matches: a(C) };\n          }\n        }\n      } catch (t2) {\n        s3 = { error: t2 };\n      } finally {\n        try {\n          b && !b.done && (l3 = h.return) && l3.call(h);\n        } finally {\n          if (s3) throw s3.error;\n        }\n      }\n    }\n    return c(p, g);\n  } };\n  return y;\n}\nvar l = function(t2, n2) {\n  return t2.actions.forEach(function(e2) {\n    var r2 = e2.exec;\n    return r2 && r2(t2.context, n2);\n  });\n};\nfunction v(t2) {\n  var r2 = t2.initialState, o2 = n.NotStarted, i2 = /* @__PURE__ */ new Set(), c2 = { _machine: t2, send: function(e2) {\n    o2 === n.Running && (r2 = t2.transition(r2, e2), l(r2, u(e2)), i2.forEach(function(t3) {\n      return t3(r2);\n    }));\n  }, subscribe: function(t3) {\n    return i2.add(t3), t3(r2), { unsubscribe: function() {\n      return i2.delete(t3);\n    } };\n  }, start: function(i3) {\n    if (i3) {\n      var u2 = \"object\" == typeof i3 ? i3 : { context: t2.config.context, value: i3 };\n      r2 = { value: u2.value, actions: [], context: u2.context, matches: a(u2.value) };\n    }\n    return o2 = n.Running, l(r2, e), c2;\n  }, stop: function() {\n    return o2 = n.Stopped, i2.clear(), c2;\n  }, get state() {\n    return r2;\n  }, get status() {\n    return o2;\n  } };\n  return c2;\n}\nfunction discardPriorSnapshots(events, baselineTime) {\n  for (let idx = events.length - 1; idx >= 0; idx--) {\n    const event = events[idx];\n    if (event.type === EventType.Meta) {\n      if (event.timestamp <= baselineTime) {\n        return events.slice(idx);\n      }\n    }\n  }\n  return events;\n}\nfunction createPlayerService(context, { getCastFn, applyEventsSynchronously, emitter }) {\n  const playerMachine = s(\n    {\n      id: \"player\",\n      context,\n      initial: \"paused\",\n      states: {\n        playing: {\n          on: {\n            PAUSE: {\n              target: \"paused\",\n              actions: [\"pause\"]\n            },\n            CAST_EVENT: {\n              target: \"playing\",\n              actions: \"castEvent\"\n            },\n            END: {\n              target: \"paused\",\n              actions: [\"resetLastPlayedEvent\", \"pause\"]\n            },\n            ADD_EVENT: {\n              target: \"playing\",\n              actions: [\"addEvent\"]\n            }\n          }\n        },\n        paused: {\n          on: {\n            PLAY: {\n              target: \"playing\",\n              actions: [\"recordTimeOffset\", \"play\"]\n            },\n            CAST_EVENT: {\n              target: \"paused\",\n              actions: \"castEvent\"\n            },\n            TO_LIVE: {\n              target: \"live\",\n              actions: [\"startLive\"]\n            },\n            ADD_EVENT: {\n              target: \"paused\",\n              actions: [\"addEvent\"]\n            }\n          }\n        },\n        live: {\n          on: {\n            ADD_EVENT: {\n              target: \"live\",\n              actions: [\"addEvent\"]\n            },\n            CAST_EVENT: {\n              target: \"live\",\n              actions: [\"castEvent\"]\n            }\n          }\n        }\n      }\n    },\n    {\n      actions: {\n        castEvent: o({\n          lastPlayedEvent: (ctx, event) => {\n            if (event.type === \"CAST_EVENT\") {\n              return event.payload.event;\n            }\n            return ctx.lastPlayedEvent;\n          }\n        }),\n        recordTimeOffset: o((ctx, event) => {\n          let timeOffset = ctx.timeOffset;\n          if (\"payload\" in event && \"timeOffset\" in event.payload) {\n            timeOffset = event.payload.timeOffset;\n          }\n          return {\n            ...ctx,\n            timeOffset,\n            baselineTime: ctx.events[0].timestamp + timeOffset\n          };\n        }),\n        play(ctx) {\n          const { timer, events, baselineTime, lastPlayedEvent } = ctx;\n          timer.clear();\n          for (const event of events) {\n            addDelay(event, baselineTime);\n          }\n          const neededEvents = discardPriorSnapshots(events, baselineTime);\n          let lastPlayedTimestamp = lastPlayedEvent?.timestamp;\n          if (lastPlayedEvent?.type === EventType.IncrementalSnapshot && lastPlayedEvent.data.source === IncrementalSource.MouseMove) {\n            lastPlayedTimestamp = lastPlayedEvent.timestamp + lastPlayedEvent.data.positions[0]?.timeOffset;\n          }\n          if (baselineTime < (lastPlayedTimestamp || 0)) {\n            emitter.emit(ReplayerEvents.PlayBack);\n          }\n          const syncEvents = new Array();\n          for (const event of neededEvents) {\n            if (lastPlayedTimestamp && lastPlayedTimestamp < baselineTime && (event.timestamp <= lastPlayedTimestamp || event === lastPlayedEvent)) {\n              continue;\n            }\n            if (event.timestamp < baselineTime) {\n              syncEvents.push(event);\n            } else {\n              const castFn = getCastFn(event, false);\n              timer.addAction({\n                doAction: () => {\n                  castFn();\n                },\n                delay: event.delay\n              });\n            }\n          }\n          applyEventsSynchronously(syncEvents);\n          emitter.emit(ReplayerEvents.Flush);\n          timer.start();\n        },\n        pause(ctx) {\n          ctx.timer.clear();\n        },\n        resetLastPlayedEvent: o((ctx) => {\n          return {\n            ...ctx,\n            lastPlayedEvent: null\n          };\n        }),\n        startLive: o({\n          baselineTime: (ctx, event) => {\n            ctx.timer.start();\n            if (event.type === \"TO_LIVE\" && event.payload.baselineTime) {\n              return event.payload.baselineTime;\n            }\n            return Date.now();\n          }\n        }),\n        addEvent: o((ctx, machineEvent) => {\n          const { baselineTime, timer, events } = ctx;\n          if (machineEvent.type === \"ADD_EVENT\") {\n            const { event } = machineEvent.payload;\n            addDelay(event, baselineTime);\n            let end = events.length - 1;\n            if (!events[end] || events[end].timestamp <= event.timestamp) {\n              events.push(event);\n            } else {\n              let insertionIndex = -1;\n              let start = 0;\n              while (start <= end) {\n                const mid = Math.floor((start + end) / 2);\n                if (events[mid].timestamp <= event.timestamp) {\n                  start = mid + 1;\n                } else {\n                  end = mid - 1;\n                }\n              }\n              if (insertionIndex === -1) {\n                insertionIndex = start;\n              }\n              events.splice(insertionIndex, 0, event);\n            }\n            const isSync = event.timestamp < baselineTime;\n            const castFn = getCastFn(event, isSync);\n            if (isSync) {\n              castFn();\n            } else if (timer.isActive()) {\n              timer.addAction({\n                doAction: () => {\n                  castFn();\n                },\n                delay: event.delay\n              });\n            }\n          }\n          return { ...ctx, events };\n        })\n      }\n    }\n  );\n  return v(playerMachine);\n}\nfunction createSpeedService(context) {\n  const speedMachine = s(\n    {\n      id: \"speed\",\n      context,\n      initial: \"normal\",\n      states: {\n        normal: {\n          on: {\n            FAST_FORWARD: {\n              target: \"skipping\",\n              actions: [\"recordSpeed\", \"setSpeed\"]\n            },\n            SET_SPEED: {\n              target: \"normal\",\n              actions: [\"setSpeed\"]\n            }\n          }\n        },\n        skipping: {\n          on: {\n            BACK_TO_NORMAL: {\n              target: \"normal\",\n              actions: [\"restoreSpeed\"]\n            },\n            SET_SPEED: {\n              target: \"normal\",\n              actions: [\"setSpeed\"]\n            }\n          }\n        }\n      }\n    },\n    {\n      actions: {\n        setSpeed: (ctx, event) => {\n          if (\"payload\" in event) {\n            ctx.timer.setSpeed(event.payload.speed);\n          }\n        },\n        recordSpeed: o({\n          normalSpeed: (ctx) => ctx.timer.speed\n        }),\n        restoreSpeed: (ctx) => {\n          ctx.timer.setSpeed(ctx.normalSpeed);\n        }\n      }\n    }\n  );\n  return v(speedMachine);\n}\nconst rules = (blockClass) => [\n  `.${blockClass} { background: currentColor }`,\n  \"noscript { display: none !important; }\"\n];\nconst webGLVarMap = /* @__PURE__ */ new Map();\nfunction variableListFor(ctx, ctor) {\n  let contextMap = webGLVarMap.get(ctx);\n  if (!contextMap) {\n    contextMap = /* @__PURE__ */ new Map();\n    webGLVarMap.set(ctx, contextMap);\n  }\n  if (!contextMap.has(ctor)) {\n    contextMap.set(ctor, []);\n  }\n  return contextMap.get(ctor);\n}\nfunction deserializeArg(imageMap, ctx, preload) {\n  return async (arg) => {\n    if (arg && typeof arg === \"object\" && \"rr_type\" in arg) {\n      if (preload) preload.isUnchanged = false;\n      if (arg.rr_type === \"ImageBitmap\" && \"args\" in arg) {\n        const args = await deserializeArg(imageMap, ctx, preload)(arg.args);\n        return await createImageBitmap.apply(null, args);\n      } else if (\"index\" in arg) {\n        if (preload || ctx === null) return arg;\n        const { rr_type: name, index } = arg;\n        return variableListFor(ctx, name)[index];\n      } else if (\"args\" in arg) {\n        const { rr_type: name, args } = arg;\n        const ctor = window[name];\n        return new ctor(\n          ...await Promise.all(\n            args.map(deserializeArg(imageMap, ctx, preload))\n          )\n        );\n      } else if (\"base64\" in arg) {\n        return decode(arg.base64);\n      } else if (\"src\" in arg) {\n        const image = imageMap.get(arg.src);\n        if (image) {\n          return image;\n        } else {\n          const image2 = new Image();\n          image2.src = arg.src;\n          imageMap.set(arg.src, image2);\n          return image2;\n        }\n      } else if (\"data\" in arg && arg.rr_type === \"Blob\") {\n        const blobContents = await Promise.all(\n          arg.data.map(deserializeArg(imageMap, ctx, preload))\n        );\n        const blob = new Blob(blobContents, {\n          type: arg.type\n        });\n        return blob;\n      }\n    } else if (Array.isArray(arg)) {\n      const result = await Promise.all(\n        arg.map(deserializeArg(imageMap, ctx, preload))\n      );\n      return result;\n    }\n    return arg;\n  };\n}\nfunction getContext(target, type) {\n  try {\n    if (type === CanvasContext.WebGL) {\n      return target.getContext(\"webgl\") || target.getContext(\"experimental-webgl\");\n    }\n    return target.getContext(\"webgl2\");\n  } catch (e2) {\n    return null;\n  }\n}\nconst WebGLVariableConstructorsNames = [\n  \"WebGLActiveInfo\",\n  \"WebGLBuffer\",\n  \"WebGLFramebuffer\",\n  \"WebGLProgram\",\n  \"WebGLRenderbuffer\",\n  \"WebGLShader\",\n  \"WebGLShaderPrecisionFormat\",\n  \"WebGLTexture\",\n  \"WebGLUniformLocation\",\n  \"WebGLVertexArrayObject\"\n];\nfunction saveToWebGLVarMap(ctx, result) {\n  if (!result?.constructor) return;\n  const { name } = result.constructor;\n  if (!WebGLVariableConstructorsNames.includes(name)) return;\n  const variables = variableListFor(ctx, name);\n  if (!variables.includes(result)) variables.push(result);\n}\nasync function webglMutation({\n  mutation,\n  target,\n  type,\n  imageMap,\n  errorHandler: errorHandler2\n}) {\n  try {\n    const ctx = getContext(target, type);\n    if (!ctx) return;\n    if (mutation.setter) {\n      ctx[mutation.property] = mutation.args[0];\n      return;\n    }\n    const original = ctx[mutation.property];\n    const args = await Promise.all(\n      mutation.args.map(deserializeArg(imageMap, ctx))\n    );\n    const result = original.apply(ctx, args);\n    saveToWebGLVarMap(ctx, result);\n    const debugMode = false;\n    if (debugMode) ;\n  } catch (error) {\n    errorHandler2(mutation, error);\n  }\n}\nasync function canvasMutation$1({\n  event,\n  mutations,\n  target,\n  imageMap,\n  errorHandler: errorHandler2\n}) {\n  const ctx = target.getContext(\"2d\");\n  if (!ctx) {\n    errorHandler2(mutations[0], new Error(\"Canvas context is null\"));\n    return;\n  }\n  const mutationArgsPromises = mutations.map(\n    async (mutation) => {\n      return Promise.all(mutation.args.map(deserializeArg(imageMap, ctx)));\n    }\n  );\n  const args = await Promise.all(mutationArgsPromises);\n  args.forEach((args2, index) => {\n    const mutation = mutations[index];\n    try {\n      if (mutation.setter) {\n        ctx[mutation.property] = mutation.args[0];\n        return;\n      }\n      const original = ctx[mutation.property];\n      if (mutation.property === \"drawImage\" && typeof mutation.args[0] === \"string\") {\n        imageMap.get(event);\n        original.apply(ctx, mutation.args);\n      } else {\n        original.apply(ctx, args2);\n      }\n    } catch (error) {\n      errorHandler2(mutation, error);\n    }\n    return;\n  });\n}\nasync function canvasMutation({\n  event,\n  mutation,\n  target,\n  imageMap,\n  canvasEventMap,\n  errorHandler: errorHandler2\n}) {\n  try {\n    const precomputedMutation = canvasEventMap.get(event) || mutation;\n    const commands = \"commands\" in precomputedMutation ? precomputedMutation.commands : [precomputedMutation];\n    if ([CanvasContext.WebGL, CanvasContext.WebGL2].includes(mutation.type)) {\n      for (let i2 = 0; i2 < commands.length; i2++) {\n        const command = commands[i2];\n        await webglMutation({\n          mutation: command,\n          type: mutation.type,\n          target,\n          imageMap,\n          errorHandler: errorHandler2\n        });\n      }\n      return;\n    }\n    await canvasMutation$1({\n      event,\n      mutations: commands,\n      target,\n      imageMap,\n      errorHandler: errorHandler2\n    });\n  } catch (error) {\n    errorHandler2(mutation, error);\n  }\n}\nconst SKIP_TIME_INTERVAL = 5 * 1e3;\nconst mitt = mitt$1 || mittProxy;\nconst REPLAY_CONSOLE_PREFIX = \"[replayer]\";\nconst defaultMouseTailConfig = {\n  duration: 500,\n  lineCap: \"round\",\n  lineWidth: 3,\n  strokeStyle: \"red\"\n};\nfunction indicatesTouchDevice(e2) {\n  return e2.type == EventType.IncrementalSnapshot && (e2.data.source == IncrementalSource.TouchMove || e2.data.source == IncrementalSource.MouseInteraction && e2.data.type == MouseInteractions.TouchStart);\n}\nfunction getPointerId(d) {\n  const pointerId = \"pointerId\" in d && typeof d.pointerId === \"number\" ? d.pointerId : -1;\n  return pointerId;\n}\nclass Replayer {\n  constructor(events, config) {\n    this.usingVirtualDom = false;\n    this.virtualDom = new RRDocument();\n    this.emitter = mitt();\n    this.legacy_missingNodeRetryMap = {};\n    this.cache = createCache();\n    this.imageMap = /* @__PURE__ */ new Map();\n    this.canvasEventMap = /* @__PURE__ */ new Map();\n    this.mirror = createMirror$2();\n    this.styleMirror = new StyleSheetMirror();\n    this.firstFullSnapshot = null;\n    this.newDocumentQueue = [];\n    this.pointers = {};\n    this.lastMouseDownEvent = null;\n    this.lastSelectionData = null;\n    this.constructedStyleMutations = [];\n    this.adoptedStyleSheets = [];\n    this.handleResize = (dimension) => {\n      this.iframe.style.display = \"inherit\";\n      for (const el of [\n        ...Object.values(this.pointers).flatMap((a2) => a2.mouseTail),\n        this.iframe\n      ]) {\n        if (!el) {\n          continue;\n        }\n        el.setAttribute(\"width\", String(dimension.width));\n        el.setAttribute(\"height\", String(dimension.height));\n      }\n    };\n    this.applyEventsSynchronously = (events2) => {\n      for (const event of events2) {\n        switch (event.type) {\n          case EventType.DomContentLoaded:\n          case EventType.Load:\n          case EventType.Custom:\n            continue;\n          case EventType.FullSnapshot:\n          case EventType.Meta:\n          case EventType.Plugin:\n          case EventType.IncrementalSnapshot:\n            break;\n        }\n        const castFn = this.getCastFn(event, true);\n        castFn();\n      }\n    };\n    this.getCastFn = (event, isSync = false) => {\n      let castFn;\n      switch (event.type) {\n        case EventType.DomContentLoaded:\n        case EventType.Load:\n          break;\n        case EventType.Custom:\n          castFn = () => {\n            this.emitter.emit(ReplayerEvents.CustomEvent, event);\n          };\n          break;\n        case EventType.Meta:\n          castFn = () => this.emitter.emit(ReplayerEvents.Resize, {\n            width: event.data.width,\n            height: event.data.height\n          });\n          break;\n        case EventType.FullSnapshot:\n          castFn = () => {\n            if (this.firstFullSnapshot) {\n              if (this.firstFullSnapshot === event) {\n                this.firstFullSnapshot = true;\n                return;\n              }\n            } else {\n              this.firstFullSnapshot = true;\n            }\n            this.rebuildFullSnapshot(event, isSync);\n            this.iframe.contentWindow?.scrollTo(event.data.initialOffset);\n            this.styleMirror.reset();\n          };\n          break;\n        case EventType.IncrementalSnapshot:\n          castFn = () => {\n            this.applyIncremental(event, isSync);\n            if (isSync) {\n              return;\n            }\n            if (event === this.nextUserInteractionEvent) {\n              this.nextUserInteractionEvent = null;\n              this.backToNormal();\n            }\n            if (this.config.skipInactive && !this.nextUserInteractionEvent) {\n              for (const _event of this.service.state.context.events) {\n                if (_event.timestamp <= event.timestamp) {\n                  continue;\n                }\n                if (this.isUserInteraction(_event)) {\n                  if (\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    _event.delay - event.delay > this.config.inactivePeriodThreshold * this.speedService.state.context.timer.speed\n                  ) {\n                    this.nextUserInteractionEvent = _event;\n                  }\n                  break;\n                }\n              }\n              if (this.nextUserInteractionEvent) {\n                const skipTime = (\n                  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                  this.nextUserInteractionEvent.delay - event.delay\n                );\n                const payload = {\n                  speed: Math.min(\n                    Math.round(skipTime / SKIP_TIME_INTERVAL),\n                    this.config.maxSpeed\n                  )\n                };\n                this.speedService.send({ type: \"FAST_FORWARD\", payload });\n                this.emitter.emit(ReplayerEvents.SkipStart, payload);\n              }\n            }\n          };\n          break;\n      }\n      const wrappedCastFn = () => {\n        if (castFn) {\n          castFn();\n        }\n        for (const plugin of this.config.plugins || []) {\n          if (plugin.handler) plugin.handler(event, isSync, { replayer: this });\n        }\n        this.service.send({ type: \"CAST_EVENT\", payload: { event } });\n        const last_index = this.service.state.context.events.length - 1;\n        if (!this.config.liveMode && event === this.service.state.context.events[last_index]) {\n          const finish = () => {\n            if (last_index < this.service.state.context.events.length - 1) {\n              return;\n            }\n            this.backToNormal();\n            this.service.send(\"END\");\n            this.emitter.emit(ReplayerEvents.Finish);\n          };\n          let finish_buffer = 50;\n          if (event.type === EventType.IncrementalSnapshot && event.data.source === IncrementalSource.MouseMove && event.data.positions.length) {\n            finish_buffer += Math.max(0, -event.data.positions[0].timeOffset);\n          }\n          setTimeout$1(finish, finish_buffer);\n        }\n        this.emitter.emit(ReplayerEvents.EventCast, event);\n      };\n      return wrappedCastFn;\n    };\n    if (!config?.liveMode && events.length < 2) {\n      throw new Error(\"Replayer need at least 2 events.\");\n    }\n    const defaultConfig = {\n      speed: 1,\n      maxSpeed: 360,\n      root: document.body,\n      loadTimeout: 0,\n      skipInactive: false,\n      inactivePeriodThreshold: 10 * 1e3,\n      showWarning: true,\n      showDebug: false,\n      blockClass: \"rr-block\",\n      liveMode: false,\n      insertStyleRules: [],\n      triggerFocus: true,\n      UNSAFE_replayCanvas: false,\n      pauseAnimation: true,\n      mouseTail: defaultMouseTailConfig,\n      useVirtualDom: true,\n      // Virtual-dom optimization is enabled by default.\n      logger: console\n    };\n    this.config = Object.assign({}, defaultConfig, config);\n    this.handleResize = this.handleResize.bind(this);\n    this.getCastFn = this.getCastFn.bind(this);\n    this.applyEventsSynchronously = this.applyEventsSynchronously.bind(this);\n    this.emitter.on(ReplayerEvents.Resize, this.handleResize);\n    this.setupDom();\n    for (const plugin of this.config.plugins || []) {\n      if (plugin.getMirror) plugin.getMirror({ nodeMirror: this.mirror });\n    }\n    this.emitter.on(ReplayerEvents.Flush, () => {\n      if (this.usingVirtualDom) {\n        const replayerHandler = {\n          mirror: this.mirror,\n          applyCanvas: (canvasEvent, canvasMutationData2, target) => {\n            void canvasMutation({\n              event: canvasEvent,\n              mutation: canvasMutationData2,\n              target,\n              imageMap: this.imageMap,\n              canvasEventMap: this.canvasEventMap,\n              errorHandler: this.warnCanvasMutationFailed.bind(this)\n            });\n          },\n          applyInput: this.applyInput.bind(this),\n          applyScroll: this.applyScroll.bind(this),\n          applyStyleSheetMutation: (data, styleSheet) => {\n            if (data.source === IncrementalSource.StyleSheetRule)\n              this.applyStyleSheetRule(data, styleSheet);\n            else if (data.source === IncrementalSource.StyleDeclaration)\n              this.applyStyleDeclaration(data, styleSheet);\n          },\n          afterAppend: (node, id) => {\n            for (const plugin of this.config.plugins || []) {\n              if (plugin.onBuild) plugin.onBuild(node, { id, replayer: this });\n            }\n          }\n        };\n        const iframeDoc = getIFrameContentDocument(this.iframe);\n        if (iframeDoc)\n          try {\n            diff(\n              iframeDoc,\n              this.virtualDom,\n              replayerHandler,\n              this.virtualDom.mirror\n            );\n          } catch (e2) {\n            console.warn(e2);\n          }\n        this.virtualDom.destroyTree();\n        this.usingVirtualDom = false;\n        if (Object.keys(this.legacy_missingNodeRetryMap).length) {\n          for (const key in this.legacy_missingNodeRetryMap) {\n            try {\n              const value = this.legacy_missingNodeRetryMap[key];\n              const realNode = createOrGetNode(\n                value.node,\n                this.mirror,\n                this.virtualDom.mirror\n              );\n              diff(\n                realNode,\n                value.node,\n                replayerHandler,\n                this.virtualDom.mirror\n              );\n              value.node = realNode;\n            } catch (error) {\n              this.warn(error);\n            }\n          }\n        }\n        this.constructedStyleMutations.forEach((data) => {\n          this.applyStyleSheetMutation(data);\n        });\n        this.constructedStyleMutations = [];\n        this.adoptedStyleSheets.forEach((data) => {\n          this.applyAdoptedStyleSheet(data);\n        });\n        this.adoptedStyleSheets = [];\n      }\n      for (const [\n        pointerId,\n        { pointerPosition, touchActive }\n      ] of Object.entries(this.pointers)) {\n        const id = parseInt(pointerId);\n        const pointer = this.pointers[id];\n        if (pointerPosition) {\n          this.moveAndHover(\n            pointerPosition.x,\n            pointerPosition.y,\n            pointerPosition.id,\n            true,\n            pointerPosition.debugData,\n            id\n          );\n          pointer.pointerPosition = null;\n        }\n        if (touchActive === true) {\n          pointer.pointerEl.classList.add(\"touch-active\");\n        } else if (touchActive === false) {\n          pointer.pointerEl.classList.remove(\"touch-active\");\n        }\n        pointer.touchActive = null;\n      }\n      if (this.lastMouseDownEvent) {\n        const [target, event] = this.lastMouseDownEvent;\n        target.dispatchEvent(event);\n      }\n      this.lastMouseDownEvent = null;\n      if (this.lastSelectionData) {\n        this.applySelection(this.lastSelectionData);\n        this.lastSelectionData = null;\n      }\n    });\n    this.emitter.on(ReplayerEvents.PlayBack, () => {\n      this.firstFullSnapshot = null;\n      this.mirror.reset();\n      this.styleMirror.reset();\n    });\n    const timer = new Timer([], {\n      speed: this.config.speed\n    });\n    this.service = createPlayerService(\n      {\n        events: events.map((e2) => {\n          if (config && config.unpackFn) {\n            return config.unpackFn(e2);\n          }\n          return e2;\n        }).sort((a1, a2) => a1.timestamp - a2.timestamp),\n        timer,\n        timeOffset: 0,\n        baselineTime: 0,\n        lastPlayedEvent: null\n      },\n      {\n        getCastFn: this.getCastFn,\n        applyEventsSynchronously: this.applyEventsSynchronously,\n        emitter: this.emitter\n      }\n    );\n    this.service.start();\n    this.service.subscribe((state) => {\n      this.emitter.emit(ReplayerEvents.StateChange, {\n        player: state\n      });\n    });\n    this.speedService = createSpeedService({\n      normalSpeed: -1,\n      timer\n    });\n    this.speedService.start();\n    this.speedService.subscribe((state) => {\n      this.emitter.emit(ReplayerEvents.StateChange, {\n        speed: state\n      });\n    });\n    const firstMeta = this.service.state.context.events.find(\n      (e2) => e2.type === EventType.Meta\n    );\n    const firstFullsnapshot = this.service.state.context.events.find(\n      (e2) => e2.type === EventType.FullSnapshot\n    );\n    if (firstMeta) {\n      const { width, height } = firstMeta.data;\n      setTimeout$1(() => {\n        this.emitter.emit(ReplayerEvents.Resize, {\n          width,\n          height\n        });\n      }, 0);\n    }\n    if (firstFullsnapshot) {\n      setTimeout$1(() => {\n        if (this.firstFullSnapshot) {\n          return;\n        }\n        this.firstFullSnapshot = firstFullsnapshot;\n        this.rebuildFullSnapshot(\n          firstFullsnapshot\n        );\n        this.iframe.contentWindow?.scrollTo(\n          firstFullsnapshot.data.initialOffset\n        );\n      }, 1);\n    }\n  }\n  get timer() {\n    return this.service.state.context.timer;\n  }\n  createPointer(pointerId, event) {\n    const mouseTail = document.createElement(\"canvas\");\n    mouseTail.classList.add(\"replayer-mouse-tail\");\n    mouseTail.width = Number.parseFloat(this.iframe.width);\n    mouseTail.height = Number.parseFloat(this.iframe.height);\n    this.wrapper.insertBefore(mouseTail, this.iframe);\n    mouseTail.style.display = this.config.mouseTail === false ? \"none\" : \"inherit\";\n    const newMouse = document.createElement(\"div\");\n    newMouse.classList.add(\"replayer-mouse\");\n    this.pointers[pointerId] = {\n      touchActive: null,\n      pointerEl: newMouse,\n      tailPositions: [],\n      pointerPosition: null,\n      mouseTail\n    };\n    if (indicatesTouchDevice(event)) {\n      newMouse.classList.add(\"touch-device\");\n    }\n    this.wrapper.appendChild(newMouse);\n  }\n  on(event, handler) {\n    this.emitter.on(event, handler);\n    return this;\n  }\n  off(event, handler) {\n    this.emitter.off(event, handler);\n    return this;\n  }\n  setConfig(config) {\n    Object.keys(config).forEach((key) => {\n      config[key];\n      this.config[key] = config[key];\n    });\n    if (!this.config.skipInactive) {\n      this.backToNormal();\n    }\n    if (typeof config.speed !== \"undefined\") {\n      this.speedService.send({\n        type: \"SET_SPEED\",\n        payload: {\n          speed: config.speed\n        }\n      });\n    }\n    if (typeof config.mouseTail !== \"undefined\") {\n      if (config.mouseTail === false) {\n        for (const { mouseTail } of Object.values(this.pointers)) {\n          if (mouseTail) {\n            mouseTail.style.display = \"none\";\n          }\n        }\n      } else {\n        for (let { mouseTail } of Object.values(this.pointers)) {\n          if (!mouseTail) {\n            mouseTail = document.createElement(\"canvas\");\n            mouseTail.width = Number.parseFloat(this.iframe.width);\n            mouseTail.height = Number.parseFloat(this.iframe.height);\n            mouseTail.classList.add(\"replayer-mouse-tail\");\n            this.wrapper.insertBefore(mouseTail, this.iframe);\n          }\n          mouseTail.style.display = \"inherit\";\n        }\n      }\n    }\n  }\n  getMetaData() {\n    const firstEvent = this.service.state.context.events[0];\n    const lastEvent = this.service.state.context.events[this.service.state.context.events.length - 1];\n    return {\n      startTime: firstEvent.timestamp,\n      endTime: lastEvent.timestamp,\n      totalTime: lastEvent.timestamp - firstEvent.timestamp\n    };\n  }\n  getCurrentTime() {\n    return this.timer.timeOffset + this.getTimeOffset();\n  }\n  getTimeOffset() {\n    const { baselineTime, events } = this.service.state.context;\n    return baselineTime - events[0].timestamp;\n  }\n  getMirror() {\n    return this.mirror;\n  }\n  /**\n   * This API was designed to be used as play at any time offset.\n   * Since we minimized the data collected from recorder, we do not\n   * have the ability of undo an event.\n   * So the implementation of play at any time offset will always iterate\n   * all of the events, cast event before the offset synchronously\n   * and cast event after the offset asynchronously with timer.\n   * @param timeOffset - number\n   */\n  play(timeOffset = 0) {\n    if (this.service.state.matches(\"paused\")) {\n      this.service.send({ type: \"PLAY\", payload: { timeOffset } });\n    } else {\n      this.service.send({ type: \"PAUSE\" });\n      this.service.send({ type: \"PLAY\", payload: { timeOffset } });\n    }\n    const iframeDoc = getIFrameContentDocument(this.iframe);\n    iframeDoc?.getElementsByTagName(\"html\")[0]?.classList.remove(\"rrweb-paused\");\n    this.emitter.emit(ReplayerEvents.Start);\n  }\n  pause(timeOffset) {\n    if (timeOffset === void 0 && this.service.state.matches(\"playing\")) {\n      this.service.send({ type: \"PAUSE\" });\n    }\n    if (typeof timeOffset === \"number\") {\n      this.play(timeOffset);\n      this.service.send({ type: \"PAUSE\" });\n    }\n    const iframeDoc = getIFrameContentDocument(this.iframe);\n    iframeDoc?.getElementsByTagName(\"html\")[0]?.classList.add(\"rrweb-paused\");\n    this.emitter.emit(ReplayerEvents.Pause);\n  }\n  resume(timeOffset = 0) {\n    this.warn(\n      `The 'resume' was deprecated in 1.0. Please use 'play' method which has the same interface.`\n    );\n    this.play(timeOffset);\n    this.emitter.emit(ReplayerEvents.Resume);\n  }\n  /**\n   * Totally destroy this replayer and please be careful that this operation is irreversible.\n   * Memory occupation can be released by removing all references to this replayer.\n   */\n  destroy() {\n    this.pause();\n    this.config.root.removeChild(this.wrapper);\n    this.emitter.emit(ReplayerEvents.Destroy);\n  }\n  startLive(baselineTime) {\n    this.service.send({ type: \"TO_LIVE\", payload: { baselineTime } });\n  }\n  addEvent(rawEvent) {\n    const event = this.config.unpackFn ? this.config.unpackFn(rawEvent) : rawEvent;\n    void Promise.resolve().then(\n      () => this.service.send({ type: \"ADD_EVENT\", payload: { event } })\n    );\n  }\n  enableInteract() {\n    this.iframe.setAttribute(\"scrolling\", \"auto\");\n    this.iframe.style.pointerEvents = \"auto\";\n  }\n  disableInteract() {\n    this.iframe.setAttribute(\"scrolling\", \"no\");\n    this.iframe.style.pointerEvents = \"none\";\n  }\n  /**\n   * Empties the replayer's cache and reclaims memory.\n   * The replayer will use this cache to speed up the playback.\n   */\n  resetCache() {\n    this.cache = createCache();\n  }\n  setupDom() {\n    this.wrapper = document.createElement(\"div\");\n    this.wrapper.classList.add(\"replayer-wrapper\");\n    this.config.root.appendChild(this.wrapper);\n    this.iframe = document.createElement(\"iframe\");\n    const attributes2 = [\"allow-same-origin\"];\n    if (this.config.UNSAFE_replayCanvas) {\n      attributes2.push(\"allow-scripts\");\n    }\n    this.iframe.style.display = \"none\";\n    this.iframe.setAttribute(\"sandbox\", attributes2.join(\" \"));\n    this.disableInteract();\n    this.wrapper.appendChild(this.iframe);\n    const iframeDoc = getIFrameContentDocument(this.iframe);\n    const iframeWindow = getIFrameContentWindow(this.iframe);\n    if (iframeWindow && iframeDoc) {\n      polyfill(iframeWindow, iframeDoc);\n      polyfill$1(iframeWindow);\n    }\n  }\n  rebuildFullSnapshot(event, isSync = false) {\n    const iframeDoc = getIFrameContentDocument(this.iframe);\n    if (!iframeDoc) {\n      return this.warn(\"Looks like your replayer has been destroyed.\");\n    }\n    if (Object.keys(this.legacy_missingNodeRetryMap).length) {\n      this.warn(\n        \"Found unresolved missing node map\",\n        this.legacy_missingNodeRetryMap\n      );\n    }\n    this.legacy_missingNodeRetryMap = {};\n    const collected = [];\n    const afterAppend = (builtNode, id) => {\n      this.collectIframeAndAttachDocument(collected, builtNode);\n      for (const plugin of this.config.plugins || []) {\n        if (plugin.onBuild)\n          plugin.onBuild(builtNode, {\n            id,\n            replayer: this\n          });\n      }\n    };\n    if (this.usingVirtualDom) {\n      this.virtualDom.destroyTree();\n      this.usingVirtualDom = false;\n    }\n    this.mirror.reset();\n    rebuild(event.data.node, {\n      doc: iframeDoc,\n      afterAppend,\n      cache: this.cache,\n      mirror: this.mirror\n    });\n    afterAppend(iframeDoc, event.data.node.id);\n    for (const { mutationInQueue, builtNode } of collected) {\n      this.attachDocumentToIframe(mutationInQueue, builtNode);\n      this.newDocumentQueue = this.newDocumentQueue.filter(\n        (m) => m !== mutationInQueue\n      );\n    }\n    const { documentElement, head } = iframeDoc;\n    this.insertStyleRules(documentElement, head);\n    if (!this.service.state.matches(\"playing\")) {\n      const iframeHtmlElement = iframeDoc.getElementsByTagName(\"html\")[0];\n      iframeHtmlElement && iframeHtmlElement.classList.add(\"rrweb-paused\");\n    }\n    this.emitter.emit(ReplayerEvents.FullsnapshotRebuilded, event);\n    if (!isSync) {\n      this.waitForStylesheetLoad();\n    }\n    if (this.config.UNSAFE_replayCanvas) {\n      void this.preloadAllImages();\n    }\n  }\n  insertStyleRules(documentElement, head) {\n    const injectStylesRules = rules(\n      this.config.blockClass\n    ).concat(this.config.insertStyleRules);\n    if (this.config.pauseAnimation) {\n      injectStylesRules.push(\n        \"html.rrweb-paused *, html.rrweb-paused *:before, html.rrweb-paused *:after { animation-play-state: paused !important; }\"\n      );\n    }\n    if (this.usingVirtualDom) {\n      const styleEl = this.virtualDom.createElement(\"style\");\n      this.virtualDom.mirror.add(\n        styleEl,\n        getDefaultSN(styleEl, this.virtualDom.unserializedId)\n      );\n      documentElement.insertBefore(styleEl, head);\n      styleEl.rules.push({\n        source: IncrementalSource.StyleSheetRule,\n        adds: injectStylesRules.map((cssText, index) => ({\n          rule: cssText,\n          index\n        }))\n      });\n    } else {\n      const styleEl = document.createElement(\"style\");\n      documentElement.insertBefore(\n        styleEl,\n        head\n      );\n      for (let idx = 0; idx < injectStylesRules.length; idx++) {\n        styleEl.sheet?.insertRule(injectStylesRules[idx], idx);\n      }\n    }\n  }\n  attachDocumentToIframe(mutation, iframeEl) {\n    const mirror2 = this.usingVirtualDom ? this.virtualDom.mirror : this.mirror;\n    const iframeContentDoc = getIFrameContentDocument(\n      iframeEl\n    );\n    const collected = [];\n    const afterAppend = (builtNode, id) => {\n      this.collectIframeAndAttachDocument(collected, builtNode);\n      const sn = mirror2.getMeta(builtNode);\n      if (sn?.type === NodeType$2.Element && sn?.tagName.toUpperCase() === \"HTML\" && iframeContentDoc) {\n        const { documentElement, head } = iframeContentDoc;\n        this.insertStyleRules(\n          documentElement,\n          head\n        );\n      }\n      if (this.usingVirtualDom) return;\n      for (const plugin of this.config.plugins || []) {\n        if (plugin.onBuild)\n          plugin.onBuild(builtNode, {\n            id,\n            replayer: this\n          });\n      }\n    };\n    buildNodeWithSN(mutation.node, {\n      doc: iframeContentDoc,\n      mirror: mirror2,\n      hackCss: true,\n      skipChild: false,\n      afterAppend,\n      cache: this.cache\n    });\n    afterAppend(iframeContentDoc, mutation.node.id);\n    for (const { mutationInQueue, builtNode } of collected) {\n      this.attachDocumentToIframe(mutationInQueue, builtNode);\n      this.newDocumentQueue = this.newDocumentQueue.filter(\n        (m) => m !== mutationInQueue\n      );\n    }\n  }\n  collectIframeAndAttachDocument(collected, builtNode) {\n    if (isSerializedIframe(builtNode, this.mirror)) {\n      const mutationInQueue = this.newDocumentQueue.find(\n        (m) => m.parentId === this.mirror.getId(builtNode)\n      );\n      if (mutationInQueue) {\n        collected.push({\n          mutationInQueue,\n          builtNode\n        });\n      }\n    }\n  }\n  /**\n   * pause when loading style sheet, resume when loaded all timeout exceed\n   */\n  waitForStylesheetLoad() {\n    const iframeDoc = getIFrameContentDocument(this.iframe);\n    const head = iframeDoc?.head;\n    if (head) {\n      const unloadSheets = /* @__PURE__ */ new Set();\n      let timer;\n      let beforeLoadState = this.service.state;\n      const stateHandler = () => {\n        beforeLoadState = this.service.state;\n      };\n      this.emitter.on(ReplayerEvents.Start, stateHandler);\n      this.emitter.on(ReplayerEvents.Pause, stateHandler);\n      const unsubscribe = () => {\n        this.emitter.off(ReplayerEvents.Start, stateHandler);\n        this.emitter.off(ReplayerEvents.Pause, stateHandler);\n      };\n      head.querySelectorAll('link[rel=\"stylesheet\"]').forEach((css) => {\n        if (!css.sheet) {\n          unloadSheets.add(css);\n          css.addEventListener(\"load\", () => {\n            unloadSheets.delete(css);\n            if (unloadSheets.size === 0 && timer !== -1) {\n              if (beforeLoadState.matches(\"playing\")) {\n                this.play(this.getCurrentTime());\n              }\n              this.emitter.emit(ReplayerEvents.LoadStylesheetEnd);\n              if (timer) {\n                clearTimeout(timer);\n              }\n              unsubscribe();\n            }\n          });\n        }\n      });\n      if (unloadSheets.size > 0) {\n        this.service.send({ type: \"PAUSE\" });\n        this.emitter.emit(ReplayerEvents.LoadStylesheetStart);\n        timer = setTimeout$1(() => {\n          if (beforeLoadState.matches(\"playing\")) {\n            this.play(this.getCurrentTime());\n          }\n          timer = -1;\n          unsubscribe();\n        }, this.config.loadTimeout);\n      }\n    }\n  }\n  /**\n   * pause when there are some canvas drawImage args need to be loaded\n   */\n  async preloadAllImages() {\n    const promises = [];\n    for (const event of this.service.state.context.events) {\n      if (event.type === EventType.IncrementalSnapshot && event.data.source === IncrementalSource.CanvasMutation) {\n        promises.push(\n          this.deserializeAndPreloadCanvasEvents(event.data, event)\n        );\n        const commands = \"commands\" in event.data ? event.data.commands : [event.data];\n        commands.forEach((c2) => {\n          this.preloadImages(c2, event);\n        });\n      }\n    }\n    return Promise.all(promises);\n  }\n  preloadImages(data, event) {\n    if (data.property === \"drawImage\" && typeof data.args[0] === \"string\" && !this.imageMap.has(event)) {\n      const canvas = document.createElement(\"canvas\");\n      const ctx = canvas.getContext(\"2d\");\n      const imgd = ctx?.createImageData(canvas.width, canvas.height);\n      ctx?.putImageData(imgd, 0, 0);\n    }\n  }\n  async deserializeAndPreloadCanvasEvents(data, event) {\n    if (!this.canvasEventMap.has(event)) {\n      const status = {\n        isUnchanged: true\n      };\n      if (\"commands\" in data) {\n        const commands = await Promise.all(\n          data.commands.map(async (c2) => {\n            const args = await Promise.all(\n              c2.args.map(deserializeArg(this.imageMap, null, status))\n            );\n            return { ...c2, args };\n          })\n        );\n        if (status.isUnchanged === false)\n          this.canvasEventMap.set(event, { ...data, commands });\n      } else {\n        const args = await Promise.all(\n          data.args.map(deserializeArg(this.imageMap, null, status))\n        );\n        if (status.isUnchanged === false)\n          this.canvasEventMap.set(event, { ...data, args });\n      }\n    }\n  }\n  applyIncremental(e2, isSync) {\n    const { data: d } = e2;\n    switch (d.source) {\n      case IncrementalSource.Mutation: {\n        try {\n          this.applyMutation(d, isSync);\n        } catch (error) {\n          this.warn(`Exception in mutation ${error.message || error}`, d);\n        }\n        break;\n      }\n      case IncrementalSource.Drag:\n      case IncrementalSource.TouchMove:\n      case IncrementalSource.MouseMove: {\n        const pointerId = getPointerId(d);\n        if (!this.pointers[pointerId]) {\n          this.createPointer(pointerId, e2);\n        }\n        const pointer = this.pointers[pointerId];\n        if (isSync) {\n          const lastPosition = d.positions[d.positions.length - 1];\n          pointer.pointerPosition = {\n            x: lastPosition.x,\n            y: lastPosition.y,\n            id: lastPosition.id,\n            debugData: d\n          };\n        } else {\n          d.positions.forEach((p) => {\n            const action = {\n              doAction: () => {\n                this.moveAndHover(p.x, p.y, p.id, isSync, d, pointerId);\n              },\n              delay: p.timeOffset + e2.timestamp - this.service.state.context.baselineTime\n            };\n            this.timer.addAction(action);\n          });\n          this.timer.addAction({\n            doAction() {\n            },\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            delay: e2.delay - d.positions[0]?.timeOffset\n          });\n        }\n        break;\n      }\n      case IncrementalSource.MouseInteraction: {\n        const pointerId = getPointerId(d);\n        if (!this.pointers[pointerId]) {\n          this.createPointer(pointerId, e2);\n        }\n        const pointer = this.pointers[pointerId];\n        if (d.id === -1) {\n          break;\n        }\n        const event = new Event(toLowerCase(MouseInteractions[d.type]));\n        const target = this.mirror.getNode(d.id);\n        if (!target) {\n          return this.debugNodeNotFound(d, d.id);\n        }\n        this.emitter.emit(ReplayerEvents.MouseInteraction, {\n          type: d.type,\n          target\n        });\n        const { triggerFocus } = this.config;\n        switch (d.type) {\n          case MouseInteractions.Blur:\n            if (\"blur\" in target) {\n              target.blur();\n            }\n            break;\n          case MouseInteractions.Focus:\n            if (triggerFocus && target.focus) {\n              target.focus({\n                preventScroll: true\n              });\n            }\n            break;\n          case MouseInteractions.Click:\n          case MouseInteractions.TouchStart:\n          case MouseInteractions.TouchEnd:\n          case MouseInteractions.MouseDown:\n          case MouseInteractions.MouseUp:\n            if (isSync) {\n              if (d.type === MouseInteractions.TouchStart) {\n                pointer.touchActive = true;\n                Object.values(this.pointers).forEach((p) => {\n                  if (p !== pointer && !p.touchActive) {\n                    p.touchActive = false;\n                  }\n                });\n              } else if (d.type === MouseInteractions.TouchEnd) {\n                pointer.touchActive = false;\n                pointer.pointerEl.remove();\n                if (pointer.mouseTail) {\n                  pointer.mouseTail.remove();\n                }\n                delete this.pointers[pointerId];\n              }\n              if (d.type === MouseInteractions.MouseDown) {\n                this.lastMouseDownEvent = [target, event];\n              } else if (d.type === MouseInteractions.MouseUp) {\n                this.lastMouseDownEvent = null;\n              }\n              pointer.pointerPosition = {\n                x: d.x || 0,\n                y: d.y || 0,\n                id: d.id,\n                debugData: d\n              };\n            } else {\n              if (d.type === MouseInteractions.TouchStart) {\n                pointer.tailPositions.length = 0;\n              }\n              this.moveAndHover(d.x || 0, d.y || 0, d.id, isSync, d, pointerId);\n              if (d.type === MouseInteractions.Click) {\n                pointer.pointerEl.classList.remove(\"active\");\n                void pointer.pointerEl.offsetWidth;\n                pointer.pointerEl.classList.add(\"active\");\n              } else if (d.type === MouseInteractions.TouchStart) {\n                void pointer.pointerEl.offsetWidth;\n                pointer.pointerEl.classList.add(\"touch-active\");\n              } else if (d.type === MouseInteractions.TouchEnd) {\n                pointer.pointerEl.remove();\n                if (pointer.mouseTail) {\n                  pointer.mouseTail.remove();\n                }\n                delete this.pointers[pointerId];\n              } else {\n                target.dispatchEvent(event);\n              }\n            }\n            break;\n          case MouseInteractions.TouchCancel:\n            if (isSync) {\n              pointer.touchActive = false;\n            } else {\n              pointer.pointerEl.classList.remove(\"touch-active\");\n            }\n            break;\n          default:\n            target.dispatchEvent(event);\n        }\n        break;\n      }\n      case IncrementalSource.Scroll: {\n        if (d.id === -1) {\n          break;\n        }\n        if (this.usingVirtualDom) {\n          const target = this.virtualDom.mirror.getNode(d.id);\n          if (!target) {\n            return this.debugNodeNotFound(d, d.id);\n          }\n          target.scrollData = d;\n          break;\n        }\n        this.applyScroll(d, isSync);\n        break;\n      }\n      case IncrementalSource.ViewportResize:\n        this.emitter.emit(ReplayerEvents.Resize, {\n          width: d.width,\n          height: d.height\n        });\n        break;\n      case IncrementalSource.Input: {\n        if (d.id === -1) {\n          break;\n        }\n        if (this.usingVirtualDom) {\n          const target = this.virtualDom.mirror.getNode(d.id);\n          if (!target) {\n            return this.debugNodeNotFound(d, d.id);\n          }\n          target.inputData = d;\n          break;\n        }\n        this.applyInput(d);\n        break;\n      }\n      case IncrementalSource.MediaInteraction: {\n        const target = this.usingVirtualDom ? this.virtualDom.mirror.getNode(d.id) : this.mirror.getNode(d.id);\n        if (!target) {\n          return this.debugNodeNotFound(d, d.id);\n        }\n        const mediaEl = target;\n        try {\n          if (d.currentTime !== void 0) {\n            mediaEl.currentTime = d.currentTime;\n          }\n          if (d.volume !== void 0) {\n            mediaEl.volume = d.volume;\n          }\n          if (d.muted !== void 0) {\n            mediaEl.muted = d.muted;\n          }\n          if (d.type === MediaInteractions.Pause) {\n            mediaEl.pause();\n          }\n          if (d.type === MediaInteractions.Play) {\n            void mediaEl.play();\n          }\n          if (d.type === MediaInteractions.RateChange) {\n            mediaEl.playbackRate = d.playbackRate;\n          }\n        } catch (error) {\n          this.warn(\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/restrict-template-expressions\n            `Failed to replay media interactions: ${error.message || error}`\n          );\n        }\n        break;\n      }\n      case IncrementalSource.StyleSheetRule:\n      case IncrementalSource.StyleDeclaration: {\n        if (this.usingVirtualDom) {\n          if (d.styleId) this.constructedStyleMutations.push(d);\n          else if (d.id)\n            this.virtualDom.mirror.getNode(d.id)?.rules?.push(d);\n        } else this.applyStyleSheetMutation(d);\n        break;\n      }\n      case IncrementalSource.CanvasMutation: {\n        if (!this.config.UNSAFE_replayCanvas) {\n          return;\n        }\n        if (this.usingVirtualDom) {\n          const target = this.virtualDom.mirror.getNode(\n            d.id\n          );\n          if (!target) {\n            return this.debugNodeNotFound(d, d.id);\n          }\n          target.canvasMutations.push({\n            event: e2,\n            mutation: d\n          });\n        } else {\n          const target = this.mirror.getNode(d.id);\n          if (!target) {\n            return this.debugNodeNotFound(d, d.id);\n          }\n          void canvasMutation({\n            event: e2,\n            mutation: d,\n            target,\n            imageMap: this.imageMap,\n            canvasEventMap: this.canvasEventMap,\n            errorHandler: this.warnCanvasMutationFailed.bind(this)\n          });\n        }\n        break;\n      }\n      case IncrementalSource.Font: {\n        try {\n          const fontFace = new FontFace(\n            d.family,\n            d.buffer ? new Uint8Array(JSON.parse(d.fontSource)) : d.fontSource,\n            d.descriptors\n          );\n          getIFrameContentDocument(this.iframe)?.fonts.add(fontFace);\n        } catch (error) {\n          this.warn(error);\n        }\n        break;\n      }\n      case IncrementalSource.Selection: {\n        if (isSync) {\n          this.lastSelectionData = d;\n          break;\n        }\n        this.applySelection(d);\n        break;\n      }\n      case IncrementalSource.AdoptedStyleSheet: {\n        if (this.usingVirtualDom) this.adoptedStyleSheets.push(d);\n        else this.applyAdoptedStyleSheet(d);\n        break;\n      }\n    }\n  }\n  applyMutation(d, isSync) {\n    if (this.config.useVirtualDom && !this.usingVirtualDom && isSync) {\n      this.usingVirtualDom = true;\n      const iframeDoc = getIFrameContentDocument(this.iframe);\n      if (iframeDoc) {\n        buildFromDom(iframeDoc, this.mirror, this.virtualDom);\n      }\n      if (Object.keys(this.legacy_missingNodeRetryMap).length) {\n        for (const key in this.legacy_missingNodeRetryMap) {\n          try {\n            const value = this.legacy_missingNodeRetryMap[key];\n            const virtualNode = buildFromNode(\n              value.node,\n              this.virtualDom,\n              this.mirror\n            );\n            if (virtualNode) value.node = virtualNode;\n          } catch (error) {\n            this.warn(error);\n          }\n        }\n      }\n    }\n    const mirror2 = this.usingVirtualDom ? this.virtualDom.mirror : this.mirror;\n    d.removes = d.removes.filter((mutation) => {\n      if (!mirror2.getNode(mutation.id)) {\n        this.warnNodeNotFound(d, mutation.id);\n        return false;\n      }\n      return true;\n    });\n    d.removes.forEach((mutation) => {\n      const target = mirror2.getNode(mutation.id);\n      if (!target) {\n        return;\n      }\n      let parent = mirror2.getNode(\n        mutation.parentId\n      );\n      if (!parent) {\n        return this.warnNodeNotFound(d, mutation.parentId);\n      }\n      if (mutation.isShadow && hasShadowRoot(parent)) {\n        parent = parent.shadowRoot;\n      }\n      mirror2.removeNodeFromMap(target);\n      if (parent)\n        try {\n          parent.removeChild(target);\n          if (this.usingVirtualDom && target.nodeName === \"#text\" && parent.nodeName === \"STYLE\" && parent.rules?.length > 0)\n            parent.rules = [];\n        } catch (error) {\n          if (error instanceof DOMException) {\n            this.warn(\n              \"parent could not remove child in mutation\",\n              parent,\n              target,\n              d\n            );\n          } else {\n            throw error;\n          }\n        }\n    });\n    const legacy_missingNodeMap = {\n      ...this.legacy_missingNodeRetryMap\n    };\n    const queue = [];\n    const nextNotInDOM = (mutation) => {\n      let next = null;\n      if (mutation.nextId) {\n        next = mirror2.getNode(mutation.nextId);\n      }\n      if (mutation.nextId !== null && mutation.nextId !== void 0 && mutation.nextId !== -1 && !next) {\n        return true;\n      }\n      return false;\n    };\n    const appendNode = (mutation) => {\n      const iframeDoc = getIFrameContentDocument(this.iframe);\n      if (!iframeDoc) {\n        return this.warn(\"Looks like your replayer has been destroyed.\");\n      }\n      let parent = mirror2.getNode(\n        mutation.parentId\n      );\n      if (!parent) {\n        if (mutation.node.type === NodeType$2.Document) {\n          return this.newDocumentQueue.push(mutation);\n        }\n        return queue.push(mutation);\n      }\n      if (mutation.node.isShadow) {\n        if (!hasShadowRoot(parent)) {\n          parent.attachShadow({ mode: \"open\" });\n          parent = parent.shadowRoot;\n        } else parent = parent.shadowRoot;\n      }\n      let previous = null;\n      let next = null;\n      if (mutation.previousId) {\n        previous = mirror2.getNode(mutation.previousId);\n      }\n      if (mutation.nextId) {\n        next = mirror2.getNode(mutation.nextId);\n      }\n      if (nextNotInDOM(mutation)) {\n        return queue.push(mutation);\n      }\n      if (mutation.node.rootId && !mirror2.getNode(mutation.node.rootId)) {\n        return;\n      }\n      const targetDoc = mutation.node.rootId ? mirror2.getNode(mutation.node.rootId) : this.usingVirtualDom ? this.virtualDom : iframeDoc;\n      if (isSerializedIframe(parent, mirror2)) {\n        this.attachDocumentToIframe(\n          mutation,\n          parent\n        );\n        return;\n      }\n      const afterAppend = (node, id) => {\n        if (this.usingVirtualDom) return;\n        for (const plugin of this.config.plugins || []) {\n          if (plugin.onBuild) plugin.onBuild(node, { id, replayer: this });\n        }\n      };\n      const target = buildNodeWithSN(mutation.node, {\n        doc: targetDoc,\n        // can be Document or RRDocument\n        mirror: mirror2,\n        // can be this.mirror or virtualDom.mirror\n        skipChild: true,\n        hackCss: true,\n        cache: this.cache,\n        /**\n         * caveat: `afterAppend` only gets called on child nodes of target\n         * we have to call it again below when this target was added to the DOM\n         */\n        afterAppend\n      });\n      if (mutation.previousId === -1 || mutation.nextId === -1) {\n        legacy_missingNodeMap[mutation.node.id] = {\n          node: target,\n          mutation\n        };\n        return;\n      }\n      const parentSn = mirror2.getMeta(parent);\n      if (parentSn && parentSn.type === NodeType$2.Element && parentSn.tagName === \"textarea\" && mutation.node.type === NodeType$2.Text) {\n        const childNodeArray = Array.isArray(parent.childNodes) ? parent.childNodes : Array.from(parent.childNodes);\n        for (const c2 of childNodeArray) {\n          if (c2.nodeType === parent.TEXT_NODE) {\n            parent.removeChild(c2);\n          }\n        }\n      } else if (parentSn?.type === NodeType$2.Document) {\n        const parentDoc = parent;\n        if (mutation.node.type === NodeType$2.DocumentType && parentDoc.childNodes[0]?.nodeType === Node.DOCUMENT_TYPE_NODE)\n          parentDoc.removeChild(parentDoc.childNodes[0]);\n        if (target.nodeName === \"HTML\" && parentDoc.documentElement)\n          parentDoc.removeChild(\n            parentDoc.documentElement\n          );\n      }\n      if (previous && previous.nextSibling && previous.nextSibling.parentNode) {\n        parent.insertBefore(\n          target,\n          previous.nextSibling\n        );\n      } else if (next && next.parentNode) {\n        parent.contains(next) ? parent.insertBefore(target, next) : parent.insertBefore(target, null);\n      } else {\n        parent.appendChild(target);\n      }\n      afterAppend(target, mutation.node.id);\n      if (this.usingVirtualDom && target.nodeName === \"#text\" && parent.nodeName === \"STYLE\" && parent.rules?.length > 0)\n        parent.rules = [];\n      if (isSerializedIframe(target, this.mirror)) {\n        const targetId = this.mirror.getId(target);\n        const mutationInQueue = this.newDocumentQueue.find(\n          (m) => m.parentId === targetId\n        );\n        if (mutationInQueue) {\n          this.attachDocumentToIframe(\n            mutationInQueue,\n            target\n          );\n          this.newDocumentQueue = this.newDocumentQueue.filter(\n            (m) => m !== mutationInQueue\n          );\n        }\n      }\n      if (mutation.previousId || mutation.nextId) {\n        this.legacy_resolveMissingNode(\n          legacy_missingNodeMap,\n          parent,\n          target,\n          mutation\n        );\n      }\n    };\n    d.adds.forEach((mutation) => {\n      appendNode(mutation);\n    });\n    const startTime = Date.now();\n    while (queue.length) {\n      const resolveTrees = queueToResolveTrees(queue);\n      queue.length = 0;\n      if (Date.now() - startTime > 500) {\n        this.warn(\n          \"Timeout in the loop, please check the resolve tree data:\",\n          resolveTrees\n        );\n        break;\n      }\n      for (const tree of resolveTrees) {\n        const parent = mirror2.getNode(tree.value.parentId);\n        if (!parent) {\n          this.debug(\n            \"Drop resolve tree since there is no parent for the root node.\",\n            tree\n          );\n        } else {\n          iterateResolveTree(tree, (mutation) => {\n            appendNode(mutation);\n          });\n        }\n      }\n    }\n    if (Object.keys(legacy_missingNodeMap).length) {\n      Object.assign(this.legacy_missingNodeRetryMap, legacy_missingNodeMap);\n    }\n    uniqueTextMutations(d.texts).forEach((mutation) => {\n      const target = mirror2.getNode(mutation.id);\n      if (!target) {\n        if (d.removes.find((r2) => r2.id === mutation.id)) {\n          return;\n        }\n        return this.warnNodeNotFound(d, mutation.id);\n      }\n      target.textContent = mutation.value;\n      if (this.usingVirtualDom) {\n        const parent = target.parentNode;\n        if (parent?.rules?.length > 0) parent.rules = [];\n      }\n    });\n    d.attributes.forEach((mutation) => {\n      const target = mirror2.getNode(mutation.id);\n      if (!target) {\n        if (d.removes.find((r2) => r2.id === mutation.id)) {\n          return;\n        }\n        return this.warnNodeNotFound(d, mutation.id);\n      }\n      for (const attributeName in mutation.attributes) {\n        if (typeof attributeName === \"string\") {\n          const value = mutation.attributes[attributeName];\n          if (value === null) {\n            target.removeAttribute(attributeName);\n          } else if (typeof value === \"string\") {\n            try {\n              if (attributeName === \"_cssText\" && (target.nodeName === \"LINK\" || target.nodeName === \"STYLE\")) {\n                try {\n                  const newSn = mirror2.getMeta(\n                    target\n                  );\n                  const newNode = buildNodeWithSN(\n                    {\n                      ...newSn,\n                      attributes: {\n                        ...newSn.attributes,\n                        ...mutation.attributes\n                      }\n                    },\n                    {\n                      doc: target.ownerDocument,\n                      // can be Document or RRDocument\n                      mirror: mirror2,\n                      skipChild: true,\n                      hackCss: true,\n                      cache: this.cache\n                    }\n                  );\n                  const siblingNode = target.nextSibling;\n                  const parentNode = target.parentNode;\n                  if (newNode && parentNode) {\n                    parentNode.removeChild(target);\n                    parentNode.insertBefore(\n                      newNode,\n                      siblingNode\n                    );\n                    mirror2.replace(mutation.id, newNode);\n                    break;\n                  }\n                } catch (e2) {\n                }\n              }\n              target.setAttribute(\n                attributeName,\n                value\n              );\n            } catch (error) {\n              this.warn(\n                \"An error occurred may due to the checkout feature.\",\n                error\n              );\n            }\n          } else if (attributeName === \"style\") {\n            const styleValues = value;\n            const targetEl = target;\n            for (const s2 in styleValues) {\n              if (styleValues[s2] === false) {\n                targetEl.style.removeProperty(s2);\n              } else if (styleValues[s2] instanceof Array) {\n                const svp = styleValues[s2];\n                targetEl.style.setProperty(s2, svp[0], svp[1]);\n              } else {\n                const svs = styleValues[s2];\n                targetEl.style.setProperty(s2, svs);\n              }\n            }\n          }\n        }\n      }\n    });\n  }\n  /**\n   * Apply the scroll data on real elements.\n   * If the replayer is in sync mode, smooth scroll behavior should be disabled.\n   * @param d - the scroll data\n   * @param isSync - whether the replayer is in sync mode(fast-forward)\n   */\n  applyScroll(d, isSync) {\n    const target = this.mirror.getNode(d.id);\n    if (!target) {\n      return this.debugNodeNotFound(d, d.id);\n    }\n    const sn = this.mirror.getMeta(target);\n    const iframeDoc = getIFrameContentDocument(this.iframe);\n    if (target === iframeDoc) {\n      this.iframe.contentWindow?.scrollTo({\n        top: d.y,\n        left: d.x,\n        behavior: isSync ? \"auto\" : \"smooth\"\n      });\n    } else if (sn?.type === NodeType$2.Document) {\n      target.defaultView?.scrollTo({\n        top: d.y,\n        left: d.x,\n        behavior: isSync ? \"auto\" : \"smooth\"\n      });\n    } else {\n      try {\n        target.scrollTo({\n          top: d.y,\n          left: d.x,\n          behavior: isSync ? \"auto\" : \"smooth\"\n        });\n      } catch (error) {\n      }\n    }\n  }\n  applyInput(d) {\n    const target = this.mirror.getNode(d.id);\n    if (!target) {\n      return this.debugNodeNotFound(d, d.id);\n    }\n    try {\n      target.checked = d.isChecked;\n      target.value = d.text;\n    } catch (error) {\n    }\n  }\n  applySelection(d) {\n    try {\n      const selectionSet = /* @__PURE__ */ new Set();\n      const ranges = d.ranges.map(({ start, startOffset, end, endOffset }) => {\n        const startContainer = this.mirror.getNode(start);\n        const endContainer = this.mirror.getNode(end);\n        if (!startContainer || !endContainer) return;\n        const result = new Range();\n        result.setStart(startContainer, startOffset);\n        result.setEnd(endContainer, endOffset);\n        const doc = startContainer.ownerDocument;\n        const selection = doc?.getSelection();\n        selection && selectionSet.add(selection);\n        return {\n          range: result,\n          selection\n        };\n      });\n      selectionSet.forEach((s2) => s2.removeAllRanges());\n      ranges.forEach((r2) => r2 && r2.selection?.addRange(r2.range));\n    } catch (error) {\n    }\n  }\n  applyStyleSheetMutation(data) {\n    let styleSheet = null;\n    if (data.styleId) styleSheet = this.styleMirror.getStyle(data.styleId);\n    else if (data.id)\n      styleSheet = this.mirror.getNode(data.id)?.sheet || null;\n    if (!styleSheet) return;\n    if (data.source === IncrementalSource.StyleSheetRule)\n      this.applyStyleSheetRule(data, styleSheet);\n    else if (data.source === IncrementalSource.StyleDeclaration)\n      this.applyStyleDeclaration(data, styleSheet);\n  }\n  applyStyleSheetRule(data, styleSheet) {\n    data.adds?.forEach(({ rule, index: nestedIndex }) => {\n      try {\n        if (Array.isArray(nestedIndex)) {\n          const { positions, index } = getPositionsAndIndex(nestedIndex);\n          const nestedRule = getNestedRule(styleSheet.cssRules, positions);\n          nestedRule.insertRule(rule, index);\n        } else {\n          const index = nestedIndex === void 0 ? void 0 : Math.min(nestedIndex, styleSheet.cssRules.length);\n          styleSheet?.insertRule(rule, index);\n        }\n      } catch (e2) {\n      }\n    });\n    data.removes?.forEach(({ index: nestedIndex }) => {\n      try {\n        if (Array.isArray(nestedIndex)) {\n          const { positions, index } = getPositionsAndIndex(nestedIndex);\n          const nestedRule = getNestedRule(styleSheet.cssRules, positions);\n          nestedRule.deleteRule(index || 0);\n        } else {\n          styleSheet?.deleteRule(nestedIndex);\n        }\n      } catch (e2) {\n      }\n    });\n    if (data.replace)\n      try {\n        void styleSheet.replace?.(data.replace);\n      } catch (e2) {\n      }\n    if (data.replaceSync)\n      try {\n        styleSheet.replaceSync?.(data.replaceSync);\n      } catch (e2) {\n      }\n  }\n  applyStyleDeclaration(data, styleSheet) {\n    if (data.set) {\n      const rule = getNestedRule(\n        styleSheet.rules,\n        data.index\n      );\n      rule && rule.style && rule.style.setProperty(\n        data.set.property,\n        data.set.value,\n        data.set.priority\n      );\n    }\n    if (data.remove) {\n      const rule = getNestedRule(\n        styleSheet.rules,\n        data.index\n      );\n      rule && rule.style && rule.style.removeProperty(data.remove.property);\n    }\n  }\n  applyAdoptedStyleSheet(data) {\n    const targetHost = this.mirror.getNode(data.id);\n    if (!targetHost) return;\n    data.styles?.forEach((style) => {\n      let newStyleSheet = null;\n      let hostWindow = null;\n      if (hasShadowRoot(targetHost))\n        hostWindow = targetHost.ownerDocument?.defaultView || null;\n      else if (targetHost.nodeName === \"#document\")\n        hostWindow = targetHost.defaultView;\n      if (!hostWindow) return;\n      try {\n        newStyleSheet = new hostWindow.CSSStyleSheet();\n        this.styleMirror.add(newStyleSheet, style.styleId);\n        this.applyStyleSheetRule(\n          {\n            source: IncrementalSource.StyleSheetRule,\n            adds: style.rules\n          },\n          newStyleSheet\n        );\n      } catch (e2) {\n      }\n    });\n    const MAX_RETRY_TIME = 10;\n    let count = 0;\n    const adoptStyleSheets = (targetHost2, styleIds) => {\n      const stylesToAdopt = styleIds.map((styleId) => this.styleMirror.getStyle(styleId)).filter((style) => style !== null);\n      if (hasShadowRoot(targetHost2))\n        targetHost2.shadowRoot.adoptedStyleSheets = stylesToAdopt;\n      else if (targetHost2.nodeName === \"#document\")\n        targetHost2.adoptedStyleSheets = stylesToAdopt;\n      if (stylesToAdopt.length !== styleIds.length && count < MAX_RETRY_TIME) {\n        setTimeout$1(\n          () => adoptStyleSheets(targetHost2, styleIds),\n          0 + 100 * count\n        );\n        count++;\n      }\n    };\n    adoptStyleSheets(targetHost, data.styleIds);\n  }\n  legacy_resolveMissingNode(map, parent, target, targetMutation) {\n    const { previousId, nextId } = targetMutation;\n    const previousInMap = previousId && map[previousId];\n    const nextInMap = nextId && map[nextId];\n    if (previousInMap) {\n      const { node, mutation } = previousInMap;\n      parent.insertBefore(node, target);\n      delete map[mutation.node.id];\n      delete this.legacy_missingNodeRetryMap[mutation.node.id];\n      if (mutation.previousId || mutation.nextId) {\n        this.legacy_resolveMissingNode(map, parent, node, mutation);\n      }\n    }\n    if (nextInMap) {\n      const { node, mutation } = nextInMap;\n      parent.insertBefore(\n        node,\n        target.nextSibling\n      );\n      delete map[mutation.node.id];\n      delete this.legacy_missingNodeRetryMap[mutation.node.id];\n      if (mutation.previousId || mutation.nextId) {\n        this.legacy_resolveMissingNode(map, parent, node, mutation);\n      }\n    }\n  }\n  moveAndHover(x, y, id, isSync, debugData, pointerId) {\n    const target = this.mirror.getNode(id);\n    if (!target) {\n      return this.debugNodeNotFound(debugData, id);\n    }\n    const base = getBaseDimension(target, this.iframe);\n    const _x = x * base.absoluteScale + base.x;\n    const _y = y * base.absoluteScale + base.y;\n    const pointer = this.pointers[pointerId];\n    if (pointer && pointer.pointerEl) {\n      pointer.pointerEl.style.left = `${_x}px`;\n      pointer.pointerEl.style.top = `${_y}px`;\n    }\n    if (!isSync) {\n      this.drawMouseTail({ x: _x, y: _y }, pointerId);\n    }\n    this.hoverElements(target);\n  }\n  drawMouseTail(position, pointerId) {\n    const pointer = this.pointers[pointerId];\n    if (!pointer || !pointer.mouseTail) {\n      return;\n    }\n    const { lineCap, lineWidth, strokeStyle, duration } = this.config.mouseTail === true ? defaultMouseTailConfig : Object.assign({}, defaultMouseTailConfig, this.config.mouseTail);\n    const draw = () => {\n      if (!pointer || !pointer.mouseTail) {\n        return;\n      }\n      const mouseTail = pointer.mouseTail;\n      const ctx = mouseTail.getContext(\"2d\");\n      if (!ctx || !pointer.tailPositions.length) {\n        return;\n      }\n      ctx.clearRect(0, 0, mouseTail.width, mouseTail.height);\n      ctx.beginPath();\n      ctx.lineWidth = lineWidth;\n      ctx.lineCap = lineCap;\n      ctx.strokeStyle = strokeStyle;\n      ctx.moveTo(pointer.tailPositions[0].x, pointer.tailPositions[0].y);\n      pointer.tailPositions.forEach((p) => ctx.lineTo(p.x, p.y));\n      ctx.stroke();\n    };\n    pointer.tailPositions.push(position);\n    draw();\n    setTimeout$1(() => {\n      if (pointerId in this.pointers) {\n        pointer.tailPositions = pointer.tailPositions.filter(\n          (p) => p !== position\n        );\n        draw();\n      }\n    }, duration / this.speedService.state.context.timer.speed);\n  }\n  hoverElements(el) {\n    const iframeDoc = getIFrameContentDocument(this.iframe);\n    const rootElement = this.lastHoveredRootNode || iframeDoc;\n    if (rootElement && typeof rootElement.querySelectorAll === \"function\") {\n      rootElement.querySelectorAll(\".\\\\:hover\").forEach((hoveredEl) => {\n        hoveredEl.classList.remove(\":hover\");\n      });\n    }\n    this.lastHoveredRootNode = el.getRootNode();\n    let currentEl = el;\n    while (currentEl) {\n      if (currentEl.classList) {\n        currentEl.classList.add(\":hover\");\n      }\n      currentEl = currentEl.parentElement;\n    }\n  }\n  isUserInteraction(event) {\n    if (event.type !== EventType.IncrementalSnapshot) {\n      return false;\n    }\n    return event.data.source > IncrementalSource.Mutation && event.data.source <= IncrementalSource.Input;\n  }\n  backToNormal() {\n    this.nextUserInteractionEvent = null;\n    if (this.speedService.state.matches(\"normal\")) {\n      return;\n    }\n    this.speedService.send({ type: \"BACK_TO_NORMAL\" });\n    this.emitter.emit(ReplayerEvents.SkipEnd, {\n      speed: this.speedService.state.context.normalSpeed\n    });\n  }\n  warnNodeNotFound(d, id) {\n    this.warn(`Node with id '${id}' not found. `, d);\n  }\n  warnCanvasMutationFailed(d, error) {\n    this.warn(`Has error on canvas update`, error, \"canvas mutation:\", d);\n  }\n  debugNodeNotFound(d, id) {\n    this.debug(`Node with id '${id}' not found. `, d);\n  }\n  warn(...args) {\n    if (!this.config.showWarning) {\n      return;\n    }\n    this.config.logger.warn(REPLAY_CONSOLE_PREFIX, ...args);\n  }\n  debug(...args) {\n    if (!this.config.showDebug) {\n      return;\n    }\n    this.config.logger.log(REPLAY_CONSOLE_PREFIX, ...args);\n  }\n}\nexport {\n  CanvasManager,\n  EventType,\n  IncrementalSource,\n  MouseInteractions,\n  Replayer,\n  ReplayerEvents,\n  addCustomEvent,\n  canvasMutation,\n  deserializeArg,\n  freezePage,\n  record,\n  takeFullSnapshot,\n  utils\n};\n//# sourceMappingURL=rrweb.js.map\n","type ClassOption = string | RegExp;\n\n/** Duplicate this from @sentry-internal/rrweb so we can export this as well. */\nexport const ReplayEventTypeDomContentLoaded = 0;\nexport const ReplayEventTypeLoad = 1;\nexport const ReplayEventTypeFullSnapshot = 2;\nexport const ReplayEventTypeIncrementalSnapshot = 3;\nexport const ReplayEventTypeMeta = 4;\nexport const ReplayEventTypeCustom = 5;\nexport const ReplayEventTypePlugin = 6;\n\nexport type ReplayEventType =\n  | typeof ReplayEventTypeDomContentLoaded\n  | typeof ReplayEventTypeLoad\n  | typeof ReplayEventTypeFullSnapshot\n  | typeof ReplayEventTypeIncrementalSnapshot\n  | typeof ReplayEventTypeMeta\n  | typeof ReplayEventTypeCustom\n  | typeof ReplayEventTypePlugin;\n\n/**\n * This is a partial copy of rrweb's eventWithTime type which only contains the properties\n * we specifically need in the SDK.\n */\nexport type ReplayEventWithTime = {\n  type: ReplayEventType;\n  data: unknown;\n  timestamp: number;\n  delay?: number;\n};\n\n/**\n * This is a partial copy of rrweb's recording options which only contains the properties\n * we specifically use in the SDK. Users can specify additional properties, hence we add the\n * Record<string, unknown> union type.\n */\nexport type RrwebRecordOptions = {\n  maskAllText?: boolean;\n  maskAllInputs?: boolean;\n  blockClass?: ClassOption;\n  ignoreClass?: string;\n  maskTextClass?: ClassOption;\n  maskTextSelector?: string;\n  blockSelector?: string;\n  maskInputOptions?: Record<string, boolean>;\n  recordCrossOriginIframes?: boolean;\n} & Record<string, unknown>;\n\nexport interface CanvasManagerInterface {\n  reset(): void;\n  freeze(): void;\n  unfreeze(): void;\n  lock(): void;\n  unlock(): void;\n  snapshot(): void;\n  addWindow(win: typeof globalThis & Window): void;\n  addShadowRoot(shadowRoot: ShadowRoot): void;\n  resetShadowRoots(): void;\n}\n\nexport interface CanvasManagerOptions {\n  recordCanvas: boolean;\n  enableManualSnapshot?: boolean;\n  blockClass: string | RegExp;\n  blockSelector: string | null;\n  unblockSelector: string | null;\n  sampling?: 'all' | number;\n  dataURLOptions: Partial<{\n    type: string;\n    quality: number;\n  }>;\n  mutationCb: (p: any) => void;\n  win: typeof globalThis & Window;\n  mirror: any;\n}\n","/**\n * Converts a timestamp to ms, if it was in s, or keeps it as ms.\n */\nexport function timestampToMs(timestamp: number): number {\n  const isMs = timestamp > 9999999999;\n  return isMs ? timestamp : timestamp * 1000;\n}\n\n/**\n * Converts a timestamp to s, if it was in ms, or keeps it as s.\n */\nexport function timestampToS(timestamp: number): number {\n  const isMs = timestamp > 9999999999;\n  return isMs ? timestamp / 1000 : timestamp;\n}\n","import type { Breadcrumb } from '@sentry/core';\nimport { normalize } from '@sentry/core';\nimport { EventType } from '@sentry-internal/rrweb';\nimport type { ReplayContainer } from '../../types';\n\n/**\n * Add a breadcrumb event to replay.\n */\nexport function addBreadcrumbEvent(replay: ReplayContainer, breadcrumb: Breadcrumb): void {\n  if (breadcrumb.category === 'sentry.transaction') {\n    return;\n  }\n\n  if (['ui.click', 'ui.input'].includes(breadcrumb.category as string)) {\n    replay.triggerUserActivity();\n  } else {\n    replay.checkAndHandleExpiredSession();\n  }\n\n  replay.addUpdate(() => {\n    // This should never reject\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    replay.throttledAddEvent({\n      type: EventType.Custom,\n      // TODO: We were converting from ms to seconds for breadcrumbs, spans,\n      // but maybe we should just keep them as milliseconds\n      timestamp: (breadcrumb.timestamp || 0) * 1000,\n      data: {\n        tag: 'breadcrumb',\n        // normalize to max. 10 depth and 1_000 properties per object\n        payload: normalize(breadcrumb, 10, 1_000),\n      },\n    });\n\n    // Do not flush after console log messages\n    return breadcrumb.category === 'console';\n  });\n}\n","import type { INode } from '@sentry-internal/rrweb-snapshot';\n\nconst INTERACTIVE_SELECTOR = 'button,a';\n\n/** Get the closest interactive parent element, or else return the given element. */\nexport function getClosestInteractive(element: Element): Element {\n  const closestInteractive = element.closest(INTERACTIVE_SELECTOR);\n  return closestInteractive || element;\n}\n\n/**\n * For clicks, we check if the target is inside of a button or link\n * If so, we use this as the target instead\n * This is useful because if you click on the image in <button><img></button>,\n * The target will be the image, not the button, which we don't want here\n */\nexport function getClickTargetNode(event: Event | MouseEvent | Node): Node | INode | null {\n  const target = getTargetNode(event);\n\n  if (!target || !(target instanceof Element)) {\n    return target;\n  }\n\n  return getClosestInteractive(target);\n}\n\n/** Get the event target node. */\nexport function getTargetNode(event: Node | { target: EventTarget | null }): Node | INode | null {\n  if (isEventWithTarget(event)) {\n    return event.target as Node | null;\n  }\n\n  return event;\n}\n\nfunction isEventWithTarget(event: unknown): event is { target: EventTarget | null } {\n  return typeof event === 'object' && !!event && 'target' in event;\n}\n","import { fill } from '@sentry/core';\nimport { WINDOW } from '../../constants';\n\ntype WindowOpenHandler = () => void;\n\nlet handlers: undefined | WindowOpenHandler[];\n\n/**\n * Register a handler to be called when `window.open()` is called.\n * Returns a cleanup function.\n */\nexport function onWindowOpen(cb: WindowOpenHandler): () => void {\n  // Ensure to only register this once\n  if (!handlers) {\n    handlers = [];\n    monkeyPatchWindowOpen();\n  }\n\n  handlers.push(cb);\n\n  return () => {\n    const pos = handlers ? handlers.indexOf(cb) : -1;\n    if (pos > -1) {\n      (handlers as WindowOpenHandler[]).splice(pos, 1);\n    }\n  };\n}\n\nfunction monkeyPatchWindowOpen(): void {\n  fill(WINDOW, 'open', function (originalWindowOpen: () => void): () => void {\n    return function (...args: unknown[]): void {\n      if (handlers) {\n        try {\n          handlers.forEach(handler => handler());\n        } catch {\n          // ignore errors in here\n        }\n      }\n\n      return originalWindowOpen.apply(WINDOW, args);\n    };\n  });\n}\n","import type { Breadcrumb } from '@sentry/core';\nimport { setTimeout } from '@sentry-internal/browser-utils';\nimport { IncrementalSource, MouseInteractions, record } from '@sentry-internal/rrweb';\nimport { WINDOW } from '../constants';\nimport type {\n  RecordingEvent,\n  ReplayClickDetector,\n  ReplayContainer,\n  ReplayMultiClickFrame,\n  ReplaySlowClickFrame,\n  SlowClickConfig,\n} from '../types';\nimport { ReplayEventTypeIncrementalSnapshot } from '../types';\nimport { timestampToS } from '../util/timestamp';\nimport { addBreadcrumbEvent } from './util/addBreadcrumbEvent';\nimport { getClosestInteractive } from './util/domUtils';\nimport { onWindowOpen } from './util/onWindowOpen';\n\ntype ClickBreadcrumb = Breadcrumb & {\n  timestamp: number;\n};\n\ninterface Click {\n  timestamp: number;\n  mutationAfter?: number;\n  scrollAfter?: number;\n  clickBreadcrumb: ClickBreadcrumb;\n  clickCount: number;\n  node: HTMLElement;\n}\n\ntype IncrementalRecordingEvent = RecordingEvent & {\n  type: typeof ReplayEventTypeIncrementalSnapshot;\n  data: { source: IncrementalSource };\n};\n\ntype IncrementalMouseInteractionRecordingEvent = IncrementalRecordingEvent & {\n  type: typeof ReplayEventTypeIncrementalSnapshot;\n  data: { type: MouseInteractions; id: number };\n};\n\n/** Any IncrementalSource for rrweb that we interpret as a kind of mutation. */\nconst IncrementalMutationSources = new Set([\n  IncrementalSource.Mutation,\n  IncrementalSource.StyleSheetRule,\n  IncrementalSource.StyleDeclaration,\n  IncrementalSource.AdoptedStyleSheet,\n  IncrementalSource.CanvasMutation,\n  IncrementalSource.Selection,\n  IncrementalSource.MediaInteraction,\n]);\n\n/** Handle a click. */\nexport function handleClick(clickDetector: ReplayClickDetector, clickBreadcrumb: Breadcrumb, node: HTMLElement): void {\n  clickDetector.handleClick(clickBreadcrumb, node);\n}\n\n/** A click detector class that can be used to detect slow or rage clicks on elements. */\nexport class ClickDetector implements ReplayClickDetector {\n  // protected for testing\n  protected _lastMutation: number;\n  protected _lastScroll: number;\n\n  private _clicks: Click[];\n  private _teardown: undefined | (() => void);\n\n  private _threshold: number;\n  private _scrollTimeout: number;\n  private _timeout: number;\n  private _ignoreSelector: string;\n\n  private _replay: ReplayContainer;\n  private _checkClickTimeout?: ReturnType<typeof setTimeout>;\n  private _addBreadcrumbEvent: typeof addBreadcrumbEvent;\n\n  public constructor(\n    replay: ReplayContainer,\n    slowClickConfig: SlowClickConfig,\n    // Just for easier testing\n    _addBreadcrumbEvent = addBreadcrumbEvent,\n  ) {\n    this._lastMutation = 0;\n    this._lastScroll = 0;\n    this._clicks = [];\n\n    // We want everything in s, but options are in ms\n    this._timeout = slowClickConfig.timeout / 1000;\n    this._threshold = slowClickConfig.threshold / 1000;\n    this._scrollTimeout = slowClickConfig.scrollTimeout / 1000;\n    this._replay = replay;\n    this._ignoreSelector = slowClickConfig.ignoreSelector;\n    this._addBreadcrumbEvent = _addBreadcrumbEvent;\n  }\n\n  /** Register click detection handlers on mutation or scroll. */\n  public addListeners(): void {\n    const cleanupWindowOpen = onWindowOpen(() => {\n      // Treat window.open as mutation\n      this._lastMutation = nowInSeconds();\n    });\n\n    this._teardown = () => {\n      cleanupWindowOpen();\n\n      this._clicks = [];\n      this._lastMutation = 0;\n      this._lastScroll = 0;\n    };\n  }\n\n  /** Clean up listeners. */\n  public removeListeners(): void {\n    if (this._teardown) {\n      this._teardown();\n    }\n\n    if (this._checkClickTimeout) {\n      clearTimeout(this._checkClickTimeout);\n    }\n  }\n\n  /** @inheritDoc */\n  public handleClick(breadcrumb: Breadcrumb, node: HTMLElement): void {\n    if (ignoreElement(node, this._ignoreSelector) || !isClickBreadcrumb(breadcrumb)) {\n      return;\n    }\n\n    const newClick: Click = {\n      timestamp: timestampToS(breadcrumb.timestamp),\n      clickBreadcrumb: breadcrumb,\n      // Set this to 0 so we know it originates from the click breadcrumb\n      clickCount: 0,\n      node,\n    };\n\n    // If there was a click in the last 1s on the same element, ignore it - only keep a single reference per second\n    if (\n      this._clicks.some(click => click.node === newClick.node && Math.abs(click.timestamp - newClick.timestamp) < 1)\n    ) {\n      return;\n    }\n\n    this._clicks.push(newClick);\n\n    // If this is the first new click, set a timeout to check for multi clicks\n    if (this._clicks.length === 1) {\n      this._scheduleCheckClicks();\n    }\n  }\n\n  /** @inheritDoc */\n  public registerMutation(timestamp = Date.now()): void {\n    this._lastMutation = timestampToS(timestamp);\n  }\n\n  /** @inheritDoc */\n  public registerScroll(timestamp = Date.now()): void {\n    this._lastScroll = timestampToS(timestamp);\n  }\n\n  /** @inheritDoc */\n  public registerClick(element: HTMLElement): void {\n    const node = getClosestInteractive(element);\n    this._handleMultiClick(node as HTMLElement);\n  }\n\n  /** Count multiple clicks on elements. */\n  private _handleMultiClick(node: HTMLElement): void {\n    this._getClicks(node).forEach(click => {\n      click.clickCount++;\n    });\n  }\n\n  /** Get all pending clicks for a given node. */\n  private _getClicks(node: HTMLElement): Click[] {\n    return this._clicks.filter(click => click.node === node);\n  }\n\n  /** Check the clicks that happened. */\n  private _checkClicks(): void {\n    const timedOutClicks: Click[] = [];\n\n    const now = nowInSeconds();\n\n    this._clicks.forEach(click => {\n      if (!click.mutationAfter && this._lastMutation) {\n        click.mutationAfter = click.timestamp <= this._lastMutation ? this._lastMutation - click.timestamp : undefined;\n      }\n      if (!click.scrollAfter && this._lastScroll) {\n        click.scrollAfter = click.timestamp <= this._lastScroll ? this._lastScroll - click.timestamp : undefined;\n      }\n\n      // All of these are in seconds!\n      if (click.timestamp + this._timeout <= now) {\n        timedOutClicks.push(click);\n      }\n    });\n\n    // Remove \"old\" clicks\n    for (const click of timedOutClicks) {\n      const pos = this._clicks.indexOf(click);\n\n      if (pos > -1) {\n        this._generateBreadcrumbs(click);\n        this._clicks.splice(pos, 1);\n      }\n    }\n\n    // Trigger new check, unless no clicks left\n    if (this._clicks.length) {\n      this._scheduleCheckClicks();\n    }\n  }\n\n  /** Generate matching breadcrumb(s) for the click. */\n  private _generateBreadcrumbs(click: Click): void {\n    const replay = this._replay;\n    const hadScroll = click.scrollAfter && click.scrollAfter <= this._scrollTimeout;\n    const hadMutation = click.mutationAfter && click.mutationAfter <= this._threshold;\n\n    const isSlowClick = !hadScroll && !hadMutation;\n    const { clickCount, clickBreadcrumb } = click;\n\n    // Slow click\n    if (isSlowClick) {\n      // If `mutationAfter` is set, it means a mutation happened after the threshold, but before the timeout\n      // If not, it means we just timed out without scroll & mutation\n      const timeAfterClickMs = Math.min(click.mutationAfter || this._timeout, this._timeout) * 1000;\n      const endReason = timeAfterClickMs < this._timeout * 1000 ? 'mutation' : 'timeout';\n\n      const breadcrumb: ReplaySlowClickFrame = {\n        type: 'default',\n        message: clickBreadcrumb.message,\n        timestamp: clickBreadcrumb.timestamp,\n        category: 'ui.slowClickDetected',\n        data: {\n          ...clickBreadcrumb.data,\n          url: WINDOW.location.href,\n          route: replay.getCurrentRoute(),\n          timeAfterClickMs,\n          endReason,\n          // If clickCount === 0, it means multiClick was not correctly captured here\n          // - we still want to send 1 in this case\n          clickCount: clickCount || 1,\n        },\n      };\n\n      this._addBreadcrumbEvent(replay, breadcrumb);\n      return;\n    }\n\n    // Multi click\n    if (clickCount > 1) {\n      const breadcrumb: ReplayMultiClickFrame = {\n        type: 'default',\n        message: clickBreadcrumb.message,\n        timestamp: clickBreadcrumb.timestamp,\n        category: 'ui.multiClick',\n        data: {\n          ...clickBreadcrumb.data,\n          url: WINDOW.location.href,\n          route: replay.getCurrentRoute(),\n          clickCount,\n          metric: true,\n        },\n      };\n\n      this._addBreadcrumbEvent(replay, breadcrumb);\n    }\n  }\n\n  /** Schedule to check current clicks. */\n  private _scheduleCheckClicks(): void {\n    if (this._checkClickTimeout) {\n      clearTimeout(this._checkClickTimeout);\n    }\n\n    this._checkClickTimeout = setTimeout(() => this._checkClicks(), 1000);\n  }\n}\n\nconst SLOW_CLICK_TAGS = ['A', 'BUTTON', 'INPUT'];\n\n/** exported for tests only */\nexport function ignoreElement(node: HTMLElement, ignoreSelector: string): boolean {\n  if (!SLOW_CLICK_TAGS.includes(node.tagName)) {\n    return true;\n  }\n\n  // If <input> tag, we only want to consider input[type='submit'] & input[type='button']\n  if (node.tagName === 'INPUT' && !['submit', 'button'].includes(node.getAttribute('type') || '')) {\n    return true;\n  }\n\n  // If <a> tag, detect special variants that may not lead to an action\n  // If target !== _self, we may open the link somewhere else, which would lead to no action\n  // Also, when downloading a file, we may not leave the page, but still not trigger an action\n  if (\n    node.tagName === 'A' &&\n    (node.hasAttribute('download') || (node.hasAttribute('target') && node.getAttribute('target') !== '_self'))\n  ) {\n    return true;\n  }\n\n  if (ignoreSelector && node.matches(ignoreSelector)) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction isClickBreadcrumb(breadcrumb: Breadcrumb): breadcrumb is ClickBreadcrumb {\n  return !!(breadcrumb.data && typeof breadcrumb.data.nodeId === 'number' && breadcrumb.timestamp);\n}\n\n// This is good enough for us, and is easier to test/mock than `timestampInSeconds`\nfunction nowInSeconds(): number {\n  return Date.now() / 1000;\n}\n\n/** Update the click detector based on a recording event of rrweb. */\nexport function updateClickDetectorForRecordingEvent(clickDetector: ReplayClickDetector, event: RecordingEvent): void {\n  try {\n    // note: We only consider incremental snapshots here\n    // This means that any full snapshot is ignored for mutation detection - the reason is that we simply cannot know if a mutation happened here.\n    // E.g. think that we are buffering, an error happens and we take a full snapshot because we switched to session mode -\n    // in this scenario, we would not know if a dead click happened because of the error, which is a key dead click scenario.\n    // Instead, by ignoring full snapshots, we have the risk that we generate a false positive\n    // (if a mutation _did_ happen but was \"swallowed\" by the full snapshot)\n    // But this should be more unlikely as we'd generally capture the incremental snapshot right away\n\n    if (!isIncrementalEvent(event)) {\n      return;\n    }\n\n    const { source } = event.data;\n    if (IncrementalMutationSources.has(source)) {\n      clickDetector.registerMutation(event.timestamp);\n    }\n\n    if (source === IncrementalSource.Scroll) {\n      clickDetector.registerScroll(event.timestamp);\n    }\n\n    if (isIncrementalMouseInteraction(event)) {\n      const { type, id } = event.data;\n      const node = record.mirror.getNode(id);\n\n      if (node instanceof HTMLElement && type === MouseInteractions.Click) {\n        clickDetector.registerClick(node);\n      }\n    }\n  } catch {\n    // ignore errors here, e.g. if accessing something that does not exist\n  }\n}\n\nfunction isIncrementalEvent(event: RecordingEvent): event is IncrementalRecordingEvent {\n  return event.type === ReplayEventTypeIncrementalSnapshot;\n}\n\nfunction isIncrementalMouseInteraction(\n  event: IncrementalRecordingEvent,\n): event is IncrementalMouseInteractionRecordingEvent {\n  return event.data.source === IncrementalSource.MouseInteraction;\n}\n","import type { ReplayBreadcrumbFrame } from '../types/replayFrame';\n\n/**\n * Create a breadcrumb for a replay.\n */\nexport function createBreadcrumb(\n  breadcrumb: Omit<ReplayBreadcrumbFrame, 'timestamp' | 'type'> & Partial<Pick<ReplayBreadcrumbFrame, 'timestamp'>>,\n): ReplayBreadcrumbFrame {\n  return {\n    timestamp: Date.now() / 1000,\n    type: 'default',\n    ...breadcrumb,\n  };\n}\n","var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\nvar NodeType = /* @__PURE__ */ ((NodeType2) => {\n  NodeType2[NodeType2[\"Document\"] = 0] = \"Document\";\n  NodeType2[NodeType2[\"DocumentType\"] = 1] = \"DocumentType\";\n  NodeType2[NodeType2[\"Element\"] = 2] = \"Element\";\n  NodeType2[NodeType2[\"Text\"] = 3] = \"Text\";\n  NodeType2[NodeType2[\"CDATA\"] = 4] = \"CDATA\";\n  NodeType2[NodeType2[\"Comment\"] = 5] = \"Comment\";\n  return NodeType2;\n})(NodeType || {});\nfunction isElement(n) {\n  return n.nodeType === n.ELEMENT_NODE;\n}\nfunction isShadowRoot(n) {\n  const host = n?.host;\n  return Boolean(host?.shadowRoot === n);\n}\nfunction isNativeShadowDom(shadowRoot) {\n  return Object.prototype.toString.call(shadowRoot) === \"[object ShadowRoot]\";\n}\nfunction fixBrowserCompatibilityIssuesInCSS(cssText) {\n  if (cssText.includes(\" background-clip: text;\") && !cssText.includes(\" -webkit-background-clip: text;\")) {\n    cssText = cssText.replace(\n      /\\sbackground-clip:\\s*text;/g,\n      \" -webkit-background-clip: text; background-clip: text;\"\n    );\n  }\n  return cssText;\n}\nfunction escapeImportStatement(rule) {\n  const { cssText } = rule;\n  if (cssText.split('\"').length < 3) return cssText;\n  const statement = [\"@import\", `url(${JSON.stringify(rule.href)})`];\n  if (rule.layerName === \"\") {\n    statement.push(`layer`);\n  } else if (rule.layerName) {\n    statement.push(`layer(${rule.layerName})`);\n  }\n  if (rule.supportsText) {\n    statement.push(`supports(${rule.supportsText})`);\n  }\n  if (rule.media.length) {\n    statement.push(rule.media.mediaText);\n  }\n  return statement.join(\" \") + \";\";\n}\nfunction stringifyStylesheet(s) {\n  try {\n    const rules = s.rules || s.cssRules;\n    return rules ? fixBrowserCompatibilityIssuesInCSS(\n      Array.from(rules, stringifyRule).join(\"\")\n    ) : null;\n  } catch (error) {\n    return null;\n  }\n}\nfunction fixAllCssProperty(rule) {\n  let styles = \"\";\n  for (let i = 0; i < rule.style.length; i++) {\n    const styleDeclaration = rule.style;\n    const attribute = styleDeclaration[i];\n    const isImportant = styleDeclaration.getPropertyPriority(attribute);\n    styles += `${attribute}:${styleDeclaration.getPropertyValue(attribute)}${isImportant ? ` !important` : \"\"};`;\n  }\n  return `${rule.selectorText} { ${styles} }`;\n}\nfunction stringifyRule(rule) {\n  let importStringified;\n  if (isCSSImportRule(rule)) {\n    try {\n      importStringified = // for same-origin stylesheets,\n      // we can access the imported stylesheet rules directly\n      stringifyStylesheet(rule.styleSheet) || // work around browser issues with the raw string `@import url(...)` statement\n      escapeImportStatement(rule);\n    } catch (error) {\n    }\n  } else if (isCSSStyleRule(rule)) {\n    let cssText = rule.cssText;\n    const needsSafariColonFix = rule.selectorText.includes(\":\");\n    const needsAllFix = typeof rule.style[\"all\"] === \"string\" && rule.style[\"all\"];\n    if (needsAllFix) {\n      cssText = fixAllCssProperty(rule);\n    }\n    if (needsSafariColonFix) {\n      cssText = fixSafariColons(cssText);\n    }\n    if (needsSafariColonFix || needsAllFix) {\n      return cssText;\n    }\n  }\n  return importStringified || rule.cssText;\n}\nfunction fixSafariColons(cssStringified) {\n  const regex = /(\\[(?:[\\w-]+)[^\\\\])(:(?:[\\w-]+)\\])/gm;\n  return cssStringified.replace(regex, \"$1\\\\$2\");\n}\nfunction isCSSImportRule(rule) {\n  return \"styleSheet\" in rule;\n}\nfunction isCSSStyleRule(rule) {\n  return \"selectorText\" in rule;\n}\nclass Mirror {\n  constructor() {\n    __publicField(this, \"idNodeMap\", /* @__PURE__ */ new Map());\n    __publicField(this, \"nodeMetaMap\", /* @__PURE__ */ new WeakMap());\n  }\n  getId(n) {\n    if (!n) return -1;\n    const id = this.getMeta(n)?.id;\n    return id ?? -1;\n  }\n  getNode(id) {\n    return this.idNodeMap.get(id) || null;\n  }\n  getIds() {\n    return Array.from(this.idNodeMap.keys());\n  }\n  getMeta(n) {\n    return this.nodeMetaMap.get(n) || null;\n  }\n  // removes the node from idNodeMap\n  // doesn't remove the node from nodeMetaMap\n  removeNodeFromMap(n) {\n    const id = this.getId(n);\n    this.idNodeMap.delete(id);\n    if (n.childNodes) {\n      n.childNodes.forEach(\n        (childNode) => this.removeNodeFromMap(childNode)\n      );\n    }\n  }\n  has(id) {\n    return this.idNodeMap.has(id);\n  }\n  hasNode(node) {\n    return this.nodeMetaMap.has(node);\n  }\n  add(n, meta) {\n    const id = meta.id;\n    this.idNodeMap.set(id, n);\n    this.nodeMetaMap.set(n, meta);\n  }\n  replace(id, n) {\n    const oldNode = this.getNode(id);\n    if (oldNode) {\n      const meta = this.nodeMetaMap.get(oldNode);\n      if (meta) this.nodeMetaMap.set(n, meta);\n    }\n    this.idNodeMap.set(id, n);\n  }\n  reset() {\n    this.idNodeMap = /* @__PURE__ */ new Map();\n    this.nodeMetaMap = /* @__PURE__ */ new WeakMap();\n  }\n}\nfunction createMirror() {\n  return new Mirror();\n}\nfunction shouldMaskInput({\n  maskInputOptions,\n  tagName,\n  type\n}) {\n  if (tagName === \"OPTION\") {\n    tagName = \"SELECT\";\n  }\n  return Boolean(\n    maskInputOptions[tagName.toLowerCase()] || type && maskInputOptions[type] || type === \"password\" || // Default to \"text\" option for inputs without a \"type\" attribute defined\n    tagName === \"INPUT\" && !type && maskInputOptions[\"text\"]\n  );\n}\nfunction maskInputValue({\n  isMasked,\n  element,\n  value,\n  maskInputFn\n}) {\n  let text = value || \"\";\n  if (!isMasked) {\n    return text;\n  }\n  if (maskInputFn) {\n    text = maskInputFn(text, element);\n  }\n  return \"*\".repeat(text.length);\n}\nfunction toLowerCase(str) {\n  return str.toLowerCase();\n}\nfunction toUpperCase(str) {\n  return str.toUpperCase();\n}\nconst ORIGINAL_ATTRIBUTE_NAME = \"__rrweb_original__\";\nfunction is2DCanvasBlank(canvas) {\n  const ctx = canvas.getContext(\"2d\");\n  if (!ctx) return true;\n  const chunkSize = 50;\n  for (let x = 0; x < canvas.width; x += chunkSize) {\n    for (let y = 0; y < canvas.height; y += chunkSize) {\n      const getImageData = ctx.getImageData;\n      const originalGetImageData = ORIGINAL_ATTRIBUTE_NAME in getImageData ? getImageData[ORIGINAL_ATTRIBUTE_NAME] : getImageData;\n      const pixelBuffer = new Uint32Array(\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-unsafe-member-access\n        originalGetImageData.call(\n          ctx,\n          x,\n          y,\n          Math.min(chunkSize, canvas.width - x),\n          Math.min(chunkSize, canvas.height - y)\n        ).data.buffer\n      );\n      if (pixelBuffer.some((pixel) => pixel !== 0)) return false;\n    }\n  }\n  return true;\n}\nfunction isNodeMetaEqual(a, b) {\n  if (!a || !b || a.type !== b.type) return false;\n  if (a.type === NodeType.Document)\n    return a.compatMode === b.compatMode;\n  else if (a.type === NodeType.DocumentType)\n    return a.name === b.name && a.publicId === b.publicId && a.systemId === b.systemId;\n  else if (a.type === NodeType.Comment || a.type === NodeType.Text || a.type === NodeType.CDATA)\n    return a.textContent === b.textContent;\n  else if (a.type === NodeType.Element)\n    return a.tagName === b.tagName && JSON.stringify(a.attributes) === JSON.stringify(b.attributes) && a.isSVG === b.isSVG && a.needBlock === b.needBlock;\n  return false;\n}\nfunction getInputType(element) {\n  const type = element.type;\n  return element.hasAttribute(\"data-rr-is-password\") ? \"password\" : type ? (\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n    toLowerCase(type)\n  ) : null;\n}\nfunction getInputValue(el, tagName, type) {\n  if (tagName === \"INPUT\" && (type === \"radio\" || type === \"checkbox\")) {\n    return el.getAttribute(\"value\") || \"\";\n  }\n  return el.value;\n}\nfunction extractFileExtension(path, baseURL) {\n  let url;\n  try {\n    url = new URL(path, baseURL ?? window.location.href);\n  } catch (err) {\n    return null;\n  }\n  const regex = /\\.([0-9a-z]+)(?:$)/i;\n  const match = url.pathname.match(regex);\n  return match?.[1] ?? null;\n}\nconst cachedImplementations = {};\nfunction getImplementation(name) {\n  const cached = cachedImplementations[name];\n  if (cached) {\n    return cached;\n  }\n  const document = window.document;\n  let impl = window[name];\n  if (document && typeof document.createElement === \"function\") {\n    try {\n      const sandbox = document.createElement(\"iframe\");\n      sandbox.hidden = true;\n      document.head.appendChild(sandbox);\n      const contentWindow = sandbox.contentWindow;\n      if (contentWindow && contentWindow[name]) {\n        impl = // eslint-disable-next-line @typescript-eslint/unbound-method\n        contentWindow[name];\n      }\n      document.head.removeChild(sandbox);\n    } catch (e) {\n    }\n  }\n  return cachedImplementations[name] = impl.bind(\n    window\n  );\n}\nfunction onRequestAnimationFrame(...rest) {\n  return getImplementation(\"requestAnimationFrame\")(...rest);\n}\nfunction setTimeout(...rest) {\n  return getImplementation(\"setTimeout\")(...rest);\n}\nfunction clearTimeout(...rest) {\n  return getImplementation(\"clearTimeout\")(...rest);\n}\nfunction getIframeContentDocument(iframe) {\n  try {\n    return iframe.contentDocument;\n  } catch (e) {\n  }\n}\nlet _id = 1;\nconst tagNameRegex = new RegExp(\"[^a-z0-9-_:]\");\nconst IGNORED_NODE = -2;\nfunction genId() {\n  return _id++;\n}\nfunction getValidTagName(element) {\n  if (element instanceof HTMLFormElement) {\n    return \"form\";\n  }\n  const processedTagName = toLowerCase(element.tagName);\n  if (tagNameRegex.test(processedTagName)) {\n    return \"div\";\n  }\n  return processedTagName;\n}\nfunction extractOrigin(url) {\n  let origin = \"\";\n  if (url.indexOf(\"//\") > -1) {\n    origin = url.split(\"/\").slice(0, 3).join(\"/\");\n  } else {\n    origin = url.split(\"/\")[0];\n  }\n  origin = origin.split(\"?\")[0];\n  return origin;\n}\nlet canvasService;\nlet canvasCtx;\nconst URL_IN_CSS_REF = /url\\((?:(')([^']*)'|(\")(.*?)\"|([^)]*))\\)/gm;\nconst URL_PROTOCOL_MATCH = /^(?:[a-z+]+:)?\\/\\//i;\nconst URL_WWW_MATCH = /^www\\..*/i;\nconst DATA_URI = /^(data:)([^,]*),(.*)/i;\nfunction absoluteToStylesheet(cssText, href) {\n  return (cssText || \"\").replace(\n    URL_IN_CSS_REF,\n    (origin, quote1, path1, quote2, path2, path3) => {\n      const filePath = path1 || path2 || path3;\n      const maybeQuote = quote1 || quote2 || \"\";\n      if (!filePath) {\n        return origin;\n      }\n      if (URL_PROTOCOL_MATCH.test(filePath) || URL_WWW_MATCH.test(filePath)) {\n        return `url(${maybeQuote}${filePath}${maybeQuote})`;\n      }\n      if (DATA_URI.test(filePath)) {\n        return `url(${maybeQuote}${filePath}${maybeQuote})`;\n      }\n      if (filePath[0] === \"/\") {\n        return `url(${maybeQuote}${extractOrigin(href) + filePath}${maybeQuote})`;\n      }\n      const stack = href.split(\"/\");\n      const parts = filePath.split(\"/\");\n      stack.pop();\n      for (const part of parts) {\n        if (part === \".\") {\n          continue;\n        } else if (part === \"..\") {\n          stack.pop();\n        } else {\n          stack.push(part);\n        }\n      }\n      return `url(${maybeQuote}${stack.join(\"/\")}${maybeQuote})`;\n    }\n  );\n}\nconst SRCSET_NOT_SPACES = /^[^ \\t\\n\\r\\u000c]+/;\nconst SRCSET_COMMAS_OR_SPACES = /^[, \\t\\n\\r\\u000c]+/;\nfunction getAbsoluteSrcsetString(doc, attributeValue) {\n  if (attributeValue.trim() === \"\") {\n    return attributeValue;\n  }\n  let pos = 0;\n  function collectCharacters(regEx) {\n    let chars;\n    const match = regEx.exec(attributeValue.substring(pos));\n    if (match) {\n      chars = match[0];\n      pos += chars.length;\n      return chars;\n    }\n    return \"\";\n  }\n  const output = [];\n  while (true) {\n    collectCharacters(SRCSET_COMMAS_OR_SPACES);\n    if (pos >= attributeValue.length) {\n      break;\n    }\n    let url = collectCharacters(SRCSET_NOT_SPACES);\n    if (url.slice(-1) === \",\") {\n      url = absoluteToDoc(doc, url.substring(0, url.length - 1));\n      output.push(url);\n    } else {\n      let descriptorsStr = \"\";\n      url = absoluteToDoc(doc, url);\n      let inParens = false;\n      while (true) {\n        const c = attributeValue.charAt(pos);\n        if (c === \"\") {\n          output.push((url + descriptorsStr).trim());\n          break;\n        } else if (!inParens) {\n          if (c === \",\") {\n            pos += 1;\n            output.push((url + descriptorsStr).trim());\n            break;\n          } else if (c === \"(\") {\n            inParens = true;\n          }\n        } else {\n          if (c === \")\") {\n            inParens = false;\n          }\n        }\n        descriptorsStr += c;\n        pos += 1;\n      }\n    }\n  }\n  return output.join(\", \");\n}\nconst cachedDocument = /* @__PURE__ */ new WeakMap();\nfunction absoluteToDoc(doc, attributeValue) {\n  if (!attributeValue || attributeValue.trim() === \"\") {\n    return attributeValue;\n  }\n  return getHref(doc, attributeValue);\n}\nfunction isSVGElement(el) {\n  return Boolean(el.tagName === \"svg\" || el.ownerSVGElement);\n}\nfunction getHref(doc, customHref) {\n  let a = cachedDocument.get(doc);\n  if (!a) {\n    a = doc.createElement(\"a\");\n    cachedDocument.set(doc, a);\n  }\n  if (!customHref) {\n    customHref = \"\";\n  } else if (customHref.startsWith(\"blob:\") || customHref.startsWith(\"data:\")) {\n    return customHref;\n  }\n  a.setAttribute(\"href\", customHref);\n  return a.href;\n}\nfunction transformAttribute(doc, tagName, name, value, element, maskAttributeFn) {\n  if (!value) {\n    return value;\n  }\n  if (name === \"src\" || name === \"href\" && !(tagName === \"use\" && value[0] === \"#\")) {\n    return absoluteToDoc(doc, value);\n  } else if (name === \"xlink:href\" && value[0] !== \"#\") {\n    return absoluteToDoc(doc, value);\n  } else if (name === \"background\" && (tagName === \"table\" || tagName === \"td\" || tagName === \"th\")) {\n    return absoluteToDoc(doc, value);\n  } else if (name === \"srcset\") {\n    return getAbsoluteSrcsetString(doc, value);\n  } else if (name === \"style\") {\n    return absoluteToStylesheet(value, getHref(doc));\n  } else if (tagName === \"object\" && name === \"data\") {\n    return absoluteToDoc(doc, value);\n  }\n  if (typeof maskAttributeFn === \"function\") {\n    return maskAttributeFn(name, value, element);\n  }\n  return value;\n}\nfunction ignoreAttribute(tagName, name, _value) {\n  return (tagName === \"video\" || tagName === \"audio\") && name === \"autoplay\";\n}\nfunction _isBlockedElement(element, blockClass, blockSelector, unblockSelector) {\n  try {\n    if (unblockSelector && element.matches(unblockSelector)) {\n      return false;\n    }\n    if (typeof blockClass === \"string\") {\n      if (element.classList.contains(blockClass)) {\n        return true;\n      }\n    } else {\n      for (let eIndex = element.classList.length; eIndex--; ) {\n        const className = element.classList[eIndex];\n        if (blockClass.test(className)) {\n          return true;\n        }\n      }\n    }\n    if (blockSelector) {\n      return element.matches(blockSelector);\n    }\n  } catch (e) {\n  }\n  return false;\n}\nfunction elementClassMatchesRegex(el, regex) {\n  for (let eIndex = el.classList.length; eIndex--; ) {\n    const className = el.classList[eIndex];\n    if (regex.test(className)) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction classMatchesRegex(node, regex, checkAncestors) {\n  if (!node) return false;\n  if (checkAncestors) {\n    return distanceToMatch(\n      node,\n      (node2) => elementClassMatchesRegex(node2, regex)\n    ) >= 0;\n  } else if (node.nodeType === node.ELEMENT_NODE) {\n    return elementClassMatchesRegex(node, regex);\n  }\n  return false;\n}\nfunction distanceToMatch(node, matchPredicate, limit = Infinity, distance = 0) {\n  if (!node) return -1;\n  if (node.nodeType !== node.ELEMENT_NODE) return -1;\n  if (distance > limit) return -1;\n  if (matchPredicate(node)) return distance;\n  return distanceToMatch(node.parentNode, matchPredicate, limit, distance + 1);\n}\nfunction createMatchPredicate(className, selector) {\n  return (node) => {\n    const el = node;\n    if (el === null) return false;\n    try {\n      if (className) {\n        if (typeof className === \"string\") {\n          if (el.matches(`.${className}`)) return true;\n        } else if (elementClassMatchesRegex(el, className)) {\n          return true;\n        }\n      }\n      if (selector && el.matches(selector)) return true;\n      return false;\n    } catch {\n      return false;\n    }\n  };\n}\nfunction needMaskingText(node, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, maskAllText) {\n  try {\n    const el = node.nodeType === node.ELEMENT_NODE ? node : node.parentElement;\n    if (el === null) return false;\n    if (el.tagName === \"INPUT\") {\n      const autocomplete = el.getAttribute(\"autocomplete\");\n      const disallowedAutocompleteValues = [\n        \"current-password\",\n        \"new-password\",\n        \"cc-number\",\n        \"cc-exp\",\n        \"cc-exp-month\",\n        \"cc-exp-year\",\n        \"cc-csc\"\n      ];\n      if (disallowedAutocompleteValues.includes(autocomplete)) {\n        return true;\n      }\n    }\n    let maskDistance = -1;\n    let unmaskDistance = -1;\n    if (maskAllText) {\n      unmaskDistance = distanceToMatch(\n        el,\n        createMatchPredicate(unmaskTextClass, unmaskTextSelector)\n      );\n      if (unmaskDistance < 0) {\n        return true;\n      }\n      maskDistance = distanceToMatch(\n        el,\n        createMatchPredicate(maskTextClass, maskTextSelector),\n        unmaskDistance >= 0 ? unmaskDistance : Infinity\n      );\n    } else {\n      maskDistance = distanceToMatch(\n        el,\n        createMatchPredicate(maskTextClass, maskTextSelector)\n      );\n      if (maskDistance < 0) {\n        return false;\n      }\n      unmaskDistance = distanceToMatch(\n        el,\n        createMatchPredicate(unmaskTextClass, unmaskTextSelector),\n        maskDistance >= 0 ? maskDistance : Infinity\n      );\n    }\n    return maskDistance >= 0 ? unmaskDistance >= 0 ? maskDistance <= unmaskDistance : true : unmaskDistance >= 0 ? false : !!maskAllText;\n  } catch (e) {\n  }\n  return !!maskAllText;\n}\nfunction onceIframeLoaded(iframeEl, listener, iframeLoadTimeout) {\n  const win = iframeEl.contentWindow;\n  if (!win) {\n    return;\n  }\n  let fired = false;\n  let readyState;\n  try {\n    readyState = win.document.readyState;\n  } catch (error) {\n    return;\n  }\n  if (readyState !== \"complete\") {\n    const timer = setTimeout(() => {\n      if (!fired) {\n        listener();\n        fired = true;\n      }\n    }, iframeLoadTimeout);\n    iframeEl.addEventListener(\"load\", () => {\n      clearTimeout(timer);\n      fired = true;\n      listener();\n    });\n    return;\n  }\n  const blankUrl = \"about:blank\";\n  if (win.location.href !== blankUrl || iframeEl.src === blankUrl || iframeEl.src === \"\") {\n    setTimeout(listener, 0);\n    return iframeEl.addEventListener(\"load\", listener);\n  }\n  iframeEl.addEventListener(\"load\", listener);\n}\nfunction onceStylesheetLoaded(link, listener, styleSheetLoadTimeout) {\n  let fired = false;\n  let styleSheetLoaded;\n  try {\n    styleSheetLoaded = link.sheet;\n  } catch (error) {\n    return;\n  }\n  if (styleSheetLoaded) return;\n  const timer = setTimeout(() => {\n    if (!fired) {\n      listener();\n      fired = true;\n    }\n  }, styleSheetLoadTimeout);\n  link.addEventListener(\"load\", () => {\n    clearTimeout(timer);\n    fired = true;\n    listener();\n  });\n}\nfunction serializeNode(n, options) {\n  const {\n    doc,\n    mirror,\n    blockClass,\n    blockSelector,\n    unblockSelector,\n    maskAllText,\n    maskAttributeFn,\n    maskTextClass,\n    unmaskTextClass,\n    maskTextSelector,\n    unmaskTextSelector,\n    inlineStylesheet,\n    maskInputOptions = {},\n    maskTextFn,\n    maskInputFn,\n    dataURLOptions = {},\n    inlineImages,\n    recordCanvas,\n    keepIframeSrcFn,\n    newlyAddedElement = false\n  } = options;\n  const rootId = getRootId(doc, mirror);\n  switch (n.nodeType) {\n    case n.DOCUMENT_NODE:\n      if (n.compatMode !== \"CSS1Compat\") {\n        return {\n          type: NodeType.Document,\n          childNodes: [],\n          compatMode: n.compatMode\n          // probably \"BackCompat\"\n        };\n      } else {\n        return {\n          type: NodeType.Document,\n          childNodes: []\n        };\n      }\n    case n.DOCUMENT_TYPE_NODE:\n      return {\n        type: NodeType.DocumentType,\n        name: n.name,\n        publicId: n.publicId,\n        systemId: n.systemId,\n        rootId\n      };\n    case n.ELEMENT_NODE:\n      return serializeElementNode(n, {\n        doc,\n        blockClass,\n        blockSelector,\n        unblockSelector,\n        inlineStylesheet,\n        maskAttributeFn,\n        maskInputOptions,\n        maskInputFn,\n        dataURLOptions,\n        inlineImages,\n        recordCanvas,\n        keepIframeSrcFn,\n        newlyAddedElement,\n        rootId,\n        maskAllText,\n        maskTextClass,\n        unmaskTextClass,\n        maskTextSelector,\n        unmaskTextSelector\n      });\n    case n.TEXT_NODE:\n      return serializeTextNode(n, {\n        doc,\n        maskAllText,\n        maskTextClass,\n        unmaskTextClass,\n        maskTextSelector,\n        unmaskTextSelector,\n        maskTextFn,\n        maskInputOptions,\n        maskInputFn,\n        rootId\n      });\n    case n.CDATA_SECTION_NODE:\n      return {\n        type: NodeType.CDATA,\n        textContent: \"\",\n        rootId\n      };\n    case n.COMMENT_NODE:\n      return {\n        type: NodeType.Comment,\n        textContent: n.textContent || \"\",\n        rootId\n      };\n    default:\n      return false;\n  }\n}\nfunction getRootId(doc, mirror) {\n  if (!mirror.hasNode(doc)) return void 0;\n  const docId = mirror.getId(doc);\n  return docId === 1 ? void 0 : docId;\n}\nfunction serializeTextNode(n, options) {\n  const {\n    maskAllText,\n    maskTextClass,\n    unmaskTextClass,\n    maskTextSelector,\n    unmaskTextSelector,\n    maskTextFn,\n    maskInputOptions,\n    maskInputFn,\n    rootId\n  } = options;\n  const parentTagName = n.parentNode && n.parentNode.tagName;\n  let textContent = n.textContent;\n  const isStyle = parentTagName === \"STYLE\" ? true : void 0;\n  const isScript = parentTagName === \"SCRIPT\" ? true : void 0;\n  const isTextarea = parentTagName === \"TEXTAREA\" ? true : void 0;\n  if (isStyle && textContent) {\n    try {\n      if (n.nextSibling || n.previousSibling) {\n      } else if (n.parentNode.sheet?.cssRules) {\n        textContent = stringifyStylesheet(\n          n.parentNode.sheet\n        );\n      }\n    } catch (err) {\n      console.warn(\n        `Cannot get CSS styles from text's parentNode. Error: ${err}`,\n        n\n      );\n    }\n    textContent = absoluteToStylesheet(textContent, getHref(options.doc));\n  }\n  if (isScript) {\n    textContent = \"SCRIPT_PLACEHOLDER\";\n  }\n  const forceMask = needMaskingText(\n    n,\n    maskTextClass,\n    maskTextSelector,\n    unmaskTextClass,\n    unmaskTextSelector,\n    maskAllText\n  );\n  if (!isStyle && !isScript && !isTextarea && textContent && forceMask) {\n    textContent = maskTextFn ? maskTextFn(textContent, n.parentElement) : textContent.replace(/[\\S]/g, \"*\");\n  }\n  if (isTextarea && textContent && (maskInputOptions.textarea || forceMask)) {\n    textContent = maskInputFn ? maskInputFn(textContent, n.parentNode) : textContent.replace(/[\\S]/g, \"*\");\n  }\n  if (parentTagName === \"OPTION\" && textContent) {\n    const isInputMasked = shouldMaskInput({\n      type: null,\n      tagName: parentTagName,\n      maskInputOptions\n    });\n    textContent = maskInputValue({\n      isMasked: needMaskingText(\n        n,\n        maskTextClass,\n        maskTextSelector,\n        unmaskTextClass,\n        unmaskTextSelector,\n        isInputMasked\n      ),\n      element: n,\n      value: textContent,\n      maskInputFn\n    });\n  }\n  return {\n    type: NodeType.Text,\n    textContent: textContent || \"\",\n    isStyle,\n    rootId\n  };\n}\nfunction serializeElementNode(n, options) {\n  const {\n    doc,\n    blockClass,\n    blockSelector,\n    unblockSelector,\n    inlineStylesheet,\n    maskInputOptions = {},\n    maskAttributeFn,\n    maskInputFn,\n    dataURLOptions = {},\n    inlineImages,\n    recordCanvas,\n    keepIframeSrcFn,\n    newlyAddedElement = false,\n    rootId,\n    maskTextClass,\n    unmaskTextClass,\n    maskTextSelector,\n    unmaskTextSelector\n  } = options;\n  const needBlock = _isBlockedElement(\n    n,\n    blockClass,\n    blockSelector,\n    unblockSelector\n  );\n  const tagName = getValidTagName(n);\n  let attributes2 = {};\n  const len = n.attributes.length;\n  for (let i = 0; i < len; i++) {\n    const attr = n.attributes[i];\n    if (attr.name && !ignoreAttribute(tagName, attr.name, attr.value)) {\n      attributes2[attr.name] = transformAttribute(\n        doc,\n        tagName,\n        toLowerCase(attr.name),\n        attr.value,\n        n,\n        maskAttributeFn\n      );\n    }\n  }\n  if (tagName === \"link\" && inlineStylesheet) {\n    const stylesheet = Array.from(doc.styleSheets).find((s) => {\n      return s.href === n.href;\n    });\n    let cssText = null;\n    if (stylesheet) {\n      cssText = stringifyStylesheet(stylesheet);\n    }\n    if (cssText) {\n      attributes2.rel = null;\n      attributes2.href = null;\n      attributes2.crossorigin = null;\n      attributes2._cssText = absoluteToStylesheet(cssText, stylesheet.href);\n    }\n  }\n  if (tagName === \"style\" && n.sheet && // TODO: Currently we only try to get dynamic stylesheet when it is an empty style element\n  !(n.innerText || n.textContent || \"\").trim().length) {\n    const cssText = stringifyStylesheet(\n      n.sheet\n    );\n    if (cssText) {\n      attributes2._cssText = absoluteToStylesheet(cssText, getHref(doc));\n    }\n  }\n  if (tagName === \"input\" || tagName === \"textarea\" || tagName === \"select\" || tagName === \"option\") {\n    const el = n;\n    const type = getInputType(el);\n    const value = getInputValue(el, toUpperCase(tagName), type);\n    const checked = el.checked;\n    if (type !== \"submit\" && type !== \"button\" && value) {\n      const forceMask = needMaskingText(\n        el,\n        maskTextClass,\n        maskTextSelector,\n        unmaskTextClass,\n        unmaskTextSelector,\n        shouldMaskInput({\n          type,\n          tagName: toUpperCase(tagName),\n          maskInputOptions\n        })\n      );\n      attributes2.value = maskInputValue({\n        isMasked: forceMask,\n        element: el,\n        value,\n        maskInputFn\n      });\n    }\n    if (checked) {\n      attributes2.checked = checked;\n    }\n  }\n  if (tagName === \"option\") {\n    if (n.selected && !maskInputOptions[\"select\"]) {\n      attributes2.selected = true;\n    } else {\n      delete attributes2.selected;\n    }\n  }\n  if (tagName === \"canvas\" && recordCanvas) {\n    if (n.__context === \"2d\") {\n      if (!is2DCanvasBlank(n)) {\n        attributes2.rr_dataURL = n.toDataURL(\n          dataURLOptions.type,\n          dataURLOptions.quality\n        );\n      }\n    } else if (!(\"__context\" in n)) {\n      const canvasDataURL = n.toDataURL(\n        dataURLOptions.type,\n        dataURLOptions.quality\n      );\n      const blankCanvas = doc.createElement(\"canvas\");\n      blankCanvas.width = n.width;\n      blankCanvas.height = n.height;\n      const blankCanvasDataURL = blankCanvas.toDataURL(\n        dataURLOptions.type,\n        dataURLOptions.quality\n      );\n      if (canvasDataURL !== blankCanvasDataURL) {\n        attributes2.rr_dataURL = canvasDataURL;\n      }\n    }\n  }\n  if (tagName === \"img\" && inlineImages) {\n    if (!canvasService) {\n      canvasService = doc.createElement(\"canvas\");\n      canvasCtx = canvasService.getContext(\"2d\");\n    }\n    const image = n;\n    const imageSrc = image.currentSrc || image.getAttribute(\"src\") || \"<unknown-src>\";\n    const priorCrossOrigin = image.crossOrigin;\n    const recordInlineImage = () => {\n      image.removeEventListener(\"load\", recordInlineImage);\n      try {\n        canvasService.width = image.naturalWidth;\n        canvasService.height = image.naturalHeight;\n        canvasCtx.drawImage(image, 0, 0);\n        attributes2.rr_dataURL = canvasService.toDataURL(\n          dataURLOptions.type,\n          dataURLOptions.quality\n        );\n      } catch (err) {\n        if (image.crossOrigin !== \"anonymous\") {\n          image.crossOrigin = \"anonymous\";\n          if (image.complete && image.naturalWidth !== 0)\n            recordInlineImage();\n          else image.addEventListener(\"load\", recordInlineImage);\n          return;\n        } else {\n          console.warn(\n            `Cannot inline img src=${imageSrc}! Error: ${err}`\n          );\n        }\n      }\n      if (image.crossOrigin === \"anonymous\") {\n        priorCrossOrigin ? attributes2.crossOrigin = priorCrossOrigin : image.removeAttribute(\"crossorigin\");\n      }\n    };\n    if (image.complete && image.naturalWidth !== 0) recordInlineImage();\n    else image.addEventListener(\"load\", recordInlineImage);\n  }\n  if (tagName === \"audio\" || tagName === \"video\") {\n    attributes2.rr_mediaState = n.paused ? \"paused\" : \"played\";\n    attributes2.rr_mediaCurrentTime = n.currentTime;\n  }\n  if (!newlyAddedElement) {\n    if (n.scrollLeft) {\n      attributes2.rr_scrollLeft = n.scrollLeft;\n    }\n    if (n.scrollTop) {\n      attributes2.rr_scrollTop = n.scrollTop;\n    }\n  }\n  if (needBlock) {\n    const { width, height } = n.getBoundingClientRect();\n    attributes2 = {\n      class: attributes2.class,\n      rr_width: `${width}px`,\n      rr_height: `${height}px`\n    };\n  }\n  if (tagName === \"iframe\" && !keepIframeSrcFn(attributes2.src)) {\n    if (!needBlock && !getIframeContentDocument(n)) {\n      attributes2.rr_src = attributes2.src;\n    }\n    delete attributes2.src;\n  }\n  let isCustomElement;\n  try {\n    if (customElements.get(tagName)) isCustomElement = true;\n  } catch (e) {\n  }\n  return {\n    type: NodeType.Element,\n    tagName,\n    attributes: attributes2,\n    childNodes: [],\n    isSVG: isSVGElement(n) || void 0,\n    needBlock,\n    rootId,\n    isCustom: isCustomElement\n  };\n}\nfunction lowerIfExists(maybeAttr) {\n  if (maybeAttr === void 0 || maybeAttr === null) {\n    return \"\";\n  } else {\n    return maybeAttr.toLowerCase();\n  }\n}\nfunction slimDOMExcluded(sn, slimDOMOptions) {\n  if (slimDOMOptions.comment && sn.type === NodeType.Comment) {\n    return true;\n  } else if (sn.type === NodeType.Element) {\n    if (slimDOMOptions.script && // script tag\n    (sn.tagName === \"script\" || // (module)preload link\n    sn.tagName === \"link\" && (sn.attributes.rel === \"preload\" || sn.attributes.rel === \"modulepreload\") || // prefetch link\n    sn.tagName === \"link\" && sn.attributes.rel === \"prefetch\" && typeof sn.attributes.href === \"string\" && extractFileExtension(sn.attributes.href) === \"js\")) {\n      return true;\n    } else if (slimDOMOptions.headFavicon && (sn.tagName === \"link\" && sn.attributes.rel === \"shortcut icon\" || sn.tagName === \"meta\" && (lowerIfExists(sn.attributes.name).match(\n      /^msapplication-tile(image|color)$/\n    ) || lowerIfExists(sn.attributes.name) === \"application-name\" || lowerIfExists(sn.attributes.rel) === \"icon\" || lowerIfExists(sn.attributes.rel) === \"apple-touch-icon\" || lowerIfExists(sn.attributes.rel) === \"shortcut icon\"))) {\n      return true;\n    } else if (sn.tagName === \"meta\") {\n      if (slimDOMOptions.headMetaDescKeywords && lowerIfExists(sn.attributes.name).match(/^description|keywords$/)) {\n        return true;\n      } else if (slimDOMOptions.headMetaSocial && (lowerIfExists(sn.attributes.property).match(/^(og|twitter|fb):/) || // og = opengraph (facebook)\n      lowerIfExists(sn.attributes.name).match(/^(og|twitter):/) || lowerIfExists(sn.attributes.name) === \"pinterest\")) {\n        return true;\n      } else if (slimDOMOptions.headMetaRobots && (lowerIfExists(sn.attributes.name) === \"robots\" || lowerIfExists(sn.attributes.name) === \"googlebot\" || lowerIfExists(sn.attributes.name) === \"bingbot\")) {\n        return true;\n      } else if (slimDOMOptions.headMetaHttpEquiv && sn.attributes[\"http-equiv\"] !== void 0) {\n        return true;\n      } else if (slimDOMOptions.headMetaAuthorship && (lowerIfExists(sn.attributes.name) === \"author\" || lowerIfExists(sn.attributes.name) === \"generator\" || lowerIfExists(sn.attributes.name) === \"framework\" || lowerIfExists(sn.attributes.name) === \"publisher\" || lowerIfExists(sn.attributes.name) === \"progid\" || lowerIfExists(sn.attributes.property).match(/^article:/) || lowerIfExists(sn.attributes.property).match(/^product:/))) {\n        return true;\n      } else if (slimDOMOptions.headMetaVerification && (lowerIfExists(sn.attributes.name) === \"google-site-verification\" || lowerIfExists(sn.attributes.name) === \"yandex-verification\" || lowerIfExists(sn.attributes.name) === \"csrf-token\" || lowerIfExists(sn.attributes.name) === \"p:domain_verify\" || lowerIfExists(sn.attributes.name) === \"verify-v1\" || lowerIfExists(sn.attributes.name) === \"verification\" || lowerIfExists(sn.attributes.name) === \"shopify-checkout-api-token\")) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\nfunction serializeNodeWithId(n, options) {\n  const {\n    doc,\n    mirror,\n    blockClass,\n    blockSelector,\n    unblockSelector,\n    maskAllText,\n    maskTextClass,\n    unmaskTextClass,\n    maskTextSelector,\n    unmaskTextSelector,\n    skipChild = false,\n    inlineStylesheet = true,\n    maskInputOptions = {},\n    maskAttributeFn,\n    maskTextFn,\n    maskInputFn,\n    slimDOMOptions,\n    dataURLOptions = {},\n    inlineImages = false,\n    recordCanvas = false,\n    onSerialize,\n    onIframeLoad,\n    iframeLoadTimeout = 5e3,\n    onStylesheetLoad,\n    stylesheetLoadTimeout = 5e3,\n    keepIframeSrcFn = () => false,\n    newlyAddedElement = false\n  } = options;\n  let { preserveWhiteSpace = true } = options;\n  const _serializedNode = serializeNode(n, {\n    doc,\n    mirror,\n    blockClass,\n    blockSelector,\n    maskAllText,\n    unblockSelector,\n    maskTextClass,\n    unmaskTextClass,\n    maskTextSelector,\n    unmaskTextSelector,\n    inlineStylesheet,\n    maskInputOptions,\n    maskAttributeFn,\n    maskTextFn,\n    maskInputFn,\n    dataURLOptions,\n    inlineImages,\n    recordCanvas,\n    keepIframeSrcFn,\n    newlyAddedElement\n  });\n  if (!_serializedNode) {\n    console.warn(n, \"not serialized\");\n    return null;\n  }\n  let id;\n  if (mirror.hasNode(n)) {\n    id = mirror.getId(n);\n  } else if (slimDOMExcluded(_serializedNode, slimDOMOptions) || !preserveWhiteSpace && _serializedNode.type === NodeType.Text && !_serializedNode.isStyle && !_serializedNode.textContent.replace(/^\\s+|\\s+$/gm, \"\").length) {\n    id = IGNORED_NODE;\n  } else {\n    id = genId();\n  }\n  const serializedNode2 = Object.assign(_serializedNode, { id });\n  mirror.add(n, serializedNode2);\n  if (id === IGNORED_NODE) {\n    return null;\n  }\n  if (onSerialize) {\n    onSerialize(n);\n  }\n  let recordChild = !skipChild;\n  if (serializedNode2.type === NodeType.Element) {\n    recordChild = recordChild && !serializedNode2.needBlock;\n    delete serializedNode2.needBlock;\n    const shadowRoot = n.shadowRoot;\n    if (shadowRoot && isNativeShadowDom(shadowRoot))\n      serializedNode2.isShadowHost = true;\n  }\n  if ((serializedNode2.type === NodeType.Document || serializedNode2.type === NodeType.Element) && recordChild) {\n    if (slimDOMOptions.headWhitespace && serializedNode2.type === NodeType.Element && serializedNode2.tagName === \"head\") {\n      preserveWhiteSpace = false;\n    }\n    const bypassOptions = {\n      doc,\n      mirror,\n      blockClass,\n      blockSelector,\n      maskAllText,\n      unblockSelector,\n      maskTextClass,\n      unmaskTextClass,\n      maskTextSelector,\n      unmaskTextSelector,\n      skipChild,\n      inlineStylesheet,\n      maskInputOptions,\n      maskAttributeFn,\n      maskTextFn,\n      maskInputFn,\n      slimDOMOptions,\n      dataURLOptions,\n      inlineImages,\n      recordCanvas,\n      preserveWhiteSpace,\n      onSerialize,\n      onIframeLoad,\n      iframeLoadTimeout,\n      onStylesheetLoad,\n      stylesheetLoadTimeout,\n      keepIframeSrcFn\n    };\n    for (const childN of Array.from(n.childNodes)) {\n      const serializedChildNode = serializeNodeWithId(childN, bypassOptions);\n      if (serializedChildNode) {\n        serializedNode2.childNodes.push(serializedChildNode);\n      }\n    }\n    if (isElement(n) && n.shadowRoot) {\n      for (const childN of Array.from(n.shadowRoot.childNodes)) {\n        const serializedChildNode = serializeNodeWithId(childN, bypassOptions);\n        if (serializedChildNode) {\n          isNativeShadowDom(n.shadowRoot) && (serializedChildNode.isShadow = true);\n          serializedNode2.childNodes.push(serializedChildNode);\n        }\n      }\n    }\n  }\n  if (n.parentNode && isShadowRoot(n.parentNode) && isNativeShadowDom(n.parentNode)) {\n    serializedNode2.isShadow = true;\n  }\n  if (serializedNode2.type === NodeType.Element && serializedNode2.tagName === \"iframe\" && !_isBlockedElement(\n    n,\n    blockClass,\n    blockSelector,\n    unblockSelector\n  )) {\n    onceIframeLoaded(\n      n,\n      () => {\n        const iframeDoc = getIframeContentDocument(n);\n        if (iframeDoc && onIframeLoad) {\n          const serializedIframeNode = serializeNodeWithId(iframeDoc, {\n            doc: iframeDoc,\n            mirror,\n            blockClass,\n            blockSelector,\n            unblockSelector,\n            maskAllText,\n            maskTextClass,\n            unmaskTextClass,\n            maskTextSelector,\n            unmaskTextSelector,\n            skipChild: false,\n            inlineStylesheet,\n            maskInputOptions,\n            maskAttributeFn,\n            maskTextFn,\n            maskInputFn,\n            slimDOMOptions,\n            dataURLOptions,\n            inlineImages,\n            recordCanvas,\n            preserveWhiteSpace,\n            onSerialize,\n            onIframeLoad,\n            iframeLoadTimeout,\n            onStylesheetLoad,\n            stylesheetLoadTimeout,\n            keepIframeSrcFn\n          });\n          if (serializedIframeNode) {\n            onIframeLoad(\n              n,\n              serializedIframeNode\n            );\n          }\n        }\n      },\n      iframeLoadTimeout\n    );\n  }\n  if (serializedNode2.type === NodeType.Element && serializedNode2.tagName === \"link\" && typeof serializedNode2.attributes.rel === \"string\" && (serializedNode2.attributes.rel === \"stylesheet\" || serializedNode2.attributes.rel === \"preload\" && typeof serializedNode2.attributes.href === \"string\" && extractFileExtension(serializedNode2.attributes.href) === \"css\")) {\n    onceStylesheetLoaded(\n      n,\n      () => {\n        if (onStylesheetLoad) {\n          const serializedLinkNode = serializeNodeWithId(n, {\n            doc,\n            mirror,\n            blockClass,\n            blockSelector,\n            unblockSelector,\n            maskAllText,\n            maskTextClass,\n            unmaskTextClass,\n            maskTextSelector,\n            unmaskTextSelector,\n            skipChild: false,\n            inlineStylesheet,\n            maskInputOptions,\n            maskAttributeFn,\n            maskTextFn,\n            maskInputFn,\n            slimDOMOptions,\n            dataURLOptions,\n            inlineImages,\n            recordCanvas,\n            preserveWhiteSpace,\n            onSerialize,\n            onIframeLoad,\n            iframeLoadTimeout,\n            onStylesheetLoad,\n            stylesheetLoadTimeout,\n            keepIframeSrcFn\n          });\n          if (serializedLinkNode) {\n            onStylesheetLoad(\n              n,\n              serializedLinkNode\n            );\n          }\n        }\n      },\n      stylesheetLoadTimeout\n    );\n  }\n  return serializedNode2;\n}\nfunction snapshot(n, options) {\n  const {\n    mirror = new Mirror(),\n    blockClass = \"rr-block\",\n    blockSelector = null,\n    unblockSelector = null,\n    maskAllText = false,\n    maskTextClass = \"rr-mask\",\n    unmaskTextClass = null,\n    maskTextSelector = null,\n    unmaskTextSelector = null,\n    inlineStylesheet = true,\n    inlineImages = false,\n    recordCanvas = false,\n    maskAllInputs = false,\n    maskAttributeFn,\n    maskTextFn,\n    maskInputFn,\n    slimDOM = false,\n    dataURLOptions,\n    preserveWhiteSpace,\n    onSerialize,\n    onIframeLoad,\n    iframeLoadTimeout,\n    onStylesheetLoad,\n    stylesheetLoadTimeout,\n    keepIframeSrcFn = () => false\n  } = options || {};\n  const maskInputOptions = maskAllInputs === true ? {\n    color: true,\n    date: true,\n    \"datetime-local\": true,\n    email: true,\n    month: true,\n    number: true,\n    range: true,\n    search: true,\n    tel: true,\n    text: true,\n    time: true,\n    url: true,\n    week: true,\n    textarea: true,\n    select: true\n  } : maskAllInputs === false ? {} : maskAllInputs;\n  const slimDOMOptions = slimDOM === true || slimDOM === \"all\" ? (\n    // if true: set of sensible options that should not throw away any information\n    {\n      script: true,\n      comment: true,\n      headFavicon: true,\n      headWhitespace: true,\n      headMetaDescKeywords: slimDOM === \"all\",\n      // destructive\n      headMetaSocial: true,\n      headMetaRobots: true,\n      headMetaHttpEquiv: true,\n      headMetaAuthorship: true,\n      headMetaVerification: true\n    }\n  ) : slimDOM === false ? {} : slimDOM;\n  return serializeNodeWithId(n, {\n    doc: n,\n    mirror,\n    blockClass,\n    blockSelector,\n    unblockSelector,\n    maskAllText,\n    maskTextClass,\n    unmaskTextClass,\n    maskTextSelector,\n    unmaskTextSelector,\n    skipChild: false,\n    inlineStylesheet,\n    maskInputOptions,\n    maskAttributeFn,\n    maskTextFn,\n    maskInputFn,\n    slimDOMOptions,\n    dataURLOptions,\n    inlineImages,\n    recordCanvas,\n    preserveWhiteSpace,\n    onSerialize,\n    onIframeLoad,\n    iframeLoadTimeout,\n    onStylesheetLoad,\n    stylesheetLoadTimeout,\n    keepIframeSrcFn,\n    newlyAddedElement: false\n  });\n}\nfunction visitSnapshot(node, onVisit) {\n  function walk(current) {\n    onVisit(current);\n    if (current.type === NodeType.Document || current.type === NodeType.Element) {\n      current.childNodes.forEach(walk);\n    }\n  }\n  walk(node);\n}\nfunction cleanupSnapshot() {\n  _id = 1;\n}\nconst commentre = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\nfunction parse(css, options = {}) {\n  let lineno = 1;\n  let column = 1;\n  function updatePosition(str) {\n    const lines = str.match(/\\n/g);\n    if (lines) {\n      lineno += lines.length;\n    }\n    const i = str.lastIndexOf(\"\\n\");\n    column = i === -1 ? column + str.length : str.length - i;\n  }\n  function position() {\n    const start = { line: lineno, column };\n    return (node) => {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n  const _Position = class _Position {\n    constructor(start) {\n      __publicField(this, \"content\");\n      __publicField(this, \"start\");\n      __publicField(this, \"end\");\n      __publicField(this, \"source\");\n      this.start = start;\n      this.end = { line: lineno, column };\n      this.source = options.source;\n      this.content = _Position.content;\n    }\n  };\n  __publicField(_Position, \"content\");\n  let Position = _Position;\n  Position.content = css;\n  const errorsList = [];\n  function error(msg) {\n    const err = new Error(\n      `${options.source || \"\"}:${lineno}:${column}: ${msg}`\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = css;\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n  function stylesheet() {\n    const rulesList = rules();\n    return {\n      type: \"stylesheet\",\n      stylesheet: {\n        source: options.source,\n        rules: rulesList,\n        parsingErrors: errorsList\n      }\n    };\n  }\n  function open() {\n    return match(/^{\\s*/);\n  }\n  function close() {\n    return match(/^}/);\n  }\n  function rules() {\n    let node;\n    const rules2 = [];\n    whitespace();\n    comments(rules2);\n    while (css.length && css.charAt(0) !== \"}\" && (node = atrule() || rule())) {\n      if (node) {\n        rules2.push(node);\n        comments(rules2);\n      }\n    }\n    return rules2;\n  }\n  function match(re) {\n    const m = re.exec(css);\n    if (!m) {\n      return;\n    }\n    const str = m[0];\n    updatePosition(str);\n    css = css.slice(str.length);\n    return m;\n  }\n  function whitespace() {\n    match(/^\\s*/);\n  }\n  function comments(rules2 = []) {\n    let c;\n    while (c = comment()) {\n      if (c) {\n        rules2.push(c);\n      }\n      c = comment();\n    }\n    return rules2;\n  }\n  function comment() {\n    const pos = position();\n    if (\"/\" !== css.charAt(0) || \"*\" !== css.charAt(1)) {\n      return;\n    }\n    let i = 2;\n    while (\"\" !== css.charAt(i) && (\"*\" !== css.charAt(i) || \"/\" !== css.charAt(i + 1))) {\n      ++i;\n    }\n    i += 2;\n    if (\"\" === css.charAt(i - 1)) {\n      return error(\"End of comment missing\");\n    }\n    const str = css.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    css = css.slice(i);\n    column += 2;\n    return pos({\n      type: \"comment\",\n      comment: str\n    });\n  }\n  function selector() {\n    const m = match(/^([^{]+)/);\n    if (!m) {\n      return;\n    }\n    const splitSelectors = trim(m[0]).replace(/\\/\\*([^*]|[\\r\\n]|(\\*+([^*/]|[\\r\\n])))*\\*\\/+/g, \"\").replace(/\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'/g, (m2) => {\n      return m2.replace(/,/g, \"‌\");\n    }).split(/\\s*(?![^(]*\\)),\\s*/);\n    if (splitSelectors.length <= 1) {\n      return splitSelectors.map((s) => {\n        return s.replace(/\\u200C/g, \",\");\n      });\n    }\n    let i = 0;\n    let j = 0;\n    const len = splitSelectors.length;\n    const finalSelectors = [];\n    while (i < len) {\n      const openingParensCount = (splitSelectors[i].match(/\\(/g) || []).length;\n      const closingParensCount = (splitSelectors[i].match(/\\)/g) || []).length;\n      let unbalancedParens = openingParensCount - closingParensCount;\n      if (unbalancedParens >= 1) {\n        let foundClosingSelector = false;\n        j = i + 1;\n        while (j < len) {\n          const nextOpeningParensCount = (splitSelectors[j].match(/\\(/g) || []).length;\n          const nextClosingParensCount = (splitSelectors[j].match(/\\)/g) || []).length;\n          const nextUnbalancedParens = nextClosingParensCount - nextOpeningParensCount;\n          if (nextUnbalancedParens === unbalancedParens) {\n            finalSelectors.push(splitSelectors.slice(i, j + 1).join(\",\"));\n            i = j + 1;\n            foundClosingSelector = true;\n            break;\n          }\n          j++;\n          unbalancedParens -= nextUnbalancedParens;\n        }\n        if (foundClosingSelector) {\n          continue;\n        }\n        splitSelectors.slice(i, len).forEach((selector2) => selector2 && finalSelectors.push(selector2));\n        break;\n      }\n      splitSelectors[i] && finalSelectors.push(splitSelectors[i]);\n      i++;\n    }\n    return finalSelectors.map((s) => {\n      return s.replace(/\\u200C/g, \",\");\n    });\n  }\n  function declaration() {\n    const pos = position();\n    const propMatch = match(/^(\\*?[-#\\/\\*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/);\n    if (!propMatch) {\n      return;\n    }\n    const prop = trim(propMatch[0]);\n    if (!match(/^:\\s*/)) {\n      return error(`property missing ':'`);\n    }\n    const val = match(/^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^\\)]*?\\)|[^};])+)/);\n    const ret = pos({\n      type: \"declaration\",\n      property: prop.replace(commentre, \"\"),\n      value: val ? trim(val[0]).replace(commentre, \"\") : \"\"\n    });\n    match(/^[;\\s]*/);\n    return ret;\n  }\n  function declarations() {\n    const decls = [];\n    if (!open()) {\n      return error(`missing '{'`);\n    }\n    comments(decls);\n    let decl;\n    while (decl = declaration()) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n      decl = declaration();\n    }\n    if (!close()) {\n      return error(`missing '}'`);\n    }\n    return decls;\n  }\n  function keyframe() {\n    let m;\n    const vals = [];\n    const pos = position();\n    while (m = match(/^((\\d+\\.\\d+|\\.\\d+|\\d+)%?|[a-z]+)\\s*/)) {\n      vals.push(m[1]);\n      match(/^,\\s*/);\n    }\n    if (!vals.length) {\n      return;\n    }\n    return pos({\n      type: \"keyframe\",\n      values: vals,\n      declarations: declarations()\n    });\n  }\n  function atkeyframes() {\n    const pos = position();\n    let m = match(/^@([-\\w]+)?keyframes\\s*/);\n    if (!m) {\n      return;\n    }\n    const vendor = m[1];\n    m = match(/^([-\\w]+)\\s*/);\n    if (!m) {\n      return error(\"@keyframes missing name\");\n    }\n    const name = m[1];\n    if (!open()) {\n      return error(`@keyframes missing '{'`);\n    }\n    let frame;\n    let frames = comments();\n    while (frame = keyframe()) {\n      frames.push(frame);\n      frames = frames.concat(comments());\n    }\n    if (!close()) {\n      return error(`@keyframes missing '}'`);\n    }\n    return pos({\n      type: \"keyframes\",\n      name,\n      vendor,\n      keyframes: frames\n    });\n  }\n  function atsupports() {\n    const pos = position();\n    const m = match(/^@supports *([^{]+)/);\n    if (!m) {\n      return;\n    }\n    const supports = trim(m[1]);\n    if (!open()) {\n      return error(`@supports missing '{'`);\n    }\n    const style = comments().concat(rules());\n    if (!close()) {\n      return error(`@supports missing '}'`);\n    }\n    return pos({\n      type: \"supports\",\n      supports,\n      rules: style\n    });\n  }\n  function athost() {\n    const pos = position();\n    const m = match(/^@host\\s*/);\n    if (!m) {\n      return;\n    }\n    if (!open()) {\n      return error(`@host missing '{'`);\n    }\n    const style = comments().concat(rules());\n    if (!close()) {\n      return error(`@host missing '}'`);\n    }\n    return pos({\n      type: \"host\",\n      rules: style\n    });\n  }\n  function atmedia() {\n    const pos = position();\n    const m = match(/^@media *([^{]+)/);\n    if (!m) {\n      return;\n    }\n    const media = trim(m[1]);\n    if (!open()) {\n      return error(`@media missing '{'`);\n    }\n    const style = comments().concat(rules());\n    if (!close()) {\n      return error(`@media missing '}'`);\n    }\n    return pos({\n      type: \"media\",\n      media,\n      rules: style\n    });\n  }\n  function atcustommedia() {\n    const pos = position();\n    const m = match(/^@custom-media\\s+(--[^\\s]+)\\s*([^{;]+);/);\n    if (!m) {\n      return;\n    }\n    return pos({\n      type: \"custom-media\",\n      name: trim(m[1]),\n      media: trim(m[2])\n    });\n  }\n  function atpage() {\n    const pos = position();\n    const m = match(/^@page */);\n    if (!m) {\n      return;\n    }\n    const sel = selector() || [];\n    if (!open()) {\n      return error(`@page missing '{'`);\n    }\n    let decls = comments();\n    let decl;\n    while (decl = declaration()) {\n      decls.push(decl);\n      decls = decls.concat(comments());\n    }\n    if (!close()) {\n      return error(`@page missing '}'`);\n    }\n    return pos({\n      type: \"page\",\n      selectors: sel,\n      declarations: decls\n    });\n  }\n  function atdocument() {\n    const pos = position();\n    const m = match(/^@([-\\w]+)?document *([^{]+)/);\n    if (!m) {\n      return;\n    }\n    const vendor = trim(m[1]);\n    const doc = trim(m[2]);\n    if (!open()) {\n      return error(`@document missing '{'`);\n    }\n    const style = comments().concat(rules());\n    if (!close()) {\n      return error(`@document missing '}'`);\n    }\n    return pos({\n      type: \"document\",\n      document: doc,\n      vendor,\n      rules: style\n    });\n  }\n  function atfontface() {\n    const pos = position();\n    const m = match(/^@font-face\\s*/);\n    if (!m) {\n      return;\n    }\n    if (!open()) {\n      return error(`@font-face missing '{'`);\n    }\n    let decls = comments();\n    let decl;\n    while (decl = declaration()) {\n      decls.push(decl);\n      decls = decls.concat(comments());\n    }\n    if (!close()) {\n      return error(`@font-face missing '}'`);\n    }\n    return pos({\n      type: \"font-face\",\n      declarations: decls\n    });\n  }\n  const atimport = _compileAtrule(\"import\");\n  const atcharset = _compileAtrule(\"charset\");\n  const atnamespace = _compileAtrule(\"namespace\");\n  function _compileAtrule(name) {\n    const re = new RegExp(\n      \"^@\" + name + \"\\\\s*((?:\" + [\n        /[^\\\\]\"(?:\\\\\"|[^\"])*\"/.source,\n        // consume any quoted parts (checking that the double quote isn't itself escaped)\n        /[^\\\\]'(?:\\\\'|[^'])*'/.source,\n        // same but for single quotes\n        \"[^;]\"\n      ].join(\"|\") + \")+);\"\n    );\n    return () => {\n      const pos = position();\n      const m = match(re);\n      if (!m) {\n        return;\n      }\n      const ret = { type: name };\n      ret[name] = m[1].trim();\n      return pos(ret);\n    };\n  }\n  function atrule() {\n    if (css[0] !== \"@\") {\n      return;\n    }\n    return atkeyframes() || atmedia() || atcustommedia() || atsupports() || atimport() || atcharset() || atnamespace() || atdocument() || atpage() || athost() || atfontface();\n  }\n  function rule() {\n    const pos = position();\n    const sel = selector();\n    if (!sel) {\n      return error(\"selector missing\");\n    }\n    comments();\n    return pos({\n      type: \"rule\",\n      selectors: sel,\n      declarations: declarations()\n    });\n  }\n  return addParent(stylesheet());\n}\nfunction trim(str) {\n  return str ? str.replace(/^\\s+|\\s+$/g, \"\") : \"\";\n}\nfunction addParent(obj, parent) {\n  const isNode = obj && typeof obj.type === \"string\";\n  const childParent = isNode ? obj : parent;\n  for (const k of Object.keys(obj)) {\n    const value = obj[k];\n    if (Array.isArray(value)) {\n      value.forEach((v) => {\n        addParent(v, childParent);\n      });\n    } else if (value && typeof value === \"object\") {\n      addParent(value, childParent);\n    }\n  }\n  if (isNode) {\n    Object.defineProperty(obj, \"parent\", {\n      configurable: true,\n      writable: true,\n      enumerable: false,\n      value: parent || null\n    });\n  }\n  return obj;\n}\nconst tagMap = {\n  script: \"noscript\",\n  // camel case svg element tag names\n  altglyph: \"altGlyph\",\n  altglyphdef: \"altGlyphDef\",\n  altglyphitem: \"altGlyphItem\",\n  animatecolor: \"animateColor\",\n  animatemotion: \"animateMotion\",\n  animatetransform: \"animateTransform\",\n  clippath: \"clipPath\",\n  feblend: \"feBlend\",\n  fecolormatrix: \"feColorMatrix\",\n  fecomponenttransfer: \"feComponentTransfer\",\n  fecomposite: \"feComposite\",\n  feconvolvematrix: \"feConvolveMatrix\",\n  fediffuselighting: \"feDiffuseLighting\",\n  fedisplacementmap: \"feDisplacementMap\",\n  fedistantlight: \"feDistantLight\",\n  fedropshadow: \"feDropShadow\",\n  feflood: \"feFlood\",\n  fefunca: \"feFuncA\",\n  fefuncb: \"feFuncB\",\n  fefuncg: \"feFuncG\",\n  fefuncr: \"feFuncR\",\n  fegaussianblur: \"feGaussianBlur\",\n  feimage: \"feImage\",\n  femerge: \"feMerge\",\n  femergenode: \"feMergeNode\",\n  femorphology: \"feMorphology\",\n  feoffset: \"feOffset\",\n  fepointlight: \"fePointLight\",\n  fespecularlighting: \"feSpecularLighting\",\n  fespotlight: \"feSpotLight\",\n  fetile: \"feTile\",\n  feturbulence: \"feTurbulence\",\n  foreignobject: \"foreignObject\",\n  glyphref: \"glyphRef\",\n  lineargradient: \"linearGradient\",\n  radialgradient: \"radialGradient\"\n};\nfunction getTagName(n) {\n  let tagName = tagMap[n.tagName] ? tagMap[n.tagName] : n.tagName;\n  if (tagName === \"link\" && n.attributes._cssText) {\n    tagName = \"style\";\n  }\n  return tagName;\n}\nfunction escapeRegExp(str) {\n  return str.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n}\nconst HOVER_SELECTOR = /([^\\\\]):hover/;\nconst HOVER_SELECTOR_GLOBAL = new RegExp(HOVER_SELECTOR.source, \"g\");\nfunction addHoverClass(cssText, cache) {\n  const cachedStyle = cache?.stylesWithHoverClass.get(cssText);\n  if (cachedStyle) return cachedStyle;\n  if (cssText.length >= 1e6) {\n    return cssText;\n  }\n  const ast = parse(cssText, {\n    silent: true\n  });\n  if (!ast.stylesheet) {\n    return cssText;\n  }\n  const selectors = [];\n  ast.stylesheet.rules.forEach((rule) => {\n    if (\"selectors\" in rule) {\n      (rule.selectors || []).forEach((selector) => {\n        if (HOVER_SELECTOR.test(selector)) {\n          selectors.push(selector);\n        }\n      });\n    }\n  });\n  if (selectors.length === 0) {\n    return cssText;\n  }\n  const selectorMatcher = new RegExp(\n    selectors.filter((selector, index) => selectors.indexOf(selector) === index).sort((a, b) => b.length - a.length).map((selector) => {\n      return escapeRegExp(selector);\n    }).join(\"|\"),\n    \"g\"\n  );\n  const result = cssText.replace(selectorMatcher, (selector) => {\n    const newSelector = selector.replace(HOVER_SELECTOR_GLOBAL, \"$1.\\\\:hover\");\n    return `${selector}, ${newSelector}`;\n  });\n  cache?.stylesWithHoverClass.set(cssText, result);\n  return result;\n}\nfunction createCache() {\n  const stylesWithHoverClass = /* @__PURE__ */ new Map();\n  return {\n    stylesWithHoverClass\n  };\n}\nfunction buildNode(n, options) {\n  const { doc, hackCss, cache } = options;\n  switch (n.type) {\n    case NodeType.Document:\n      return doc.implementation.createDocument(null, \"\", null);\n    case NodeType.DocumentType:\n      return doc.implementation.createDocumentType(\n        n.name || \"html\",\n        n.publicId,\n        n.systemId\n      );\n    case NodeType.Element: {\n      const tagName = getTagName(n);\n      let node;\n      if (n.isSVG) {\n        node = doc.createElementNS(\"http://www.w3.org/2000/svg\", tagName);\n      } else {\n        if (\n          // If the tag name is a custom element name\n          n.isCustom && // If the browser supports custom elements\n          doc.defaultView?.customElements && // If the custom element hasn't been defined yet\n          !doc.defaultView.customElements.get(n.tagName)\n        )\n          doc.defaultView.customElements.define(\n            n.tagName,\n            class extends doc.defaultView.HTMLElement {\n            }\n          );\n        node = doc.createElement(tagName);\n      }\n      const specialAttributes = {};\n      for (const name in n.attributes) {\n        if (!Object.prototype.hasOwnProperty.call(n.attributes, name)) {\n          continue;\n        }\n        let value = n.attributes[name];\n        if (tagName === \"option\" && name === \"selected\" && value === false) {\n          continue;\n        }\n        if (value === null) {\n          continue;\n        }\n        if (value === true) value = \"\";\n        if (name.startsWith(\"rr_\")) {\n          specialAttributes[name] = value;\n          continue;\n        }\n        const isTextarea = tagName === \"textarea\" && name === \"value\";\n        const isRemoteOrDynamicCss = tagName === \"style\" && name === \"_cssText\";\n        if (isRemoteOrDynamicCss && hackCss && typeof value === \"string\") {\n          value = addHoverClass(value, cache);\n        }\n        if ((isTextarea || isRemoteOrDynamicCss) && typeof value === \"string\") {\n          const child = doc.createTextNode(value);\n          for (const c of Array.from(node.childNodes)) {\n            if (c.nodeType === node.TEXT_NODE) {\n              node.removeChild(c);\n            }\n          }\n          node.appendChild(child);\n          continue;\n        }\n        try {\n          if (n.isSVG && name === \"xlink:href\") {\n            node.setAttributeNS(\n              \"http://www.w3.org/1999/xlink\",\n              name,\n              value.toString()\n            );\n          } else if (name === \"onload\" || name === \"onclick\" || name.substring(0, 7) === \"onmouse\") {\n            node.setAttribute(\"_\" + name, value.toString());\n          } else if (tagName === \"meta\" && n.attributes[\"http-equiv\"] === \"Content-Security-Policy\" && name === \"content\") {\n            node.setAttribute(\"csp-content\", value.toString());\n            continue;\n          } else if (tagName === \"link\" && (n.attributes.rel === \"preload\" || n.attributes.rel === \"modulepreload\")) {\n          } else if (tagName === \"link\" && n.attributes.rel === \"prefetch\" && typeof n.attributes.href === \"string\" && extractFileExtension(n.attributes.href) === \"js\") {\n          } else if (tagName === \"img\" && n.attributes.srcset && n.attributes.rr_dataURL) {\n            node.setAttribute(\n              \"rrweb-original-srcset\",\n              n.attributes.srcset\n            );\n          } else {\n            node.setAttribute(name, value.toString());\n          }\n        } catch (error) {\n        }\n      }\n      for (const name in specialAttributes) {\n        const value = specialAttributes[name];\n        if (tagName === \"canvas\" && name === \"rr_dataURL\") {\n          const image = doc.createElement(\"img\");\n          image.onload = () => {\n            const ctx = node.getContext(\"2d\");\n            if (ctx) {\n              ctx.drawImage(image, 0, 0, image.width, image.height);\n            }\n          };\n          image.src = value.toString();\n          if (node.RRNodeType)\n            node.rr_dataURL = value.toString();\n        } else if (tagName === \"img\" && name === \"rr_dataURL\") {\n          const image = node;\n          if (!image.currentSrc.startsWith(\"data:\")) {\n            image.setAttribute(\n              \"rrweb-original-src\",\n              n.attributes.src\n            );\n            image.src = value.toString();\n          }\n        }\n        if (name === \"rr_width\") {\n          node.style.setProperty(\"width\", value.toString());\n        } else if (name === \"rr_height\") {\n          node.style.setProperty(\"height\", value.toString());\n        } else if (name === \"rr_mediaCurrentTime\" && typeof value === \"number\") {\n          node.currentTime = value;\n        } else if (name === \"rr_mediaState\") {\n          switch (value) {\n            case \"played\":\n              node.play().catch((e) => console.warn(\"media playback error\", e));\n              break;\n            case \"paused\":\n              node.pause();\n              break;\n          }\n        }\n      }\n      if (n.isShadowHost) {\n        if (!node.shadowRoot) {\n          node.attachShadow({ mode: \"open\" });\n        } else {\n          while (node.shadowRoot.firstChild) {\n            node.shadowRoot.removeChild(node.shadowRoot.firstChild);\n          }\n        }\n      }\n      return node;\n    }\n    case NodeType.Text:\n      return doc.createTextNode(\n        n.isStyle && hackCss ? addHoverClass(n.textContent, cache) : n.textContent\n      );\n    case NodeType.CDATA:\n      if (!(doc instanceof XMLDocument)) {\n        return null;\n      }\n      return doc.createCDATASection(n.textContent);\n    case NodeType.Comment:\n      return doc.createComment(n.textContent);\n    default:\n      return null;\n  }\n}\nfunction buildNodeWithSN(n, options) {\n  const {\n    doc,\n    mirror,\n    skipChild = false,\n    hackCss = true,\n    afterAppend,\n    cache\n  } = options;\n  if (mirror.has(n.id)) {\n    const nodeInMirror = mirror.getNode(n.id);\n    const meta = mirror.getMeta(nodeInMirror);\n    if (isNodeMetaEqual(meta, n)) return mirror.getNode(n.id);\n  }\n  let node = buildNode(n, { doc, hackCss, cache });\n  if (!node) {\n    return null;\n  }\n  if (n.rootId && mirror.getNode(n.rootId) !== doc) {\n    mirror.replace(n.rootId, doc);\n  }\n  if (n.type === NodeType.Document) {\n    doc.close();\n    doc.open();\n    if (n.compatMode === \"BackCompat\" && n.childNodes && n.childNodes[0].type !== NodeType.DocumentType) {\n      if (n.childNodes[0].type === NodeType.Element && \"xmlns\" in n.childNodes[0].attributes && n.childNodes[0].attributes.xmlns === \"http://www.w3.org/1999/xhtml\") {\n        doc.write(\n          '<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"\">'\n        );\n      } else {\n        doc.write(\n          '<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"\">'\n        );\n      }\n    }\n    node = doc;\n  }\n  mirror.add(node, n);\n  if ((n.type === NodeType.Document || n.type === NodeType.Element) && !skipChild) {\n    for (const childN of n.childNodes) {\n      const childNode = buildNodeWithSN(childN, {\n        doc,\n        mirror,\n        skipChild: false,\n        hackCss,\n        afterAppend,\n        cache\n      });\n      if (!childNode) {\n        console.warn(\"Failed to rebuild\", childN);\n        continue;\n      }\n      if (childN.isShadow && isElement(node) && node.shadowRoot) {\n        node.shadowRoot.appendChild(childNode);\n      } else if (n.type === NodeType.Document && childN.type == NodeType.Element) {\n        const htmlElement = childNode;\n        let body = null;\n        htmlElement.childNodes.forEach((child) => {\n          if (child.nodeName === \"BODY\") body = child;\n        });\n        if (body) {\n          htmlElement.removeChild(body);\n          node.appendChild(childNode);\n          htmlElement.appendChild(body);\n        } else {\n          node.appendChild(childNode);\n        }\n      } else {\n        node.appendChild(childNode);\n      }\n      if (afterAppend) {\n        afterAppend(childNode, childN.id);\n      }\n    }\n  }\n  return node;\n}\nfunction visit(mirror, onVisit) {\n  function walk(node) {\n    onVisit(node);\n  }\n  for (const id of mirror.getIds()) {\n    if (mirror.has(id)) {\n      walk(mirror.getNode(id));\n    }\n  }\n}\nfunction handleScroll(node, mirror) {\n  const n = mirror.getMeta(node);\n  if (n?.type !== NodeType.Element) {\n    return;\n  }\n  const el = node;\n  for (const name in n.attributes) {\n    if (!(Object.prototype.hasOwnProperty.call(n.attributes, name) && name.startsWith(\"rr_\"))) {\n      continue;\n    }\n    const value = n.attributes[name];\n    if (name === \"rr_scrollLeft\") {\n      el.scrollLeft = value;\n    }\n    if (name === \"rr_scrollTop\") {\n      el.scrollTop = value;\n    }\n  }\n}\nfunction rebuild(n, options) {\n  const {\n    doc,\n    onVisit,\n    hackCss = true,\n    afterAppend,\n    cache,\n    mirror = new Mirror()\n  } = options;\n  const node = buildNodeWithSN(n, {\n    doc,\n    mirror,\n    skipChild: false,\n    hackCss,\n    afterAppend,\n    cache\n  });\n  visit(mirror, (visitedNode) => {\n    if (onVisit) {\n      onVisit(visitedNode);\n    }\n    handleScroll(visitedNode, mirror);\n  });\n  return node;\n}\nexport {\n  IGNORED_NODE,\n  Mirror,\n  NodeType,\n  addHoverClass,\n  buildNodeWithSN,\n  classMatchesRegex,\n  cleanupSnapshot,\n  clearTimeout,\n  createCache,\n  createMatchPredicate,\n  createMirror,\n  distanceToMatch,\n  escapeImportStatement,\n  extractFileExtension,\n  fixAllCssProperty,\n  fixSafariColons,\n  genId,\n  getIframeContentDocument,\n  getInputType,\n  getInputValue,\n  ignoreAttribute,\n  is2DCanvasBlank,\n  isCSSImportRule,\n  isCSSStyleRule,\n  isElement,\n  isNativeShadowDom,\n  isNodeMetaEqual,\n  isShadowRoot,\n  maskInputValue,\n  needMaskingText,\n  onRequestAnimationFrame,\n  rebuild,\n  serializeNodeWithId,\n  setTimeout,\n  shouldMaskInput,\n  snapshot,\n  stringifyRule,\n  stringifyStylesheet,\n  toLowerCase,\n  toUpperCase,\n  transformAttribute,\n  visitSnapshot\n};\n//# sourceMappingURL=rrweb-snapshot.js.map\n","// Note that these are the serialized attributes and not attributes directly on\n// the DOM Node. Attributes we are interested in:\nconst ATTRIBUTES_TO_RECORD = new Set([\n  'id',\n  'class',\n  'aria-label',\n  'role',\n  'name',\n  'alt',\n  'title',\n  'data-test-id',\n  'data-testid',\n  'disabled',\n  'aria-disabled',\n  'data-sentry-component',\n]);\n\n/**\n * Inclusion list of attributes that we want to record from the DOM element\n */\nexport function getAttributesToRecord(attributes: Record<string, unknown>): Record<string, unknown> {\n  const obj: Record<string, unknown> = {};\n  if (!attributes['data-sentry-component'] && attributes['data-sentry-element']) {\n    attributes['data-sentry-component'] = attributes['data-sentry-element'];\n  }\n  for (const key in attributes) {\n    if (ATTRIBUTES_TO_RECORD.has(key)) {\n      let normalizedKey = key;\n\n      if (key === 'data-testid' || key === 'data-test-id') {\n        normalizedKey = 'testId';\n      }\n\n      obj[normalizedKey] = attributes[key];\n    }\n  }\n\n  return obj;\n}\n","import type { Breadcrumb, HandlerDataDom } from '@sentry/core';\nimport { htmlTreeAsString } from '@sentry/core';\nimport { record } from '@sentry-internal/rrweb';\nimport type { serializedElementNodeWithId, serializedNodeWithId } from '@sentry-internal/rrweb-snapshot';\nimport { NodeType } from '@sentry-internal/rrweb-snapshot';\nimport type { ReplayContainer } from '../types';\nimport { createBreadcrumb } from '../util/createBreadcrumb';\nimport { handleClick } from './handleClick';\nimport { addBreadcrumbEvent } from './util/addBreadcrumbEvent';\nimport { getClickTargetNode, getTargetNode } from './util/domUtils';\nimport { getAttributesToRecord } from './util/getAttributesToRecord';\n\nexport const handleDomListener: (replay: ReplayContainer) => (handlerData: HandlerDataDom) => void = (\n  replay: ReplayContainer,\n) => {\n  return (handlerData: HandlerDataDom): void => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleDom(handlerData);\n\n    if (!result) {\n      return;\n    }\n\n    const isClick = handlerData.name === 'click';\n    const event = isClick ? (handlerData.event as PointerEvent) : undefined;\n    // Ignore clicks if ctrl/alt/meta/shift keys are held down as they alter behavior of clicks (e.g. open in new tab)\n    if (\n      isClick &&\n      replay.clickDetector &&\n      event?.target &&\n      !event.altKey &&\n      !event.metaKey &&\n      !event.ctrlKey &&\n      !event.shiftKey\n    ) {\n      handleClick(\n        replay.clickDetector,\n        result as Breadcrumb & { timestamp: number; data: { nodeId: number } },\n        getClickTargetNode(handlerData.event as Event) as HTMLElement,\n      );\n    }\n\n    addBreadcrumbEvent(replay, result);\n  };\n};\n\n/** Get the base DOM breadcrumb. */\nexport function getBaseDomBreadcrumb(target: Node | null, message: string): Breadcrumb {\n  const nodeId = record.mirror.getId(target);\n  const node = nodeId && record.mirror.getNode(nodeId);\n  const meta = node && record.mirror.getMeta(node);\n  const element = meta && isElement(meta) ? meta : null;\n\n  return {\n    message,\n    data: element\n      ? {\n          nodeId,\n          node: {\n            id: nodeId,\n            tagName: element.tagName,\n            textContent: Array.from(element.childNodes)\n              .map((node: serializedNodeWithId) => node.type === NodeType.Text && node.textContent)\n              .filter(Boolean) // filter out empty values\n              .map(text => (text as string).trim())\n              .join(''),\n            attributes: getAttributesToRecord(element.attributes),\n          },\n        }\n      : {},\n  };\n}\n\n/**\n * An event handler to react to DOM events.\n * Exported for tests.\n */\nexport function handleDom(handlerData: HandlerDataDom): Breadcrumb | null {\n  const { target, message } = getDomTarget(handlerData);\n\n  return createBreadcrumb({\n    category: `ui.${handlerData.name}`,\n    ...getBaseDomBreadcrumb(target, message),\n  });\n}\n\nfunction getDomTarget(handlerData: HandlerDataDom): { target: Node | null; message: string } {\n  const isClick = handlerData.name === 'click';\n\n  let message: string | undefined;\n  let target: Node | null = null;\n\n  // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n  try {\n    target = isClick ? getClickTargetNode(handlerData.event as Event) : getTargetNode(handlerData.event as Event);\n    message = htmlTreeAsString(target, { maxStringLength: 200 }) || '<unknown>';\n  } catch {\n    message = '<unknown>';\n  }\n\n  return { target, message };\n}\n\nfunction isElement(node: serializedNodeWithId): node is serializedElementNodeWithId {\n  return node.type === NodeType.Element;\n}\n","import type { Breadcrumb } from '@sentry/core';\nimport { htmlTreeAsString } from '@sentry/core';\nimport type { ReplayContainer } from '../types';\nimport { createBreadcrumb } from '../util/createBreadcrumb';\nimport { getBaseDomBreadcrumb } from './handleDom';\nimport { addBreadcrumbEvent } from './util/addBreadcrumbEvent';\n\n/** Handle keyboard events & create breadcrumbs. */\nexport function handleKeyboardEvent(replay: ReplayContainer, event: KeyboardEvent): void {\n  if (!replay.isEnabled()) {\n    return;\n  }\n\n  // Update user activity, but do not restart recording as it can create\n  // noisy/low-value replays (e.g. user comes back from idle, hits alt-tab, new\n  // session with a single \"keydown\" breadcrumb is created)\n  replay.updateUserActivity();\n\n  const breadcrumb = getKeyboardBreadcrumb(event);\n\n  if (!breadcrumb) {\n    return;\n  }\n\n  addBreadcrumbEvent(replay, breadcrumb);\n}\n\n/** exported only for tests */\nexport function getKeyboardBreadcrumb(event: KeyboardEvent): Breadcrumb | null {\n  const { metaKey, shiftKey, ctrlKey, altKey, key, target } = event;\n\n  // never capture for input fields\n  if (!target || isInputElement(target as HTMLElement) || !key) {\n    return null;\n  }\n\n  // Note: We do not consider shift here, as that means \"uppercase\"\n  const hasModifierKey = metaKey || ctrlKey || altKey;\n  const isCharacterKey = key.length === 1; // other keys like Escape, Tab, etc have a longer length\n\n  // Do not capture breadcrumb if only a word key is pressed\n  // This could leak e.g. user input\n  if (!hasModifierKey && isCharacterKey) {\n    return null;\n  }\n\n  const message = htmlTreeAsString(target, { maxStringLength: 200 }) || '<unknown>';\n  const baseBreadcrumb = getBaseDomBreadcrumb(target as Node, message);\n\n  return createBreadcrumb({\n    category: 'ui.keyDown',\n    message,\n    data: {\n      ...baseBreadcrumb.data,\n      metaKey,\n      shiftKey,\n      ctrlKey,\n      altKey,\n      key,\n    },\n  });\n}\n\nfunction isInputElement(target: HTMLElement): boolean {\n  return target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable;\n}\n","import { browserPerformanceTimeOrigin } from '@sentry/core';\nimport { record } from '@sentry-internal/rrweb';\nimport { WINDOW } from '../constants';\nimport type {\n  AllPerformanceEntry,\n  AllPerformanceEntryData,\n  ExperimentalPerformanceResourceTiming,\n  NavigationData,\n  PaintData,\n  ReplayContainer,\n  ReplayPerformanceEntry,\n  ResourceData,\n  WebVitalData,\n} from '../types';\n\n// Map entryType -> function to normalize data for event\nconst ENTRY_TYPES: Record<\n  string,\n  (entry: AllPerformanceEntry) => null | ReplayPerformanceEntry<AllPerformanceEntryData>\n> = {\n  // @ts-expect-error TODO: entry type does not fit the create* functions entry type\n  resource: createResourceEntry,\n  paint: createPaintEntry,\n  // @ts-expect-error TODO: entry type does not fit the create* functions entry type\n  navigation: createNavigationEntry,\n};\n\nexport interface Metric {\n  /**\n   * The current value of the metric.\n   */\n  value: number;\n\n  /**\n   * The rating as to whether the metric value is within the \"good\",\n   * \"needs improvement\", or \"poor\" thresholds of the metric.\n   */\n  rating: 'good' | 'needs-improvement' | 'poor';\n\n  /**\n   * Any performance entries relevant to the metric value calculation.\n   * The array may also be empty if the metric value was not based on any\n   * entries (e.g. a CLS value of 0 given no layout shifts).\n   */\n  entries: PerformanceEntry[] | LayoutShift[];\n}\n\ninterface LayoutShift extends PerformanceEntry {\n  value: number;\n  sources: LayoutShiftAttribution[];\n  hadRecentInput: boolean;\n}\n\ninterface LayoutShiftAttribution {\n  node?: Node;\n  previousRect: DOMRectReadOnly;\n  currentRect: DOMRectReadOnly;\n}\n\n/**\n * Handler creater for web vitals\n */\nexport function webVitalHandler(\n  getter: (metric: Metric) => ReplayPerformanceEntry<AllPerformanceEntryData>,\n  replay: ReplayContainer,\n): (data: { metric: Metric }) => void {\n  return ({ metric }) => void replay.replayPerformanceEntries.push(getter(metric));\n}\n\n/**\n * Create replay performance entries from the browser performance entries.\n */\nexport function createPerformanceEntries(\n  entries: AllPerformanceEntry[],\n): ReplayPerformanceEntry<AllPerformanceEntryData>[] {\n  return entries.map(createPerformanceEntry).filter(Boolean) as ReplayPerformanceEntry<AllPerformanceEntryData>[];\n}\n\nfunction createPerformanceEntry(entry: AllPerformanceEntry): ReplayPerformanceEntry<AllPerformanceEntryData> | null {\n  const entryType = ENTRY_TYPES[entry.entryType];\n  if (!entryType) {\n    return null;\n  }\n\n  return entryType(entry);\n}\n\nfunction getAbsoluteTime(time: number): number {\n  // browserPerformanceTimeOrigin can be undefined if `performance` or\n  // `performance.now` doesn't exist, but this is already checked by this integration\n  return ((browserPerformanceTimeOrigin() || WINDOW.performance.timeOrigin) + time) / 1000;\n}\n\nfunction createPaintEntry(entry: PerformancePaintTiming): ReplayPerformanceEntry<PaintData> {\n  const { duration, entryType, name, startTime } = entry;\n\n  const start = getAbsoluteTime(startTime);\n  return {\n    type: entryType,\n    name,\n    start,\n    end: start + duration,\n    data: undefined,\n  };\n}\n\nfunction createNavigationEntry(entry: PerformanceNavigationTiming): ReplayPerformanceEntry<NavigationData> | null {\n  const {\n    entryType,\n    name,\n    decodedBodySize,\n    duration,\n    domComplete,\n    encodedBodySize,\n    domContentLoadedEventStart,\n    domContentLoadedEventEnd,\n    domInteractive,\n    loadEventStart,\n    loadEventEnd,\n    redirectCount,\n    startTime,\n    transferSize,\n    type,\n  } = entry;\n\n  // Ignore entries with no duration, they do not seem to be useful and cause dupes\n  if (duration === 0) {\n    return null;\n  }\n\n  return {\n    type: `${entryType}.${type}`,\n    start: getAbsoluteTime(startTime),\n    end: getAbsoluteTime(domComplete),\n    name,\n    data: {\n      size: transferSize,\n      decodedBodySize,\n      encodedBodySize,\n      duration,\n      domInteractive,\n      domContentLoadedEventStart,\n      domContentLoadedEventEnd,\n      loadEventStart,\n      loadEventEnd,\n      domComplete,\n      redirectCount,\n    },\n  };\n}\n\nfunction createResourceEntry(\n  entry: ExperimentalPerformanceResourceTiming,\n): ReplayPerformanceEntry<ResourceData> | null {\n  const {\n    entryType,\n    initiatorType,\n    name,\n    responseEnd,\n    startTime,\n    decodedBodySize,\n    encodedBodySize,\n    responseStatus,\n    transferSize,\n  } = entry;\n\n  // Core SDK handles these\n  if (['fetch', 'xmlhttprequest'].includes(initiatorType)) {\n    return null;\n  }\n\n  return {\n    type: `${entryType}.${initiatorType}`,\n    start: getAbsoluteTime(startTime),\n    end: getAbsoluteTime(responseEnd),\n    name,\n    data: {\n      size: transferSize,\n      statusCode: responseStatus,\n      decodedBodySize,\n      encodedBodySize,\n    },\n  };\n}\n\n/**\n * Add a LCP event to the replay based on a LCP metric.\n */\nexport function getLargestContentfulPaint(metric: Metric): ReplayPerformanceEntry<WebVitalData> {\n  const lastEntry = metric.entries[metric.entries.length - 1] as (PerformanceEntry & { element?: Node }) | undefined;\n  const node = lastEntry?.element ? [lastEntry.element] : undefined;\n  return getWebVital(metric, 'largest-contentful-paint', node);\n}\n\nfunction isLayoutShift(entry: PerformanceEntry): entry is LayoutShift {\n  return (entry as LayoutShift).sources !== undefined;\n}\n\n/**\n * Add a CLS event to the replay based on a CLS metric.\n */\nexport function getCumulativeLayoutShift(metric: Metric): ReplayPerformanceEntry<WebVitalData> {\n  const layoutShifts: WebVitalData['attributions'] = [];\n  const nodes: Node[] = [];\n  for (const entry of metric.entries) {\n    if (isLayoutShift(entry)) {\n      const nodeIds = [];\n      for (const source of entry.sources) {\n        if (source.node) {\n          nodes.push(source.node);\n          const nodeId = record.mirror.getId(source.node);\n          if (nodeId) {\n            nodeIds.push(nodeId);\n          }\n        }\n      }\n      layoutShifts.push({ value: entry.value, nodeIds: nodeIds.length ? nodeIds : undefined });\n    }\n  }\n\n  return getWebVital(metric, 'cumulative-layout-shift', nodes, layoutShifts);\n}\n\n/**\n * Add a FID event to the replay based on a FID metric.\n */\nexport function getFirstInputDelay(metric: Metric): ReplayPerformanceEntry<WebVitalData> {\n  const lastEntry = metric.entries[metric.entries.length - 1] as (PerformanceEntry & { target?: Node }) | undefined;\n  const node = lastEntry?.target ? [lastEntry.target] : undefined;\n  return getWebVital(metric, 'first-input-delay', node);\n}\n\n/**\n * Add an INP event to the replay based on an INP metric.\n */\nexport function getInteractionToNextPaint(metric: Metric): ReplayPerformanceEntry<WebVitalData> {\n  const lastEntry = metric.entries[metric.entries.length - 1] as (PerformanceEntry & { target?: Node }) | undefined;\n  const node = lastEntry?.target ? [lastEntry.target] : undefined;\n  return getWebVital(metric, 'interaction-to-next-paint', node);\n}\n\n/**\n * Add an web vital event to the replay based on the web vital metric.\n */\nfunction getWebVital(\n  metric: Metric,\n  name: string,\n  nodes: Node[] | undefined,\n  attributions?: WebVitalData['attributions'],\n): ReplayPerformanceEntry<WebVitalData> {\n  const value = metric.value;\n  const rating = metric.rating;\n\n  const end = getAbsoluteTime(value);\n\n  return {\n    type: 'web-vital',\n    name,\n    start: end,\n    end,\n    data: {\n      value,\n      size: value,\n      rating,\n      nodeIds: nodes ? nodes.map(node => record.mirror.getId(node)) : undefined,\n      attributions,\n    },\n  };\n}\n","import {\n  addClsInstrumentationHandler,\n  addFidInstrumentationHandler,\n  addInpInstrumentationHandler,\n  addLcpInstrumentationHandler,\n  addPerformanceInstrumentationHandler,\n} from '@sentry-internal/browser-utils';\nimport type { ReplayContainer } from '../types';\nimport {\n  getCumulativeLayoutShift,\n  getFirstInputDelay,\n  getInteractionToNextPaint,\n  getLargestContentfulPaint,\n  webVitalHandler,\n} from '../util/createPerformanceEntries';\n\n/**\n * Sets up a PerformanceObserver to listen to all performance entry types.\n * Returns a callback to stop observing.\n */\nexport function setupPerformanceObserver(replay: ReplayContainer): () => void {\n  function addPerformanceEntry(entry: PerformanceEntry): void {\n    // It is possible for entries to come up multiple times\n    if (!replay.performanceEntries.includes(entry)) {\n      replay.performanceEntries.push(entry);\n    }\n  }\n\n  function onEntries({ entries }: { entries: PerformanceEntry[] }): void {\n    entries.forEach(addPerformanceEntry);\n  }\n\n  const clearCallbacks: (() => void)[] = [];\n\n  (['navigation', 'paint', 'resource'] as const).forEach(type => {\n    clearCallbacks.push(addPerformanceInstrumentationHandler(type, onEntries));\n  });\n\n  clearCallbacks.push(\n    addLcpInstrumentationHandler(webVitalHandler(getLargestContentfulPaint, replay)),\n    addClsInstrumentationHandler(webVitalHandler(getCumulativeLayoutShift, replay)),\n    addFidInstrumentationHandler(webVitalHandler(getFirstInputDelay, replay)),\n    addInpInstrumentationHandler(webVitalHandler(getInteractionToNextPaint, replay)),\n  );\n\n  // A callback to cleanup all handlers\n  return () => {\n    clearCallbacks.forEach(clearCallback => clearCallback());\n  };\n}\n","declare const __DEBUG_BUILD__: boolean;\n\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nexport const DEBUG_BUILD = __DEBUG_BUILD__;\n","export default `var t=Uint8Array,n=Uint16Array,r=Int32Array,e=new t([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),i=new t([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),s=new t([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),a=function(t,e){for(var i=new n(31),s=0;s<31;++s)i[s]=e+=1<<t[s-1];var a=new r(i[30]);for(s=1;s<30;++s)for(var o=i[s];o<i[s+1];++o)a[o]=o-i[s]<<5|s;return{b:i,r:a}},o=a(e,2),h=o.b,f=o.r;h[28]=258,f[258]=28;for(var l=a(i,0).r,u=new n(32768),c=0;c<32768;++c){var v=(43690&c)>>1|(21845&c)<<1;v=(61680&(v=(52428&v)>>2|(13107&v)<<2))>>4|(3855&v)<<4,u[c]=((65280&v)>>8|(255&v)<<8)>>1}var d=function(t,r,e){for(var i=t.length,s=0,a=new n(r);s<i;++s)t[s]&&++a[t[s]-1];var o,h=new n(r);for(s=1;s<r;++s)h[s]=h[s-1]+a[s-1]<<1;if(e){o=new n(1<<r);var f=15-r;for(s=0;s<i;++s)if(t[s])for(var l=s<<4|t[s],c=r-t[s],v=h[t[s]-1]++<<c,d=v|(1<<c)-1;v<=d;++v)o[u[v]>>f]=l}else for(o=new n(i),s=0;s<i;++s)t[s]&&(o[s]=u[h[t[s]-1]++]>>15-t[s]);return o},p=new t(288);for(c=0;c<144;++c)p[c]=8;for(c=144;c<256;++c)p[c]=9;for(c=256;c<280;++c)p[c]=7;for(c=280;c<288;++c)p[c]=8;var g=new t(32);for(c=0;c<32;++c)g[c]=5;var w=d(p,9,0),y=d(g,5,0),m=function(t){return(t+7)/8|0},b=function(n,r,e){return(null==e||e>n.length)&&(e=n.length),new t(n.subarray(r,e))},M=[\"unexpected EOF\",\"invalid block type\",\"invalid length/literal\",\"invalid distance\",\"stream finished\",\"no stream handler\",,\"no callback\",\"invalid UTF-8 data\",\"extra field too long\",\"date not in range 1980-2099\",\"filename too long\",\"stream finishing\",\"invalid zip data\"],E=function(t,n,r){var e=new Error(n||M[t]);if(e.code=t,Error.captureStackTrace&&Error.captureStackTrace(e,E),!r)throw e;return e},z=function(t,n,r){r<<=7&n;var e=n/8|0;t[e]|=r,t[e+1]|=r>>8},_=function(t,n,r){r<<=7&n;var e=n/8|0;t[e]|=r,t[e+1]|=r>>8,t[e+2]|=r>>16},x=function(r,e){for(var i=[],s=0;s<r.length;++s)r[s]&&i.push({s:s,f:r[s]});var a=i.length,o=i.slice();if(!a)return{t:F,l:0};if(1==a){var h=new t(i[0].s+1);return h[i[0].s]=1,{t:h,l:1}}i.sort(function(t,n){return t.f-n.f}),i.push({s:-1,f:25001});var f=i[0],l=i[1],u=0,c=1,v=2;for(i[0]={s:-1,f:f.f+l.f,l:f,r:l};c!=a-1;)f=i[i[u].f<i[v].f?u++:v++],l=i[u!=c&&i[u].f<i[v].f?u++:v++],i[c++]={s:-1,f:f.f+l.f,l:f,r:l};var d=o[0].s;for(s=1;s<a;++s)o[s].s>d&&(d=o[s].s);var p=new n(d+1),g=A(i[c-1],p,0);if(g>e){s=0;var w=0,y=g-e,m=1<<y;for(o.sort(function(t,n){return p[n.s]-p[t.s]||t.f-n.f});s<a;++s){var b=o[s].s;if(!(p[b]>e))break;w+=m-(1<<g-p[b]),p[b]=e}for(w>>=y;w>0;){var M=o[s].s;p[M]<e?w-=1<<e-p[M]++-1:++s}for(;s>=0&&w;--s){var E=o[s].s;p[E]==e&&(--p[E],++w)}g=e}return{t:new t(p),l:g}},A=function(t,n,r){return-1==t.s?Math.max(A(t.l,n,r+1),A(t.r,n,r+1)):n[t.s]=r},D=function(t){for(var r=t.length;r&&!t[--r];);for(var e=new n(++r),i=0,s=t[0],a=1,o=function(t){e[i++]=t},h=1;h<=r;++h)if(t[h]==s&&h!=r)++a;else{if(!s&&a>2){for(;a>138;a-=138)o(32754);a>2&&(o(a>10?a-11<<5|28690:a-3<<5|12305),a=0)}else if(a>3){for(o(s),--a;a>6;a-=6)o(8304);a>2&&(o(a-3<<5|8208),a=0)}for(;a--;)o(s);a=1,s=t[h]}return{c:e.subarray(0,i),n:r}},T=function(t,n){for(var r=0,e=0;e<n.length;++e)r+=t[e]*n[e];return r},k=function(t,n,r){var e=r.length,i=m(n+2);t[i]=255&e,t[i+1]=e>>8,t[i+2]=255^t[i],t[i+3]=255^t[i+1];for(var s=0;s<e;++s)t[i+s+4]=r[s];return 8*(i+4+e)},U=function(t,r,a,o,h,f,l,u,c,v,m){z(r,m++,a),++h[256];for(var b=x(h,15),M=b.t,E=b.l,A=x(f,15),U=A.t,C=A.l,F=D(M),I=F.c,S=F.n,L=D(U),O=L.c,j=L.n,q=new n(19),B=0;B<I.length;++B)++q[31&I[B]];for(B=0;B<O.length;++B)++q[31&O[B]];for(var G=x(q,7),H=G.t,J=G.l,K=19;K>4&&!H[s[K-1]];--K);var N,P,Q,R,V=v+5<<3,W=T(h,p)+T(f,g)+l,X=T(h,M)+T(f,U)+l+14+3*K+T(q,H)+2*q[16]+3*q[17]+7*q[18];if(c>=0&&V<=W&&V<=X)return k(r,m,t.subarray(c,c+v));if(z(r,m,1+(X<W)),m+=2,X<W){N=d(M,E,0),P=M,Q=d(U,C,0),R=U;var Y=d(H,J,0);z(r,m,S-257),z(r,m+5,j-1),z(r,m+10,K-4),m+=14;for(B=0;B<K;++B)z(r,m+3*B,H[s[B]]);m+=3*K;for(var Z=[I,O],$=0;$<2;++$){var tt=Z[$];for(B=0;B<tt.length;++B){var nt=31&tt[B];z(r,m,Y[nt]),m+=H[nt],nt>15&&(z(r,m,tt[B]>>5&127),m+=tt[B]>>12)}}}else N=w,P=p,Q=y,R=g;for(B=0;B<u;++B){var rt=o[B];if(rt>255){_(r,m,N[(nt=rt>>18&31)+257]),m+=P[nt+257],nt>7&&(z(r,m,rt>>23&31),m+=e[nt]);var et=31&rt;_(r,m,Q[et]),m+=R[et],et>3&&(_(r,m,rt>>5&8191),m+=i[et])}else _(r,m,N[rt]),m+=P[rt]}return _(r,m,N[256]),m+P[256]},C=new r([65540,131080,131088,131104,262176,1048704,1048832,2114560,2117632]),F=new t(0),I=function(){for(var t=new Int32Array(256),n=0;n<256;++n){for(var r=n,e=9;--e;)r=(1&r&&-306674912)^r>>>1;t[n]=r}return t}(),S=function(){var t=1,n=0;return{p:function(r){for(var e=t,i=n,s=0|r.length,a=0;a!=s;){for(var o=Math.min(a+2655,s);a<o;++a)i+=e+=r[a];e=(65535&e)+15*(e>>16),i=(65535&i)+15*(i>>16)}t=e,n=i},d:function(){return(255&(t%=65521))<<24|(65280&t)<<8|(255&(n%=65521))<<8|n>>8}}},L=function(s,a,o,h,u){if(!u&&(u={l:1},a.dictionary)){var c=a.dictionary.subarray(-32768),v=new t(c.length+s.length);v.set(c),v.set(s,c.length),s=v,u.w=c.length}return function(s,a,o,h,u,c){var v=c.z||s.length,d=new t(h+v+5*(1+Math.ceil(v/7e3))+u),p=d.subarray(h,d.length-u),g=c.l,w=7&(c.r||0);if(a){w&&(p[0]=c.r>>3);for(var y=C[a-1],M=y>>13,E=8191&y,z=(1<<o)-1,_=c.p||new n(32768),x=c.h||new n(z+1),A=Math.ceil(o/3),D=2*A,T=function(t){return(s[t]^s[t+1]<<A^s[t+2]<<D)&z},F=new r(25e3),I=new n(288),S=new n(32),L=0,O=0,j=c.i||0,q=0,B=c.w||0,G=0;j+2<v;++j){var H=T(j),J=32767&j,K=x[H];if(_[J]=K,x[H]=J,B<=j){var N=v-j;if((L>7e3||q>24576)&&(N>423||!g)){w=U(s,p,0,F,I,S,O,q,G,j-G,w),q=L=O=0,G=j;for(var P=0;P<286;++P)I[P]=0;for(P=0;P<30;++P)S[P]=0}var Q=2,R=0,V=E,W=J-K&32767;if(N>2&&H==T(j-W))for(var X=Math.min(M,N)-1,Y=Math.min(32767,j),Z=Math.min(258,N);W<=Y&&--V&&J!=K;){if(s[j+Q]==s[j+Q-W]){for(var $=0;$<Z&&s[j+$]==s[j+$-W];++$);if($>Q){if(Q=$,R=W,$>X)break;var tt=Math.min(W,$-2),nt=0;for(P=0;P<tt;++P){var rt=j-W+P&32767,et=rt-_[rt]&32767;et>nt&&(nt=et,K=rt)}}}W+=(J=K)-(K=_[J])&32767}if(R){F[q++]=268435456|f[Q]<<18|l[R];var it=31&f[Q],st=31&l[R];O+=e[it]+i[st],++I[257+it],++S[st],B=j+Q,++L}else F[q++]=s[j],++I[s[j]]}}for(j=Math.max(j,B);j<v;++j)F[q++]=s[j],++I[s[j]];w=U(s,p,g,F,I,S,O,q,G,j-G,w),g||(c.r=7&w|p[w/8|0]<<3,w-=7,c.h=x,c.p=_,c.i=j,c.w=B)}else{for(j=c.w||0;j<v+g;j+=65535){var at=j+65535;at>=v&&(p[w/8|0]=g,at=v),w=k(p,w+1,s.subarray(j,at))}c.i=v}return b(d,0,h+m(w)+u)}(s,null==a.level?6:a.level,null==a.mem?u.l?Math.ceil(1.5*Math.max(8,Math.min(13,Math.log(s.length)))):20:12+a.mem,o,h,u)},O=function(t,n,r){for(;r;++n)t[n]=r,r>>>=8},j=function(){function n(n,r){if(\"function\"==typeof n&&(r=n,n={}),this.ondata=r,this.o=n||{},this.s={l:0,i:32768,w:32768,z:32768},this.b=new t(98304),this.o.dictionary){var e=this.o.dictionary.subarray(-32768);this.b.set(e,32768-e.length),this.s.i=32768-e.length}}return n.prototype.p=function(t,n){this.ondata(L(t,this.o,0,0,this.s),n)},n.prototype.push=function(n,r){this.ondata||E(5),this.s.l&&E(4);var e=n.length+this.s.z;if(e>this.b.length){if(e>2*this.b.length-32768){var i=new t(-32768&e);i.set(this.b.subarray(0,this.s.z)),this.b=i}var s=this.b.length-this.s.z;this.b.set(n.subarray(0,s),this.s.z),this.s.z=this.b.length,this.p(this.b,!1),this.b.set(this.b.subarray(-32768)),this.b.set(n.subarray(s),32768),this.s.z=n.length-s+32768,this.s.i=32766,this.s.w=32768}else this.b.set(n,this.s.z),this.s.z+=n.length;this.s.l=1&r,(this.s.z>this.s.w+8191||r)&&(this.p(this.b,r||!1),this.s.w=this.s.i,this.s.i-=2)},n.prototype.flush=function(){this.ondata||E(5),this.s.l&&E(4),this.p(this.b,!1),this.s.w=this.s.i,this.s.i-=2},n}();function q(t,n){n||(n={});var r=function(){var t=-1;return{p:function(n){for(var r=t,e=0;e<n.length;++e)r=I[255&r^n[e]]^r>>>8;t=r},d:function(){return~t}}}(),e=t.length;r.p(t);var i,s=L(t,n,10+((i=n).filename?i.filename.length+1:0),8),a=s.length;return function(t,n){var r=n.filename;if(t[0]=31,t[1]=139,t[2]=8,t[8]=n.level<2?4:9==n.level?2:0,t[9]=3,0!=n.mtime&&O(t,4,Math.floor(new Date(n.mtime||Date.now())/1e3)),r){t[3]=8;for(var e=0;e<=r.length;++e)t[e+10]=r.charCodeAt(e)}}(s,n),O(s,a-8,r.d()),O(s,a-4,e),s}var B=function(){function t(t,n){this.c=S(),this.v=1,j.call(this,t,n)}return t.prototype.push=function(t,n){this.c.p(t),j.prototype.push.call(this,t,n)},t.prototype.p=function(t,n){var r=L(t,this.o,this.v&&(this.o.dictionary?6:2),n&&4,this.s);this.v&&(function(t,n){var r=n.level,e=0==r?0:r<6?1:9==r?3:2;if(t[0]=120,t[1]=e<<6|(n.dictionary&&32),t[1]|=31-(t[0]<<8|t[1])%31,n.dictionary){var i=S();i.p(n.dictionary),O(t,2,i.d())}}(r,this.o),this.v=0),n&&O(r,r.length-4,this.c.d()),this.ondata(r,n)},t.prototype.flush=function(){j.prototype.flush.call(this)},t}(),G=\"undefined\"!=typeof TextEncoder&&new TextEncoder,H=\"undefined\"!=typeof TextDecoder&&new TextDecoder;try{H.decode(F,{stream:!0})}catch(t){}var J=function(){function t(t){this.ondata=t}return t.prototype.push=function(t,n){this.ondata||E(5),this.d&&E(4),this.ondata(K(t),this.d=n||!1)},t}();function K(n,r){if(G)return G.encode(n);for(var e=n.length,i=new t(n.length+(n.length>>1)),s=0,a=function(t){i[s++]=t},o=0;o<e;++o){if(s+5>i.length){var h=new t(s+8+(e-o<<1));h.set(i),i=h}var f=n.charCodeAt(o);f<128||r?a(f):f<2048?(a(192|f>>6),a(128|63&f)):f>55295&&f<57344?(a(240|(f=65536+(1047552&f)|1023&n.charCodeAt(++o))>>18),a(128|f>>12&63),a(128|f>>6&63),a(128|63&f)):(a(224|f>>12),a(128|f>>6&63),a(128|63&f))}return b(i,0,s)}const N=new class{constructor(){this._init()}clear(){this._init()}addEvent(t){if(!t)throw new Error(\"Adding invalid event\");const n=this._hasEvents?\",\":\"\";this.stream.push(n+t),this._hasEvents=!0}finish(){this.stream.push(\"]\",!0);const t=function(t){let n=0;for(const r of t)n+=r.length;const r=new Uint8Array(n);for(let n=0,e=0,i=t.length;n<i;n++){const i=t[n];r.set(i,e),e+=i.length}return r}(this._deflatedData);return this._init(),t}_init(){this._hasEvents=!1,this._deflatedData=[],this.deflate=new B,this.deflate.ondata=(t,n)=>{this._deflatedData.push(t)},this.stream=new J((t,n)=>{this.deflate.push(t,n)}),this.stream.push(\"[\")}},P={clear:()=>{N.clear()},addEvent:t=>N.addEvent(t),finish:()=>N.finish(),compress:t=>function(t){return q(K(t))}(t)};addEventListener(\"message\",function(t){const n=t.data.method,r=t.data.id,e=t.data.arg;if(n in P&&\"function\"==typeof P[n])try{const t=P[n](e);postMessage({id:r,method:n,success:!0,response:t})}catch(t){postMessage({id:r,method:n,success:!1,response:t.message}),console.error(t)}}),postMessage({id:void 0,method:\"init\",success:!0,response:void 0});`;\n","import r from\"./worker\";function e(){const e=new Blob([r]);return URL.createObjectURL(e)}export{e as getWorkerURL};\n","import type { ConsoleLevel, SeverityLevel } from '@sentry/core';\nimport { addBreadcrumb, captureException, debug as coreDebug, severityLevelFromString } from '@sentry/core';\nimport { DEBUG_BUILD } from '../debug-build';\n\ntype ReplayConsoleLevels = Extract<ConsoleLevel, 'log' | 'warn' | 'error'>;\nconst CONSOLE_LEVELS: readonly ReplayConsoleLevels[] = ['log', 'warn', 'error'] as const;\nconst PREFIX = '[Replay] ';\n\ninterface LoggerConfig {\n  captureExceptions: boolean;\n  traceInternals: boolean;\n}\n\ntype CoreDebugLogger = typeof coreDebug;\n\ninterface ReplayDebugLogger extends CoreDebugLogger {\n  /**\n   * Calls `debug.log` but saves breadcrumb in the next tick due to race\n   * conditions before replay is initialized.\n   */\n  infoTick: CoreDebugLogger['log'];\n  /**\n   * Captures exceptions (`Error`) if \"capture internal exceptions\" is enabled\n   */\n  exception: CoreDebugLogger['error'];\n  /**\n   * Configures the logger with additional debugging behavior\n   */\n  setConfig(config: Partial<LoggerConfig>): void;\n}\n\nfunction _addBreadcrumb(message: unknown, level: SeverityLevel = 'info'): void {\n  addBreadcrumb(\n    {\n      category: 'console',\n      data: {\n        logger: 'replay',\n      },\n      level,\n      message: `${PREFIX}${message}`,\n    },\n    { level },\n  );\n}\n\nfunction makeReplayDebugLogger(): ReplayDebugLogger {\n  let _capture = false;\n  let _trace = false;\n\n  const _debug: Partial<ReplayDebugLogger> = {\n    exception: () => undefined,\n    infoTick: () => undefined,\n    setConfig: (opts: Partial<LoggerConfig>) => {\n      _capture = !!opts.captureExceptions;\n      _trace = !!opts.traceInternals;\n    },\n  };\n\n  if (DEBUG_BUILD) {\n    CONSOLE_LEVELS.forEach(name => {\n      _debug[name] = (...args: unknown[]) => {\n        coreDebug[name](PREFIX, ...args);\n        if (_trace) {\n          _addBreadcrumb(args.join(''), severityLevelFromString(name));\n        }\n      };\n    });\n\n    _debug.exception = (error: unknown, ...message: unknown[]) => {\n      if (message.length && _debug.error) {\n        _debug.error(...message);\n      }\n\n      coreDebug.error(PREFIX, error);\n\n      if (_capture) {\n        captureException(error);\n      } else if (_trace) {\n        // No need for a breadcrumb if `_capture` is enabled since it should be\n        // captured as an exception\n        _addBreadcrumb(error, 'error');\n      }\n    };\n\n    _debug.infoTick = (...args: unknown[]) => {\n      coreDebug.log(PREFIX, ...args);\n      if (_trace) {\n        // Wait a tick here to avoid race conditions for some initial logs\n        // which may be added before replay is initialized\n        setTimeout(() => _addBreadcrumb(args[0]), 0);\n      }\n    };\n  } else {\n    CONSOLE_LEVELS.forEach(name => {\n      _debug[name] = () => undefined;\n    });\n  }\n\n  return _debug as ReplayDebugLogger;\n}\n\nexport const debug = makeReplayDebugLogger();\n","import { REPLAY_MAX_EVENT_BUFFER_SIZE } from '../constants';\n\n/** This error indicates that the event buffer size exceeded the limit.. */\nexport class EventBufferSizeExceededError extends Error {\n  public constructor() {\n    super(`Event buffer exceeded maximum size of ${REPLAY_MAX_EVENT_BUFFER_SIZE}.`);\n  }\n}\n","import { REPLAY_MAX_EVENT_BUFFER_SIZE } from '../constants';\nimport type { AddEventResult, EventBuffer, EventBufferType, RecordingEvent } from '../types';\nimport { timestampToMs } from '../util/timestamp';\nimport { EventBufferSizeExceededError } from './error';\n\n/**\n * A basic event buffer that does not do any compression.\n * Used as fallback if the compression worker cannot be loaded or is disabled.\n */\nexport class EventBufferArray implements EventBuffer {\n  /** All the events that are buffered to be sent. */\n  public events: RecordingEvent[];\n\n  /** @inheritdoc */\n  public hasCheckout: boolean;\n\n  /** @inheritdoc */\n  public waitForCheckout: boolean;\n\n  private _totalSize: number;\n\n  public constructor() {\n    this.events = [];\n    this._totalSize = 0;\n    this.hasCheckout = false;\n    this.waitForCheckout = false;\n  }\n\n  /** @inheritdoc */\n  public get hasEvents(): boolean {\n    return this.events.length > 0;\n  }\n\n  /** @inheritdoc */\n  public get type(): EventBufferType {\n    return 'sync';\n  }\n\n  /** @inheritdoc */\n  public destroy(): void {\n    this.events = [];\n  }\n\n  /** @inheritdoc */\n  public async addEvent(event: RecordingEvent): Promise<AddEventResult> {\n    const eventSize = JSON.stringify(event).length;\n    this._totalSize += eventSize;\n    if (this._totalSize > REPLAY_MAX_EVENT_BUFFER_SIZE) {\n      throw new EventBufferSizeExceededError();\n    }\n\n    this.events.push(event);\n  }\n\n  /** @inheritdoc */\n  public finish(): Promise<string> {\n    return new Promise<string>(resolve => {\n      // Make a copy of the events array reference and immediately clear the\n      // events member so that we do not lose new events while uploading\n      // attachment.\n      const eventsRet = this.events;\n      this.clear();\n      resolve(JSON.stringify(eventsRet));\n    });\n  }\n\n  /** @inheritdoc */\n  public clear(): void {\n    this.events = [];\n    this._totalSize = 0;\n    this.hasCheckout = false;\n  }\n\n  /** @inheritdoc */\n  public getEarliestTimestamp(): number | null {\n    const timestamp = this.events.map(event => event.timestamp).sort()[0];\n\n    if (!timestamp) {\n      return null;\n    }\n\n    return timestampToMs(timestamp);\n  }\n}\n","import { DEBUG_BUILD } from '../debug-build';\nimport type { WorkerRequest, WorkerResponse } from '../types';\nimport { debug } from '../util/logger';\n\n/**\n * Event buffer that uses a web worker to compress events.\n * Exported only for testing.\n */\nexport class WorkerHandler {\n  private _worker: Worker;\n  private _id: number;\n  private _ensureReadyPromise?: Promise<void>;\n\n  public constructor(worker: Worker) {\n    this._worker = worker;\n    this._id = 0;\n  }\n\n  /**\n   * Ensure the worker is ready (or not).\n   * This will either resolve when the worker is ready, or reject if an error occurred.\n   */\n  public ensureReady(): Promise<void> {\n    // Ensure we only check once\n    if (this._ensureReadyPromise) {\n      return this._ensureReadyPromise;\n    }\n\n    this._ensureReadyPromise = new Promise((resolve, reject) => {\n      this._worker.addEventListener(\n        'message',\n        ({ data }: MessageEvent) => {\n          if ((data as WorkerResponse).success) {\n            resolve();\n          } else {\n            reject();\n          }\n        },\n        { once: true },\n      );\n\n      this._worker.addEventListener(\n        'error',\n        error => {\n          reject(error);\n        },\n        { once: true },\n      );\n    });\n\n    return this._ensureReadyPromise;\n  }\n\n  /**\n   * Destroy the worker.\n   */\n  public destroy(): void {\n    DEBUG_BUILD && debug.log('Destroying compression worker');\n    this._worker.terminate();\n  }\n\n  /**\n   * Post message to worker and wait for response before resolving promise.\n   */\n  public postMessage<T>(method: WorkerRequest['method'], arg?: WorkerRequest['arg']): Promise<T> {\n    const id = this._getAndIncrementId();\n\n    return new Promise((resolve, reject) => {\n      const listener = ({ data }: MessageEvent): void => {\n        const response = data as WorkerResponse;\n        if (response.method !== method) {\n          return;\n        }\n\n        // There can be multiple listeners for a single method, the id ensures\n        // that the response matches the caller.\n        if (response.id !== id) {\n          return;\n        }\n\n        // At this point, we'll always want to remove listener regardless of result status\n        this._worker.removeEventListener('message', listener);\n\n        if (!response.success) {\n          // TODO: Do some error handling, not sure what\n          DEBUG_BUILD && debug.error('Error in compression worker: ', response.response);\n\n          reject(new Error('Error in compression worker'));\n          return;\n        }\n\n        resolve(response.response as T);\n      };\n\n      // Note: we can't use `once` option because it's possible it needs to\n      // listen to multiple messages\n      this._worker.addEventListener('message', listener);\n      this._worker.postMessage({ id, method, arg });\n    });\n  }\n\n  /** Get the current ID and increment it for the next call. */\n  private _getAndIncrementId(): number {\n    return this._id++;\n  }\n}\n","import type { ReplayRecordingData } from '@sentry/core';\nimport { REPLAY_MAX_EVENT_BUFFER_SIZE } from '../constants';\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { AddEventResult, EventBuffer, EventBufferType, RecordingEvent } from '../types';\nimport { debug } from '../util/logger';\nimport { timestampToMs } from '../util/timestamp';\nimport { EventBufferSizeExceededError } from './error';\nimport { WorkerHandler } from './WorkerHandler';\n\n/**\n * Event buffer that uses a web worker to compress events.\n * Exported only for testing.\n */\nexport class EventBufferCompressionWorker implements EventBuffer {\n  /** @inheritdoc */\n  public hasCheckout: boolean;\n\n  /** @inheritdoc */\n  public waitForCheckout: boolean;\n\n  private _worker: WorkerHandler;\n  private _earliestTimestamp: number | null;\n  private _totalSize;\n\n  public constructor(worker: Worker) {\n    this._worker = new WorkerHandler(worker);\n    this._earliestTimestamp = null;\n    this._totalSize = 0;\n    this.hasCheckout = false;\n    this.waitForCheckout = false;\n  }\n\n  /** @inheritdoc */\n  public get hasEvents(): boolean {\n    return !!this._earliestTimestamp;\n  }\n\n  /** @inheritdoc */\n  public get type(): EventBufferType {\n    return 'worker';\n  }\n\n  /**\n   * Ensure the worker is ready (or not).\n   * This will either resolve when the worker is ready, or reject if an error occurred.\n   */\n  public ensureReady(): Promise<void> {\n    return this._worker.ensureReady();\n  }\n\n  /**\n   * Destroy the event buffer.\n   */\n  public destroy(): void {\n    this._worker.destroy();\n  }\n\n  /**\n   * Add an event to the event buffer.\n   *\n   * Returns true if event was successfully received and processed by worker.\n   */\n  public addEvent(event: RecordingEvent): Promise<AddEventResult> {\n    const timestamp = timestampToMs(event.timestamp);\n    if (!this._earliestTimestamp || timestamp < this._earliestTimestamp) {\n      this._earliestTimestamp = timestamp;\n    }\n\n    const data = JSON.stringify(event);\n    this._totalSize += data.length;\n\n    if (this._totalSize > REPLAY_MAX_EVENT_BUFFER_SIZE) {\n      return Promise.reject(new EventBufferSizeExceededError());\n    }\n\n    return this._sendEventToWorker(data);\n  }\n\n  /**\n   * Finish the event buffer and return the compressed data.\n   */\n  public finish(): Promise<ReplayRecordingData> {\n    return this._finishRequest();\n  }\n\n  /** @inheritdoc */\n  public clear(): void {\n    this._earliestTimestamp = null;\n    this._totalSize = 0;\n    this.hasCheckout = false;\n\n    // We do not wait on this, as we assume the order of messages is consistent for the worker\n    this._worker.postMessage('clear').then(null, e => {\n      DEBUG_BUILD && debug.exception(e, 'Sending \"clear\" message to worker failed', e);\n    });\n  }\n\n  /** @inheritdoc */\n  public getEarliestTimestamp(): number | null {\n    return this._earliestTimestamp;\n  }\n\n  /**\n   * Send the event to the worker.\n   */\n  private _sendEventToWorker(data: string): Promise<AddEventResult> {\n    return this._worker.postMessage<void>('addEvent', data);\n  }\n\n  /**\n   * Finish the request and return the compressed data from the worker.\n   */\n  private async _finishRequest(): Promise<Uint8Array> {\n    const response = await this._worker.postMessage<Uint8Array>('finish');\n\n    this._earliestTimestamp = null;\n    this._totalSize = 0;\n\n    return response;\n  }\n}\n","import type { ReplayRecordingData } from '@sentry/core';\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { AddEventResult, EventBuffer, EventBufferType, RecordingEvent } from '../types';\nimport { debug } from '../util/logger';\nimport { EventBufferArray } from './EventBufferArray';\nimport { EventBufferCompressionWorker } from './EventBufferCompressionWorker';\n\n/**\n * This proxy will try to use the compression worker, and fall back to use the simple buffer if an error occurs there.\n * This can happen e.g. if the worker cannot be loaded.\n * Exported only for testing.\n */\nexport class EventBufferProxy implements EventBuffer {\n  private _fallback: EventBufferArray;\n  private _compression: EventBufferCompressionWorker;\n  private _used: EventBuffer;\n  private _ensureWorkerIsLoadedPromise: Promise<void>;\n\n  public constructor(worker: Worker) {\n    this._fallback = new EventBufferArray();\n    this._compression = new EventBufferCompressionWorker(worker);\n    this._used = this._fallback;\n\n    this._ensureWorkerIsLoadedPromise = this._ensureWorkerIsLoaded();\n  }\n\n  /** @inheritdoc */\n  public get waitForCheckout(): boolean {\n    return this._used.waitForCheckout;\n  }\n\n  /** @inheritdoc */\n  public get type(): EventBufferType {\n    return this._used.type;\n  }\n\n  /** @inheritDoc */\n  public get hasEvents(): boolean {\n    return this._used.hasEvents;\n  }\n\n  /** @inheritdoc */\n  public get hasCheckout(): boolean {\n    return this._used.hasCheckout;\n  }\n  /** @inheritdoc */\n  public set hasCheckout(value: boolean) {\n    this._used.hasCheckout = value;\n  }\n\n  /** @inheritdoc */\n  // eslint-disable-next-line @typescript-eslint/adjacent-overload-signatures\n  public set waitForCheckout(value: boolean) {\n    this._used.waitForCheckout = value;\n  }\n\n  /** @inheritDoc */\n  public destroy(): void {\n    this._fallback.destroy();\n    this._compression.destroy();\n  }\n\n  /** @inheritdoc */\n  public clear(): void {\n    return this._used.clear();\n  }\n\n  /** @inheritdoc */\n  public getEarliestTimestamp(): number | null {\n    return this._used.getEarliestTimestamp();\n  }\n\n  /**\n   * Add an event to the event buffer.\n   *\n   * Returns true if event was successfully added.\n   */\n  public addEvent(event: RecordingEvent): Promise<AddEventResult> {\n    return this._used.addEvent(event);\n  }\n\n  /** @inheritDoc */\n  public async finish(): Promise<ReplayRecordingData> {\n    // Ensure the worker is loaded, so the sent event is compressed\n    await this.ensureWorkerIsLoaded();\n\n    return this._used.finish();\n  }\n\n  /** Ensure the worker has loaded. */\n  public ensureWorkerIsLoaded(): Promise<void> {\n    return this._ensureWorkerIsLoadedPromise;\n  }\n\n  /** Actually check if the worker has been loaded. */\n  private async _ensureWorkerIsLoaded(): Promise<void> {\n    try {\n      await this._compression.ensureReady();\n    } catch (error) {\n      // If the worker fails to load, we fall back to the simple buffer.\n      // Nothing more to do from our side here\n      DEBUG_BUILD && debug.exception(error, 'Failed to load the compression worker, falling back to simple buffer');\n      return;\n    }\n\n    // Now we need to switch over the array buffer to the compression worker\n    await this._switchToCompressionWorker();\n  }\n\n  /** Switch the used buffer to the compression worker. */\n  private async _switchToCompressionWorker(): Promise<void> {\n    const { events, hasCheckout, waitForCheckout } = this._fallback;\n\n    const addEventPromises: Promise<void>[] = [];\n    for (const event of events) {\n      addEventPromises.push(this._compression.addEvent(event));\n    }\n\n    this._compression.hasCheckout = hasCheckout;\n    this._compression.waitForCheckout = waitForCheckout;\n\n    // We switch over to the new buffer immediately - any further events will be added\n    // after the previously buffered ones\n    this._used = this._compression;\n\n    // Wait for original events to be re-added before resolving\n    try {\n      await Promise.all(addEventPromises);\n\n      // Can now clear fallback buffer as it's no longer necessary\n      this._fallback.clear();\n    } catch (error) {\n      DEBUG_BUILD && debug.exception(error, 'Failed to add events when switching buffers.');\n    }\n  }\n}\n","import { getWorkerURL } from '@sentry-internal/replay-worker';\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { EventBuffer, ReplayWorkerURL } from '../types';\nimport { debug } from '../util/logger';\nimport { EventBufferArray } from './EventBufferArray';\nimport { EventBufferProxy } from './EventBufferProxy';\n\ninterface CreateEventBufferParams {\n  useCompression: boolean;\n  workerUrl?: ReplayWorkerURL;\n}\n\n// Treeshakable guard to remove the code of the included compression worker\ndeclare const __SENTRY_EXCLUDE_REPLAY_WORKER__: boolean;\n\n/**\n * Create an event buffer for replays.\n */\nexport function createEventBuffer({\n  useCompression,\n  workerUrl: customWorkerUrl,\n}: CreateEventBufferParams): EventBuffer {\n  if (\n    useCompression &&\n    // eslint-disable-next-line no-restricted-globals\n    window.Worker\n  ) {\n    const worker = _loadWorker(customWorkerUrl);\n\n    if (worker) {\n      return worker;\n    }\n  }\n\n  DEBUG_BUILD && debug.log('Using simple buffer');\n  return new EventBufferArray();\n}\n\nfunction _loadWorker(customWorkerUrl?: ReplayWorkerURL): EventBufferProxy | void {\n  try {\n    const workerUrl = customWorkerUrl || _getWorkerUrl();\n\n    if (!workerUrl) {\n      return;\n    }\n\n    DEBUG_BUILD && debug.log(`Using compression worker${customWorkerUrl ? ` from ${customWorkerUrl}` : ''}`);\n    const worker = new Worker(workerUrl);\n    return new EventBufferProxy(worker);\n  } catch (error) {\n    DEBUG_BUILD && debug.exception(error, 'Failed to create compression worker');\n    // Fall back to use simple event buffer array\n  }\n}\n\nfunction _getWorkerUrl(): string {\n  if (typeof __SENTRY_EXCLUDE_REPLAY_WORKER__ === 'undefined' || !__SENTRY_EXCLUDE_REPLAY_WORKER__) {\n    return getWorkerURL();\n  }\n\n  return '';\n}\n","import { WINDOW } from '../constants';\n\n/** If sessionStorage is available. */\nexport function hasSessionStorage(): boolean {\n  try {\n    // This can throw, e.g. when being accessed in a sandboxed iframe\n    return 'sessionStorage' in WINDOW && !!WINDOW.sessionStorage;\n  } catch {\n    return false;\n  }\n}\n","import { REPLAY_SESSION_KEY, WINDOW } from '../../src/constants';\nimport type { ReplayContainer } from '../../src/types';\nimport { hasSessionStorage } from '../util/hasSessionStorage';\n\n/**\n * Removes the session from Session Storage and unsets session in replay instance\n */\nexport function clearSession(replay: ReplayContainer): void {\n  deleteSession();\n  replay.session = undefined;\n}\n\n/**\n * Deletes a session from storage\n */\nfunction deleteSession(): void {\n  if (!hasSessionStorage()) {\n    return;\n  }\n\n  try {\n    WINDOW.sessionStorage.removeItem(REPLAY_SESSION_KEY);\n  } catch {\n    // Ignore potential SecurityError exceptions\n  }\n}\n","/**\n * Given a sample rate, returns true if replay should be sampled.\n *\n * 1.0 = 100% sampling\n * 0.0 = 0% sampling\n */\nexport function isSampled(sampleRate?: number): boolean {\n  if (sampleRate === undefined) {\n    return false;\n  }\n\n  // Math.random() returns a number in range of 0 to 1 (inclusive of 0, but not 1)\n  return Math.random() < sampleRate;\n}\n","import { REPLAY_SESSION_KEY, WINDOW } from '../constants';\nimport type { Session } from '../types';\nimport { hasSessionStorage } from '../util/hasSessionStorage';\n\n/**\n * Save a session to session storage.\n */\nexport function saveSession(session: Session): void {\n  if (!hasSessionStorage()) {\n    return;\n  }\n\n  try {\n    WINDOW.sessionStorage.setItem(REPLAY_SESSION_KEY, JSON.stringify(session));\n  } catch {\n    // Ignore potential SecurityError exceptions\n  }\n}\n","import { uuid4 } from '@sentry/core';\nimport type { Sampled, Session } from '../types';\n\n/**\n * Get a session with defaults & applied sampling.\n */\nexport function makeSession(session: Partial<Session> & { sampled: Sampled }): Session {\n  const now = Date.now();\n  const id = session.id || uuid4();\n  // Note that this means we cannot set a started/lastActivity of `0`, but this should not be relevant outside of tests.\n  const started = session.started || now;\n  const lastActivity = session.lastActivity || now;\n  const segmentId = session.segmentId || 0;\n  const sampled = session.sampled;\n  const previousSessionId = session.previousSessionId;\n\n  return {\n    id,\n    started,\n    lastActivity,\n    segmentId,\n    sampled,\n    previousSessionId,\n  };\n}\n","import type { Sampled, Session, SessionOptions } from '../types';\nimport { isSampled } from '../util/isSampled';\nimport { saveSession } from './saveSession';\nimport { makeSession } from './Session';\n\n/**\n * Get the sampled status for a session based on sample rates & current sampled status.\n */\nexport function getSessionSampleType(sessionSampleRate: number, allowBuffering: boolean): Sampled {\n  return isSampled(sessionSampleRate) ? 'session' : allowBuffering ? 'buffer' : false;\n}\n\n/**\n * Create a new session, which in its current implementation is a Sentry event\n * that all replays will be saved to as attachments. Currently, we only expect\n * one of these Sentry events per \"replay session\".\n */\nexport function createSession(\n  { sessionSampleRate, allowBuffering, stickySession = false }: SessionOptions,\n  { previousSessionId }: { previousSessionId?: string } = {},\n): Session {\n  const sampled = getSessionSampleType(sessionSampleRate, allowBuffering);\n  const session = makeSession({\n    sampled,\n    previousSessionId,\n  });\n\n  if (stickySession) {\n    saveSession(session);\n  }\n\n  return session;\n}\n","import { REPLAY_SESSION_KEY, WINDOW } from '../constants';\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { Session } from '../types';\nimport { hasSessionStorage } from '../util/hasSessionStorage';\nimport { debug } from '../util/logger';\nimport { makeSession } from './Session';\n\n/**\n * Fetches a session from storage\n */\nexport function fetchSession(): Session | null {\n  if (!hasSessionStorage()) {\n    return null;\n  }\n\n  try {\n    // This can throw if cookies are disabled\n    const sessionStringFromStorage = WINDOW.sessionStorage.getItem(REPLAY_SESSION_KEY);\n\n    if (!sessionStringFromStorage) {\n      return null;\n    }\n\n    const sessionObj = JSON.parse(sessionStringFromStorage) as Session;\n\n    DEBUG_BUILD && debug.infoTick('Loading existing session');\n\n    return makeSession(sessionObj);\n  } catch {\n    return null;\n  }\n}\n","/**\n * Given an initial timestamp and an expiry duration, checks to see if current\n * time should be considered as expired.\n */\nexport function isExpired(\n  initialTime: null | number,\n  expiry: undefined | number,\n  targetTime: number = +new Date(),\n): boolean {\n  // Always expired if < 0\n  if (initialTime === null || expiry === undefined || expiry < 0) {\n    return true;\n  }\n\n  // Never expires if == 0\n  if (expiry === 0) {\n    return false;\n  }\n\n  return initialTime + expiry <= targetTime;\n}\n","import type { Session } from '../types';\nimport { isExpired } from './isExpired';\n\n/**\n * Checks to see if session is expired\n */\nexport function isSessionExpired(\n  session: Session,\n  {\n    maxReplayDuration,\n    sessionIdleExpire,\n    targetTime = Date.now(),\n  }: { maxReplayDuration: number; sessionIdleExpire: number; targetTime?: number },\n): boolean {\n  return (\n    // First, check that maximum session length has not been exceeded\n    isExpired(session.started, maxReplayDuration, targetTime) ||\n    // check that the idle timeout has not been exceeded (i.e. user has\n    // performed an action within the last `sessionIdleExpire` ms)\n    isExpired(session.lastActivity, sessionIdleExpire, targetTime)\n  );\n}\n","import type { Session } from '../types';\nimport { isSessionExpired } from '../util/isSessionExpired';\n\n/** If the session should be refreshed or not. */\nexport function shouldRefreshSession(\n  session: Session,\n  { sessionIdleExpire, maxReplayDuration }: { sessionIdleExpire: number; maxReplayDuration: number },\n): boolean {\n  // If not expired, all good, just keep the session\n  if (!isSessionExpired(session, { sessionIdleExpire, maxReplayDuration })) {\n    return false;\n  }\n\n  // If we are buffering & haven't ever flushed yet, always continue\n  if (session.sampled === 'buffer' && session.segmentId === 0) {\n    return false;\n  }\n\n  return true;\n}\n","import { DEBUG_BUILD } from '../debug-build';\nimport type { Session, SessionOptions } from '../types';\nimport { debug } from '../util/logger';\nimport { createSession } from './createSession';\nimport { fetchSession } from './fetchSession';\nimport { shouldRefreshSession } from './shouldRefreshSession';\n\n/**\n * Get or create a session, when initializing the replay.\n * Returns a session that may be unsampled.\n */\nexport function loadOrCreateSession(\n  {\n    sessionIdleExpire,\n    maxReplayDuration,\n    previousSessionId,\n  }: {\n    sessionIdleExpire: number;\n    maxReplayDuration: number;\n    previousSessionId?: string;\n  },\n  sessionOptions: SessionOptions,\n): Session {\n  const existingSession = sessionOptions.stickySession && fetchSession();\n\n  // No session exists yet, just create a new one\n  if (!existingSession) {\n    DEBUG_BUILD && debug.infoTick('Creating new session');\n    return createSession(sessionOptions, { previousSessionId });\n  }\n\n  if (!shouldRefreshSession(existingSession, { sessionIdleExpire, maxReplayDuration })) {\n    return existingSession;\n  }\n\n  DEBUG_BUILD && debug.infoTick('Session in sessionStorage is expired, creating new one...');\n  return createSession(sessionOptions, { previousSessionId: existingSession.id });\n}\n","import { getClient } from '@sentry/core';\nimport { EventType } from '@sentry-internal/rrweb';\nimport { DEBUG_BUILD } from '../debug-build';\nimport { EventBufferSizeExceededError } from '../eventBuffer/error';\nimport type { AddEventResult, RecordingEvent, ReplayContainer, ReplayFrameEvent, ReplayPluginOptions } from '../types';\nimport { debug } from './logger';\nimport { timestampToMs } from './timestamp';\n\nfunction isCustomEvent(event: RecordingEvent): event is ReplayFrameEvent {\n  return event.type === EventType.Custom;\n}\n\n/**\n * Add an event to the event buffer.\n * In contrast to `addEvent`, this does not return a promise & does not wait for the adding of the event to succeed/fail.\n * Instead this returns `true` if we tried to add the event, else false.\n * It returns `false` e.g. if we are paused, disabled, or out of the max replay duration.\n *\n * `isCheckout` is true if this is either the very first event, or an event triggered by `checkoutEveryNms`.\n */\nexport function addEventSync(replay: ReplayContainer, event: RecordingEvent, isCheckout?: boolean): boolean {\n  if (!shouldAddEvent(replay, event)) {\n    return false;\n  }\n\n  // This should never reject\n  // eslint-disable-next-line @typescript-eslint/no-floating-promises\n  _addEvent(replay, event, isCheckout);\n\n  return true;\n}\n\n/**\n * Add an event to the event buffer.\n * Resolves to `null` if no event was added, else to `void`.\n *\n * `isCheckout` is true if this is either the very first event, or an event triggered by `checkoutEveryNms`.\n */\nexport function addEvent(\n  replay: ReplayContainer,\n  event: RecordingEvent,\n  isCheckout?: boolean,\n): Promise<AddEventResult | null> {\n  if (!shouldAddEvent(replay, event)) {\n    return Promise.resolve(null);\n  }\n\n  return _addEvent(replay, event, isCheckout);\n}\n\nasync function _addEvent(\n  replay: ReplayContainer,\n  event: RecordingEvent,\n  isCheckout?: boolean,\n): Promise<AddEventResult | null> {\n  const { eventBuffer } = replay;\n\n  if (!eventBuffer || (eventBuffer.waitForCheckout && !isCheckout)) {\n    return null;\n  }\n\n  const isBufferMode = replay.recordingMode === 'buffer';\n\n  try {\n    if (isCheckout && isBufferMode) {\n      eventBuffer.clear();\n    }\n\n    if (isCheckout) {\n      eventBuffer.hasCheckout = true;\n      eventBuffer.waitForCheckout = false;\n    }\n\n    const replayOptions = replay.getOptions();\n\n    const eventAfterPossibleCallback = maybeApplyCallback(event, replayOptions.beforeAddRecordingEvent);\n\n    if (!eventAfterPossibleCallback) {\n      return;\n    }\n\n    return await eventBuffer.addEvent(eventAfterPossibleCallback);\n  } catch (error) {\n    const isExceeded = error && error instanceof EventBufferSizeExceededError;\n    const reason = isExceeded ? 'addEventSizeExceeded' : 'addEvent';\n\n    if (isExceeded && isBufferMode) {\n      // Clear buffer and wait for next checkout\n      eventBuffer.clear();\n      eventBuffer.waitForCheckout = true;\n\n      return null;\n    }\n\n    replay.handleException(error);\n\n    await replay.stop({ reason });\n\n    const client = getClient();\n\n    if (client) {\n      client.recordDroppedEvent('internal_sdk_error', 'replay');\n    }\n  }\n}\n\n/** Exported only for tests. */\nexport function shouldAddEvent(replay: ReplayContainer, event: RecordingEvent): boolean {\n  if (!replay.eventBuffer || replay.isPaused() || !replay.isEnabled()) {\n    return false;\n  }\n\n  const timestampInMs = timestampToMs(event.timestamp);\n\n  // Throw out events that happen more than 5 minutes ago. This can happen if\n  // page has been left open and idle for a long period of time and user\n  // comes back to trigger a new session. The performance entries rely on\n  // `performance.timeOrigin`, which is when the page first opened.\n  if (timestampInMs + replay.timeouts.sessionIdlePause < Date.now()) {\n    return false;\n  }\n\n  // Throw out events that are +60min from the initial timestamp\n  if (timestampInMs > replay.getContext().initialTimestamp + replay.getOptions().maxReplayDuration) {\n    DEBUG_BUILD &&\n      debug.infoTick(`Skipping event with timestamp ${timestampInMs} because it is after maxReplayDuration`);\n    return false;\n  }\n\n  return true;\n}\n\nfunction maybeApplyCallback(\n  event: RecordingEvent,\n  callback: ReplayPluginOptions['beforeAddRecordingEvent'],\n): RecordingEvent | null | undefined {\n  try {\n    if (typeof callback === 'function' && isCustomEvent(event)) {\n      return callback(event);\n    }\n  } catch (error) {\n    DEBUG_BUILD &&\n      debug.exception(error, 'An error occurred in the `beforeAddRecordingEvent` callback, skipping the event...');\n    return null;\n  }\n\n  return event;\n}\n","import type { ErrorEvent, Event, FeedbackEvent, ReplayEvent, TransactionEvent } from '@sentry/core';\n\n/** If the event is an error event */\nexport function isErrorEvent(event: Event): event is ErrorEvent {\n  return !event.type;\n}\n\n/** If the event is a transaction event */\nexport function isTransactionEvent(event: Event): event is TransactionEvent {\n  return event.type === 'transaction';\n}\n\n/** If the event is an replay event */\nexport function isReplayEvent(event: Event): event is ReplayEvent {\n  return event.type === 'replay_event';\n}\n\n/** If the event is a feedback event */\nexport function isFeedbackEvent(event: Event): event is FeedbackEvent {\n  return event.type === 'feedback';\n}\n","import type { ErrorEvent, Event, TransactionEvent, TransportMakeRequestResponse } from '@sentry/core';\nimport { setTimeout } from '@sentry-internal/browser-utils';\nimport type { ReplayContainer } from '../types';\nimport { isErrorEvent, isTransactionEvent } from '../util/eventUtils';\n\ntype AfterSendEventCallback = (event: Event, sendResponse: TransportMakeRequestResponse) => void;\n\n/**\n * Returns a listener to be added to `client.on('afterSendErrorEvent, listener)`.\n */\nexport function handleAfterSendEvent(replay: ReplayContainer): AfterSendEventCallback {\n  return (event: Event, sendResponse: TransportMakeRequestResponse) => {\n    if (!replay.isEnabled() || (!isErrorEvent(event) && !isTransactionEvent(event))) {\n      return;\n    }\n\n    const statusCode = sendResponse?.statusCode;\n\n    // We only want to do stuff on successful error sending, otherwise you get error replays without errors attached\n    // If not using the base transport, we allow `undefined` response (as a custom transport may not implement this correctly yet)\n    // If we do use the base transport, we skip if we encountered an non-OK status code\n    if (!statusCode || statusCode < 200 || statusCode >= 300) {\n      return;\n    }\n\n    if (isTransactionEvent(event)) {\n      handleTransactionEvent(replay, event);\n      return;\n    }\n\n    handleErrorEvent(replay, event);\n  };\n}\n\nfunction handleTransactionEvent(replay: ReplayContainer, event: TransactionEvent): void {\n  const replayContext = replay.getContext();\n\n  // Collect traceIds in _context regardless of `recordingMode`\n  // In error mode, _context gets cleared on every checkout\n  // We limit to max. 100 transactions linked\n  if (event.contexts?.trace?.trace_id && replayContext.traceIds.size < 100) {\n    replayContext.traceIds.add(event.contexts.trace.trace_id);\n  }\n}\n\nfunction handleErrorEvent(replay: ReplayContainer, event: ErrorEvent): void {\n  const replayContext = replay.getContext();\n\n  // Add error to list of errorIds of replay. This is ok to do even if not\n  // sampled because context will get reset at next checkout.\n  // XXX: There is also a race condition where it's possible to capture an\n  // error to Sentry before Replay SDK has loaded, but response returns after\n  // it was loaded, and this gets called.\n  // We limit to max. 100 errors linked\n  if (event.event_id && replayContext.errorIds.size < 100) {\n    replayContext.errorIds.add(event.event_id);\n  }\n\n  // If error event is tagged with replay id it means it was sampled (when in buffer mode)\n  // Need to be very careful that this does not cause an infinite loop\n  if (replay.recordingMode !== 'buffer' || !event.tags || !event.tags.replayId) {\n    return;\n  }\n\n  const { beforeErrorSampling } = replay.getOptions();\n  if (typeof beforeErrorSampling === 'function' && !beforeErrorSampling(event)) {\n    return;\n  }\n\n  setTimeout(async () => {\n    try {\n      // Capture current event buffer as new replay\n      await replay.sendBufferedReplayOrFlush();\n    } catch (err) {\n      replay.handleException(err);\n    }\n  });\n}\n","import type { ErrorEvent, Event } from '@sentry/core';\nimport { getLocationHref } from '@sentry/core';\nimport type { ReplayContainer } from '../types';\nimport { createBreadcrumb } from '../util/createBreadcrumb';\nimport { isErrorEvent } from '../util/eventUtils';\nimport { addBreadcrumbEvent } from './util/addBreadcrumbEvent';\n\ntype BeforeSendEventCallback = (event: Event) => void;\n\n/**\n * Returns a listener to be added to `client.on('afterSendErrorEvent, listener)`.\n */\nexport function handleBeforeSendEvent(replay: ReplayContainer): BeforeSendEventCallback {\n  return (event: Event) => {\n    if (!replay.isEnabled() || !isErrorEvent(event)) {\n      return;\n    }\n\n    handleHydrationError(replay, event);\n  };\n}\n\nfunction handleHydrationError(replay: ReplayContainer, event: ErrorEvent): void {\n  const exceptionValue = event.exception?.values?.[0]?.value;\n  if (typeof exceptionValue !== 'string') {\n    return;\n  }\n\n  if (\n    // Only matches errors in production builds of react-dom\n    // Example https://reactjs.org/docs/error-decoder.html?invariant=423\n    // With newer React versions, the messages changed to a different website https://react.dev/errors/418\n    exceptionValue.match(\n      /(reactjs\\.org\\/docs\\/error-decoder\\.html\\?invariant=|react\\.dev\\/errors\\/)(418|419|422|423|425)/,\n    ) ||\n    // Development builds of react-dom\n    // Error 1: Hydration failed because the initial UI does not match what was rendered on the server.\n    // Error 2: Text content does not match server-rendered HTML. Warning: Text content did not match.\n    exceptionValue.match(/(does not match server-rendered HTML|Hydration failed because)/i)\n  ) {\n    const breadcrumb = createBreadcrumb({\n      category: 'replay.hydrate-error',\n      data: {\n        url: getLocationHref(),\n      },\n    });\n    addBreadcrumbEvent(replay, breadcrumb);\n  }\n}\n","import type { Breadcrumb } from '@sentry/core';\nimport { getClient, normalize } from '@sentry/core';\nimport { CONSOLE_ARG_MAX_SIZE } from '../constants';\nimport type { ReplayContainer } from '../types';\nimport type { ReplayFrame } from '../types/replayFrame';\nimport { createBreadcrumb } from '../util/createBreadcrumb';\nimport { addBreadcrumbEvent } from './util/addBreadcrumbEvent';\n\ntype BreadcrumbWithCategory = Required<Pick<Breadcrumb, 'category'>>;\n\n/**\n * Handle breadcrumbs that Sentry captures, and make sure to capture relevant breadcrumbs to Replay as well.\n */\nexport function handleBreadcrumbs(replay: ReplayContainer): void {\n  const client = getClient();\n\n  if (!client) {\n    return;\n  }\n\n  client.on('beforeAddBreadcrumb', breadcrumb => beforeAddBreadcrumb(replay, breadcrumb));\n}\n\nfunction beforeAddBreadcrumb(replay: ReplayContainer, breadcrumb: Breadcrumb): void {\n  if (!replay.isEnabled() || !isBreadcrumbWithCategory(breadcrumb)) {\n    return;\n  }\n\n  const result = normalizeBreadcrumb(breadcrumb);\n  if (result) {\n    addBreadcrumbEvent(replay, result);\n  }\n}\n\n/** Exported only for tests. */\nexport function normalizeBreadcrumb(breadcrumb: Breadcrumb): Breadcrumb | null {\n  if (\n    !isBreadcrumbWithCategory(breadcrumb) ||\n    [\n      // fetch & xhr are handled separately,in handleNetworkBreadcrumbs\n      'fetch',\n      'xhr',\n      // These two are breadcrumbs for emitted sentry events, we don't care about them\n      'sentry.event',\n      'sentry.transaction',\n    ].includes(breadcrumb.category) ||\n    // We capture UI breadcrumbs separately\n    breadcrumb.category.startsWith('ui.')\n  ) {\n    return null;\n  }\n\n  if (breadcrumb.category === 'console') {\n    return normalizeConsoleBreadcrumb(breadcrumb);\n  }\n\n  return createBreadcrumb(breadcrumb);\n}\n\n/** exported for tests only */\nexport function normalizeConsoleBreadcrumb(\n  breadcrumb: Omit<Breadcrumb, 'category'> & BreadcrumbWithCategory,\n): ReplayFrame {\n  const args = breadcrumb.data?.arguments;\n\n  if (!Array.isArray(args) || args.length === 0) {\n    return createBreadcrumb(breadcrumb);\n  }\n\n  let isTruncated = false;\n\n  // Avoid giant args captures\n  const normalizedArgs = args.map(arg => {\n    if (!arg) {\n      return arg;\n    }\n    if (typeof arg === 'string') {\n      if (arg.length > CONSOLE_ARG_MAX_SIZE) {\n        isTruncated = true;\n        return `${arg.slice(0, CONSOLE_ARG_MAX_SIZE)}…`;\n      }\n\n      return arg;\n    }\n    if (typeof arg === 'object') {\n      try {\n        const normalizedArg = normalize(arg, 7);\n        const stringified = JSON.stringify(normalizedArg);\n        if (stringified.length > CONSOLE_ARG_MAX_SIZE) {\n          isTruncated = true;\n          // We use the pretty printed JSON string here as a base\n          return `${JSON.stringify(normalizedArg, null, 2).slice(0, CONSOLE_ARG_MAX_SIZE)}…`;\n        }\n        return normalizedArg;\n      } catch {\n        // fall back to default\n      }\n    }\n\n    return arg;\n  });\n\n  return createBreadcrumb({\n    ...breadcrumb,\n    data: {\n      ...breadcrumb.data,\n      arguments: normalizedArgs,\n      ...(isTruncated ? { _meta: { warnings: ['CONSOLE_ARG_TRUNCATED'] } } : {}),\n    },\n  });\n}\n\nfunction isBreadcrumbWithCategory(breadcrumb: Breadcrumb): breadcrumb is BreadcrumbWithCategory {\n  return !!breadcrumb.category;\n}\n","import type { Event, EventHint } from '@sentry/core';\n\n/**\n * Returns true if we think the given event is an error originating inside of rrweb.\n */\nexport function isRrwebError(event: Event, hint: EventHint): boolean {\n  if (event.type || !event.exception?.values?.length) {\n    return false;\n  }\n\n  // @ts-expect-error this may be set by rrweb when it finds errors\n  if (hint.originalException?.__rrweb__) {\n    return true;\n  }\n\n  return false;\n}\n","import type { DynamicSamplingContext } from '@sentry/core';\nimport { getActiveSpan, getCurrentScope, getDynamicSamplingContextFromSpan } from '@sentry/core';\n\n/**\n * Reset the `replay_id` field on the DSC.\n */\nexport function resetReplayIdOnDynamicSamplingContext(): void {\n  // Reset DSC on the current scope, if there is one\n  const dsc = getCurrentScope().getPropagationContext().dsc;\n  if (dsc) {\n    delete dsc.replay_id;\n  }\n\n  // Clear it from frozen DSC on the active span\n  const activeSpan = getActiveSpan();\n  if (activeSpan) {\n    const dsc = getDynamicSamplingContextFromSpan(activeSpan);\n    delete (dsc as Partial<DynamicSamplingContext>).replay_id;\n  }\n}\n","import type { FeedbackEvent } from '@sentry/core';\nimport { EventType } from '@sentry-internal/rrweb';\nimport type { ReplayBreadcrumbFrameEvent, ReplayContainer } from '../../types';\n\n/**\n * Add a feedback breadcrumb event to replay.\n */\nexport function addFeedbackBreadcrumb(replay: ReplayContainer, event: FeedbackEvent): void {\n  replay.triggerUserActivity();\n  replay.addUpdate(() => {\n    if (!event.timestamp) {\n      // Ignore events that don't have timestamps (this shouldn't happen, more of a typing issue)\n      // Return true here so that we don't flush\n      return true;\n    }\n\n    // This should never reject\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    replay.throttledAddEvent({\n      type: EventType.Custom,\n      timestamp: event.timestamp * 1000,\n      data: {\n        tag: 'breadcrumb',\n        payload: {\n          timestamp: event.timestamp,\n          type: 'default',\n          category: 'sentry.feedback',\n          data: {\n            feedbackId: event.event_id,\n          },\n        },\n      },\n    } as ReplayBreadcrumbFrameEvent);\n\n    return false;\n  });\n}\n","import type { Event } from '@sentry/core';\nimport { UNABLE_TO_SEND_REPLAY } from '../../constants';\nimport type { ReplayContainer } from '../../types';\nimport { isSampled } from '../../util/isSampled';\n\n/**\n * Determine if event should be sampled (only applies in buffer mode).\n * When an event is captured by `handleGlobalEvent`, when in buffer mode\n * we determine if we want to sample the error or not.\n */\nexport function shouldSampleForBufferEvent(replay: ReplayContainer, event: Event): boolean {\n  if (replay.recordingMode !== 'buffer') {\n    return false;\n  }\n\n  // ignore this error because otherwise we could loop indefinitely with\n  // trying to capture replay and failing\n  if (event.message === UNABLE_TO_SEND_REPLAY) {\n    return false;\n  }\n\n  // Require the event to be an error event & to have an exception\n  if (!event.exception || event.type) {\n    return false;\n  }\n\n  return isSampled(replay.getOptions().errorSampleRate);\n}\n","import type { Event, EventHint } from '@sentry/core';\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { ReplayContainer } from '../types';\nimport { isErrorEvent, isFeedbackEvent, isReplayEvent, isTransactionEvent } from '../util/eventUtils';\nimport { isRrwebError } from '../util/isRrwebError';\nimport { debug } from '../util/logger';\nimport { resetReplayIdOnDynamicSamplingContext } from '../util/resetReplayIdOnDynamicSamplingContext';\nimport { addFeedbackBreadcrumb } from './util/addFeedbackBreadcrumb';\nimport { shouldSampleForBufferEvent } from './util/shouldSampleForBufferEvent';\n\n/**\n * Returns a listener to be added to `addEventProcessor(listener)`.\n */\nexport function handleGlobalEventListener(replay: ReplayContainer): (event: Event, hint: EventHint) => Event | null {\n  return Object.assign(\n    (event: Event, hint: EventHint) => {\n      // Do nothing if replay has been disabled or paused\n      if (!replay.isEnabled() || replay.isPaused()) {\n        return event;\n      }\n\n      if (isReplayEvent(event)) {\n        // Replays have separate set of breadcrumbs, do not include breadcrumbs\n        // from core SDK\n        delete event.breadcrumbs;\n        return event;\n      }\n\n      // We only want to handle errors, transactions, and feedbacks, nothing else\n      if (!isErrorEvent(event) && !isTransactionEvent(event) && !isFeedbackEvent(event)) {\n        return event;\n      }\n\n      // Ensure we do not add replay_id if the session is expired\n      const isSessionActive = replay.checkAndHandleExpiredSession();\n      if (!isSessionActive) {\n        // prevent exceeding replay durations by removing the expired replayId from the DSC\n        resetReplayIdOnDynamicSamplingContext();\n        return event;\n      }\n\n      if (isFeedbackEvent(event)) {\n        // This should never reject\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        replay.flush();\n        event.contexts.feedback.replay_id = replay.getSessionId();\n        // Add a replay breadcrumb for this piece of feedback\n        addFeedbackBreadcrumb(replay, event);\n        return event;\n      }\n\n      // Unless `captureExceptions` is enabled, we want to ignore errors coming from rrweb\n      // As there can be a bunch of stuff going wrong in internals there, that we don't want to bubble up to users\n      if (isRrwebError(event, hint) && !replay.getOptions()._experiments.captureExceptions) {\n        DEBUG_BUILD && debug.log('Ignoring error from rrweb internals', event);\n        return null;\n      }\n\n      // When in buffer mode, we decide to sample here.\n      // Later, in `handleAfterSendEvent`, if the replayId is set, we know that we sampled\n      // And convert the buffer session to a full session\n      const isErrorEventSampled = shouldSampleForBufferEvent(replay, event);\n\n      // Tag errors if it has been sampled in buffer mode, or if it is session mode\n      // Only tag transactions if in session mode\n      const shouldTagReplayId = isErrorEventSampled || replay.recordingMode === 'session';\n\n      if (shouldTagReplayId) {\n        event.tags = { ...event.tags, replayId: replay.getSessionId() };\n      }\n\n      return event;\n    },\n    { id: 'Replay' },\n  );\n}\n","import { EventType } from '@sentry-internal/rrweb';\nimport type { AddEventResult, AllEntryData, ReplayContainer, ReplayPerformanceEntry } from '../types';\n\n/**\n * Create a \"span\" for each performance entry.\n */\nexport function createPerformanceSpans(\n  replay: ReplayContainer,\n  entries: ReplayPerformanceEntry<AllEntryData>[],\n): Promise<AddEventResult | null>[] {\n  return entries.map(({ type, start, end, name, data }) => {\n    const response = replay.throttledAddEvent({\n      type: EventType.Custom,\n      timestamp: start,\n      data: {\n        tag: 'performanceSpan',\n        payload: {\n          op: type,\n          description: name,\n          startTimestamp: start,\n          endTimestamp: end,\n          data,\n        },\n      },\n    });\n\n    // If response is a string, it means its either THROTTLED or SKIPPED\n    return typeof response === 'string' ? Promise.resolve(null) : response;\n  });\n}\n","import type { HandlerDataHistory } from '@sentry/core';\nimport type { HistoryData, ReplayContainer, ReplayPerformanceEntry } from '../types';\nimport { createPerformanceSpans } from '../util/createPerformanceSpans';\n\nfunction handleHistory(handlerData: HandlerDataHistory): ReplayPerformanceEntry<HistoryData> {\n  const { from, to } = handlerData;\n\n  const now = Date.now() / 1000;\n\n  return {\n    type: 'navigation.push',\n    start: now,\n    end: now,\n    name: to,\n    data: {\n      previous: from,\n    },\n  };\n}\n\n/**\n * Returns a listener to be added to `addHistoryInstrumentationHandler(listener)`.\n */\nexport function handleHistorySpanListener(replay: ReplayContainer): (handlerData: HandlerDataHistory) => void {\n  return (handlerData: HandlerDataHistory) => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleHistory(handlerData);\n\n    if (result === null) {\n      return;\n    }\n\n    // Need to collect visited URLs\n    replay.getContext().urls.push(result.name);\n    replay.triggerUserActivity();\n\n    replay.addUpdate(() => {\n      createPerformanceSpans(replay, [result]);\n      // Returning false to flush\n      return false;\n    });\n  };\n}\n","import { getClient, isSentryRequestUrl } from '@sentry/core';\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { ReplayContainer } from '../types';\n\n/**\n * Check whether a given request URL should be filtered out. This is so we\n * don't log Sentry ingest requests.\n */\nexport function shouldFilterRequest(replay: ReplayContainer, url: string): boolean {\n  // If we enabled the `traceInternals` experiment, we want to trace everything\n  if (DEBUG_BUILD && replay.getOptions()._experiments.traceInternals) {\n    return false;\n  }\n\n  return isSentryRequestUrl(url, getClient());\n}\n","import type { NetworkRequestData, ReplayContainer, ReplayPerformanceEntry } from '../../types';\nimport { createPerformanceSpans } from '../../util/createPerformanceSpans';\nimport { shouldFilterRequest } from '../../util/shouldFilterRequest';\n\n/** Add a performance entry breadcrumb */\nexport function addNetworkBreadcrumb(\n  replay: ReplayContainer,\n  result: ReplayPerformanceEntry<NetworkRequestData> | null,\n): void {\n  if (!replay.isEnabled()) {\n    return;\n  }\n\n  if (result === null) {\n    return;\n  }\n\n  if (shouldFilterRequest(replay, result.name)) {\n    return;\n  }\n\n  replay.addUpdate(() => {\n    createPerformanceSpans(replay, [result]);\n    // Returning true will cause `addUpdate` to not flush\n    // We do not want network requests to cause a flush. This will prevent\n    // recurring/polling requests from keeping the replay session alive.\n    return true;\n  });\n}\n","import { stringMatchesSomePattern } from '@sentry/core';\nimport type { NetworkMetaWarning } from '@sentry-internal/browser-utils';\nimport { serializeFormData } from '@sentry-internal/browser-utils';\nimport { NETWORK_BODY_MAX_SIZE, WINDOW } from '../../constants';\nimport type {\n  NetworkBody,\n  NetworkRequestData,\n  ReplayNetworkRequestData,\n  ReplayNetworkRequestOrResponse,\n  ReplayPerformanceEntry,\n} from '../../types';\n\n/** Get the size of a body. */\nexport function getBodySize(body: RequestInit['body']): number | undefined {\n  if (!body) {\n    return undefined;\n  }\n\n  const textEncoder = new TextEncoder();\n\n  try {\n    if (typeof body === 'string') {\n      return textEncoder.encode(body).length;\n    }\n\n    if (body instanceof URLSearchParams) {\n      return textEncoder.encode(body.toString()).length;\n    }\n\n    if (body instanceof FormData) {\n      const formDataStr = serializeFormData(body);\n      return textEncoder.encode(formDataStr).length;\n    }\n\n    if (body instanceof Blob) {\n      return body.size;\n    }\n\n    if (body instanceof ArrayBuffer) {\n      return body.byteLength;\n    }\n\n    // Currently unhandled types: ArrayBufferView, ReadableStream\n  } catch {\n    // just return undefined\n  }\n\n  return undefined;\n}\n\n/** Convert a Content-Length header to number/undefined.  */\nexport function parseContentLengthHeader(header: string | null | undefined): number | undefined {\n  if (!header) {\n    return undefined;\n  }\n\n  const size = parseInt(header, 10);\n  return isNaN(size) ? undefined : size;\n}\n\n/** Merge a warning into an existing network request/response. */\nexport function mergeWarning(\n  info: ReplayNetworkRequestOrResponse | undefined,\n  warning: NetworkMetaWarning,\n): ReplayNetworkRequestOrResponse {\n  if (!info) {\n    return {\n      headers: {},\n      size: undefined,\n      _meta: {\n        warnings: [warning],\n      },\n    };\n  }\n\n  const newMeta = { ...info._meta };\n  const existingWarnings = newMeta.warnings || [];\n  newMeta.warnings = [...existingWarnings, warning];\n\n  info._meta = newMeta;\n  return info;\n}\n\n/** Convert ReplayNetworkRequestData to a PerformanceEntry. */\nexport function makeNetworkReplayBreadcrumb(\n  type: string,\n  data: ReplayNetworkRequestData | null,\n): ReplayPerformanceEntry<NetworkRequestData> | null {\n  if (!data) {\n    return null;\n  }\n\n  const { startTimestamp, endTimestamp, url, method, statusCode, request, response } = data;\n\n  const result: ReplayPerformanceEntry<NetworkRequestData> = {\n    type,\n    start: startTimestamp / 1000,\n    end: endTimestamp / 1000,\n    name: url,\n    data: {\n      method,\n      statusCode,\n      request,\n      response,\n    },\n  };\n\n  return result;\n}\n\n/** Build the request or response part of a replay network breadcrumb that was skipped. */\nexport function buildSkippedNetworkRequestOrResponse(bodySize: number | undefined): ReplayNetworkRequestOrResponse {\n  return {\n    headers: {},\n    size: bodySize,\n    _meta: {\n      warnings: ['URL_SKIPPED'],\n    },\n  };\n}\n\n/** Build the request or response part of a replay network breadcrumb. */\nexport function buildNetworkRequestOrResponse(\n  headers: Record<string, string>,\n  bodySize: number | undefined,\n  body: string | undefined,\n): ReplayNetworkRequestOrResponse | undefined {\n  if (!bodySize && Object.keys(headers).length === 0) {\n    return undefined;\n  }\n\n  if (!bodySize) {\n    return {\n      headers,\n    };\n  }\n\n  if (!body) {\n    return {\n      headers,\n      size: bodySize,\n    };\n  }\n\n  const info: ReplayNetworkRequestOrResponse = {\n    headers,\n    size: bodySize,\n  };\n\n  const { body: normalizedBody, warnings } = normalizeNetworkBody(body);\n  info.body = normalizedBody;\n  if (warnings?.length) {\n    info._meta = {\n      warnings,\n    };\n  }\n\n  return info;\n}\n\n/** Filter a set of headers */\nexport function getAllowedHeaders(headers: Record<string, string>, allowedHeaders: string[]): Record<string, string> {\n  return Object.entries(headers).reduce((filteredHeaders: Record<string, string>, [key, value]) => {\n    const normalizedKey = key.toLowerCase();\n    // Avoid putting empty strings into the headers\n    if (allowedHeaders.includes(normalizedKey) && headers[key]) {\n      filteredHeaders[normalizedKey] = value;\n    }\n    return filteredHeaders;\n  }, {});\n}\n\nfunction normalizeNetworkBody(body: string | undefined): {\n  body: NetworkBody | undefined;\n  warnings?: NetworkMetaWarning[];\n} {\n  if (!body || typeof body !== 'string') {\n    return {\n      body,\n    };\n  }\n\n  const exceedsSizeLimit = body.length > NETWORK_BODY_MAX_SIZE;\n  const isProbablyJson = _strIsProbablyJson(body);\n\n  if (exceedsSizeLimit) {\n    const truncatedBody = body.slice(0, NETWORK_BODY_MAX_SIZE);\n\n    if (isProbablyJson) {\n      return {\n        body: truncatedBody,\n        warnings: ['MAYBE_JSON_TRUNCATED'],\n      };\n    }\n\n    return {\n      body: `${truncatedBody}…`,\n      warnings: ['TEXT_TRUNCATED'],\n    };\n  }\n\n  if (isProbablyJson) {\n    try {\n      const jsonBody = JSON.parse(body);\n      return {\n        body: jsonBody,\n      };\n    } catch {\n      // fall back to just send the body as string\n    }\n  }\n\n  return {\n    body,\n  };\n}\n\nfunction _strIsProbablyJson(str: string): boolean {\n  const first = str[0];\n  const last = str[str.length - 1];\n\n  // Simple check: If this does not start & end with {} or [], it's not JSON\n  return (first === '[' && last === ']') || (first === '{' && last === '}');\n}\n\n/** Match an URL against a list of strings/Regex. */\nexport function urlMatches(url: string, urls: (string | RegExp)[]): boolean {\n  const fullUrl = getFullUrl(url);\n\n  return stringMatchesSomePattern(fullUrl, urls);\n}\n\n/** exported for tests */\nexport function getFullUrl(url: string, baseURI = WINDOW.document.baseURI): string {\n  // Short circuit for common cases:\n  if (url.startsWith('http://') || url.startsWith('https://') || url.startsWith(WINDOW.location.origin)) {\n    return url;\n  }\n  const fixedUrl = new URL(url, baseURI);\n\n  // If these do not match, we are not dealing with a relative URL, so just return it\n  if (fixedUrl.origin !== new URL(baseURI).origin) {\n    return url;\n  }\n\n  const fullUrl = fixedUrl.href;\n\n  // Remove trailing slashes, if they don't match the original URL\n  if (!url.endsWith('/') && fullUrl.endsWith('/')) {\n    return fullUrl.slice(0, -1);\n  }\n\n  return fullUrl;\n}\n","import type { Breadcrumb, FetchBreadcrumbData } from '@sentry/core';\nimport type { FetchHint, NetworkMetaWarning } from '@sentry-internal/browser-utils';\nimport { getBodyString, getFetchRequestArgBody, setTimeout } from '@sentry-internal/browser-utils';\nimport { DEBUG_BUILD } from '../../debug-build';\nimport type {\n  ReplayContainer,\n  ReplayNetworkOptions,\n  ReplayNetworkRequestData,\n  ReplayNetworkRequestOrResponse,\n} from '../../types';\nimport { debug } from '../../util/logger';\nimport { addNetworkBreadcrumb } from './addNetworkBreadcrumb';\nimport {\n  buildNetworkRequestOrResponse,\n  buildSkippedNetworkRequestOrResponse,\n  getAllowedHeaders,\n  getBodySize,\n  makeNetworkReplayBreadcrumb,\n  mergeWarning,\n  parseContentLengthHeader,\n  urlMatches,\n} from './networkUtils';\n\n/**\n * Capture a fetch breadcrumb to a replay.\n * This adds additional data (where appropriate).\n */\nexport async function captureFetchBreadcrumbToReplay(\n  breadcrumb: Breadcrumb & { data: FetchBreadcrumbData },\n  hint: Partial<FetchHint>,\n  options: ReplayNetworkOptions & {\n    replay: ReplayContainer;\n  },\n): Promise<void> {\n  try {\n    const data = await _prepareFetchData(breadcrumb, hint, options);\n\n    // Create a replay performance entry from this breadcrumb\n    const result = makeNetworkReplayBreadcrumb('resource.fetch', data);\n    addNetworkBreadcrumb(options.replay, result);\n  } catch (error) {\n    DEBUG_BUILD && debug.exception(error, 'Failed to capture fetch breadcrumb');\n  }\n}\n\n/**\n * Enrich a breadcrumb with additional data.\n * This has to be sync & mutate the given breadcrumb,\n * as the breadcrumb is afterwards consumed by other handlers.\n */\nexport function enrichFetchBreadcrumb(\n  breadcrumb: Breadcrumb & { data: FetchBreadcrumbData },\n  hint: Partial<FetchHint>,\n): void {\n  const { input, response } = hint;\n\n  const body = input ? getFetchRequestArgBody(input) : undefined;\n  const reqSize = getBodySize(body);\n\n  const resSize = response ? parseContentLengthHeader(response.headers.get('content-length')) : undefined;\n\n  if (reqSize !== undefined) {\n    breadcrumb.data.request_body_size = reqSize;\n  }\n  if (resSize !== undefined) {\n    breadcrumb.data.response_body_size = resSize;\n  }\n}\n\nasync function _prepareFetchData(\n  breadcrumb: Breadcrumb & { data: FetchBreadcrumbData },\n  hint: Partial<FetchHint>,\n  options: ReplayNetworkOptions,\n): Promise<ReplayNetworkRequestData> {\n  const now = Date.now();\n  const { startTimestamp = now, endTimestamp = now } = hint;\n\n  const {\n    url,\n    method,\n    status_code: statusCode = 0,\n    request_body_size: requestBodySize,\n    response_body_size: responseBodySize,\n  } = breadcrumb.data;\n\n  const captureDetails =\n    urlMatches(url, options.networkDetailAllowUrls) && !urlMatches(url, options.networkDetailDenyUrls);\n\n  const request = captureDetails\n    ? _getRequestInfo(options, hint.input, requestBodySize)\n    : buildSkippedNetworkRequestOrResponse(requestBodySize);\n  const response = await _getResponseInfo(captureDetails, options, hint.response, responseBodySize);\n\n  return {\n    startTimestamp,\n    endTimestamp,\n    url,\n    method,\n    statusCode,\n    request,\n    response,\n  };\n}\n\nfunction _getRequestInfo(\n  { networkCaptureBodies, networkRequestHeaders }: ReplayNetworkOptions,\n  input: FetchHint['input'] | undefined,\n  requestBodySize?: number,\n): ReplayNetworkRequestOrResponse | undefined {\n  const headers = input ? getRequestHeaders(input, networkRequestHeaders) : {};\n\n  if (!networkCaptureBodies) {\n    return buildNetworkRequestOrResponse(headers, requestBodySize, undefined);\n  }\n\n  // We only want to transmit string or string-like bodies\n  const requestBody = getFetchRequestArgBody(input);\n  const [bodyStr, warning] = getBodyString(requestBody, debug);\n  const data = buildNetworkRequestOrResponse(headers, requestBodySize, bodyStr);\n\n  if (warning) {\n    return mergeWarning(data, warning);\n  }\n\n  return data;\n}\n\n/** Exported only for tests. */\nexport async function _getResponseInfo(\n  captureDetails: boolean,\n  {\n    networkCaptureBodies,\n    networkResponseHeaders,\n  }: Pick<ReplayNetworkOptions, 'networkCaptureBodies' | 'networkResponseHeaders'>,\n  response: Response | undefined,\n  responseBodySize?: number,\n): Promise<ReplayNetworkRequestOrResponse | undefined> {\n  if (!captureDetails && responseBodySize !== undefined) {\n    return buildSkippedNetworkRequestOrResponse(responseBodySize);\n  }\n\n  const headers = response ? getAllHeaders(response.headers, networkResponseHeaders) : {};\n\n  if (!response || (!networkCaptureBodies && responseBodySize !== undefined)) {\n    return buildNetworkRequestOrResponse(headers, responseBodySize, undefined);\n  }\n\n  const [bodyText, warning] = await _parseFetchResponseBody(response);\n  const result = getResponseData(bodyText, {\n    networkCaptureBodies,\n\n    responseBodySize,\n    captureDetails,\n    headers,\n  });\n\n  if (warning) {\n    return mergeWarning(result, warning);\n  }\n\n  return result;\n}\n\nfunction getResponseData(\n  bodyText: string | undefined,\n  {\n    networkCaptureBodies,\n    responseBodySize,\n    captureDetails,\n    headers,\n  }: {\n    captureDetails: boolean;\n    networkCaptureBodies: boolean;\n    responseBodySize: number | undefined;\n    headers: Record<string, string>;\n  },\n): ReplayNetworkRequestOrResponse | undefined {\n  try {\n    const size = bodyText?.length && responseBodySize === undefined ? getBodySize(bodyText) : responseBodySize;\n\n    if (!captureDetails) {\n      return buildSkippedNetworkRequestOrResponse(size);\n    }\n\n    if (networkCaptureBodies) {\n      return buildNetworkRequestOrResponse(headers, size, bodyText);\n    }\n\n    return buildNetworkRequestOrResponse(headers, size, undefined);\n  } catch (error) {\n    DEBUG_BUILD && debug.exception(error, 'Failed to serialize response body');\n    // fallback\n    return buildNetworkRequestOrResponse(headers, responseBodySize, undefined);\n  }\n}\n\nasync function _parseFetchResponseBody(response: Response): Promise<[string | undefined, NetworkMetaWarning?]> {\n  const res = _tryCloneResponse(response);\n\n  if (!res) {\n    return [undefined, 'BODY_PARSE_ERROR'];\n  }\n\n  try {\n    const text = await _tryGetResponseText(res);\n    return [text];\n  } catch (error) {\n    if (error instanceof Error && error.message.indexOf('Timeout') > -1) {\n      DEBUG_BUILD && debug.warn('Parsing text body from response timed out');\n      return [undefined, 'BODY_PARSE_TIMEOUT'];\n    }\n\n    DEBUG_BUILD && debug.exception(error, 'Failed to get text body from response');\n    return [undefined, 'BODY_PARSE_ERROR'];\n  }\n}\n\nfunction getAllHeaders(headers: Headers, allowedHeaders: string[]): Record<string, string> {\n  const allHeaders: Record<string, string> = {};\n\n  allowedHeaders.forEach(header => {\n    if (headers.get(header)) {\n      allHeaders[header] = headers.get(header) as string;\n    }\n  });\n\n  return allHeaders;\n}\n\nfunction getRequestHeaders(fetchArgs: unknown[], allowedHeaders: string[]): Record<string, string> {\n  if (fetchArgs.length === 1 && typeof fetchArgs[0] !== 'string') {\n    return getHeadersFromOptions(fetchArgs[0] as Request | RequestInit, allowedHeaders);\n  }\n\n  if (fetchArgs.length === 2) {\n    return getHeadersFromOptions(fetchArgs[1] as Request | RequestInit, allowedHeaders);\n  }\n\n  return {};\n}\n\nfunction getHeadersFromOptions(\n  input: Request | RequestInit | undefined,\n  allowedHeaders: string[],\n): Record<string, string> {\n  if (!input) {\n    return {};\n  }\n\n  const headers = input.headers;\n\n  if (!headers) {\n    return {};\n  }\n\n  if (headers instanceof Headers) {\n    return getAllHeaders(headers, allowedHeaders);\n  }\n\n  // We do not support this, as it is not really documented (anymore?)\n  if (Array.isArray(headers)) {\n    return {};\n  }\n\n  return getAllowedHeaders(headers, allowedHeaders);\n}\n\nfunction _tryCloneResponse(response: Response): Response | void {\n  try {\n    // We have to clone this, as the body can only be read once\n    return response.clone();\n  } catch (error) {\n    // this can throw if the response was already consumed before\n    DEBUG_BUILD && debug.exception(error, 'Failed to clone response body');\n  }\n}\n\n/**\n * Get the response body of a fetch request, or timeout after 500ms.\n * Fetch can return a streaming body, that may not resolve (or not for a long time).\n * If that happens, we rather abort after a short time than keep waiting for this.\n */\nfunction _tryGetResponseText(response: Response): Promise<string | undefined> {\n  return new Promise((resolve, reject) => {\n    const timeout = setTimeout(() => reject(new Error('Timeout while trying to read response body')), 500);\n\n    _getResponseText(response)\n      .then(\n        txt => resolve(txt),\n        reason => reject(reason),\n      )\n      .finally(() => clearTimeout(timeout));\n  });\n}\n\nasync function _getResponseText(response: Response): Promise<string> {\n  // Force this to be a promise, just to be safe\n  // eslint-disable-next-line no-return-await\n  return await response.text();\n}\n","import type { Breadcrumb, XhrBreadcrumbData } from '@sentry/core';\nimport type { NetworkMetaWarning, XhrHint } from '@sentry-internal/browser-utils';\nimport { getBodyString, SENTRY_XHR_DATA_KEY } from '@sentry-internal/browser-utils';\nimport { DEBUG_BUILD } from '../../debug-build';\nimport type { ReplayContainer, ReplayNetworkOptions, ReplayNetworkRequestData } from '../../types';\nimport { debug } from '../../util/logger';\nimport { addNetworkBreadcrumb } from './addNetworkBreadcrumb';\nimport {\n  buildNetworkRequestOrResponse,\n  buildSkippedNetworkRequestOrResponse,\n  getAllowedHeaders,\n  getBodySize,\n  makeNetworkReplayBreadcrumb,\n  mergeWarning,\n  parseContentLengthHeader,\n  urlMatches,\n} from './networkUtils';\n\n/**\n * Capture an XHR breadcrumb to a replay.\n * This adds additional data (where appropriate).\n */\nexport async function captureXhrBreadcrumbToReplay(\n  breadcrumb: Breadcrumb & { data: XhrBreadcrumbData },\n  hint: Partial<XhrHint>,\n  options: ReplayNetworkOptions & { replay: ReplayContainer },\n): Promise<void> {\n  try {\n    const data = _prepareXhrData(breadcrumb, hint, options);\n\n    // Create a replay performance entry from this breadcrumb\n    const result = makeNetworkReplayBreadcrumb('resource.xhr', data);\n    addNetworkBreadcrumb(options.replay, result);\n  } catch (error) {\n    DEBUG_BUILD && debug.exception(error, 'Failed to capture xhr breadcrumb');\n  }\n}\n\n/**\n * Enrich a breadcrumb with additional data.\n * This has to be sync & mutate the given breadcrumb,\n * as the breadcrumb is afterwards consumed by other handlers.\n */\nexport function enrichXhrBreadcrumb(\n  breadcrumb: Breadcrumb & { data: XhrBreadcrumbData },\n  hint: Partial<XhrHint>,\n): void {\n  const { xhr, input } = hint;\n\n  if (!xhr) {\n    return;\n  }\n\n  const reqSize = getBodySize(input);\n  const resSize = xhr.getResponseHeader('content-length')\n    ? parseContentLengthHeader(xhr.getResponseHeader('content-length'))\n    : _getBodySize(xhr.response, xhr.responseType);\n\n  if (reqSize !== undefined) {\n    breadcrumb.data.request_body_size = reqSize;\n  }\n  if (resSize !== undefined) {\n    breadcrumb.data.response_body_size = resSize;\n  }\n}\n\nfunction _prepareXhrData(\n  breadcrumb: Breadcrumb & { data: XhrBreadcrumbData },\n  hint: Partial<XhrHint>,\n  options: ReplayNetworkOptions,\n): ReplayNetworkRequestData | null {\n  const now = Date.now();\n  const { startTimestamp = now, endTimestamp = now, input, xhr } = hint;\n\n  const {\n    url,\n    method,\n    status_code: statusCode = 0,\n    request_body_size: requestBodySize,\n    response_body_size: responseBodySize,\n  } = breadcrumb.data;\n\n  if (!url) {\n    return null;\n  }\n\n  if (!xhr || !urlMatches(url, options.networkDetailAllowUrls) || urlMatches(url, options.networkDetailDenyUrls)) {\n    const request = buildSkippedNetworkRequestOrResponse(requestBodySize);\n    const response = buildSkippedNetworkRequestOrResponse(responseBodySize);\n    return {\n      startTimestamp,\n      endTimestamp,\n      url,\n      method,\n      statusCode,\n      request,\n      response,\n    };\n  }\n\n  // ---- This additional network data below is only captured for URLs defined in `networkDetailAllowUrls` ----\n\n  const xhrInfo = xhr[SENTRY_XHR_DATA_KEY];\n  const networkRequestHeaders = xhrInfo\n    ? getAllowedHeaders(xhrInfo.request_headers, options.networkRequestHeaders)\n    : {};\n  const networkResponseHeaders = getAllowedHeaders(getResponseHeaders(xhr), options.networkResponseHeaders);\n\n  const [requestBody, requestWarning] = options.networkCaptureBodies ? getBodyString(input, debug) : [undefined];\n  const [responseBody, responseWarning] = options.networkCaptureBodies ? _getXhrResponseBody(xhr) : [undefined];\n\n  const request = buildNetworkRequestOrResponse(networkRequestHeaders, requestBodySize, requestBody);\n  const response = buildNetworkRequestOrResponse(networkResponseHeaders, responseBodySize, responseBody);\n\n  return {\n    startTimestamp,\n    endTimestamp,\n    url,\n    method,\n    statusCode,\n    request: requestWarning ? mergeWarning(request, requestWarning) : request,\n    response: responseWarning ? mergeWarning(response, responseWarning) : response,\n  };\n}\n\nfunction getResponseHeaders(xhr: XMLHttpRequest): Record<string, string> {\n  const headers = xhr.getAllResponseHeaders();\n\n  if (!headers) {\n    return {};\n  }\n\n  return headers.split('\\r\\n').reduce((acc: Record<string, string>, line: string) => {\n    const [key, value] = line.split(': ') as [string, string | undefined];\n    if (value) {\n      acc[key.toLowerCase()] = value;\n    }\n    return acc;\n  }, {});\n}\n\nfunction _getXhrResponseBody(xhr: XMLHttpRequest): [string | undefined, NetworkMetaWarning?] {\n  // We collect errors that happen, but only log them if we can't get any response body\n  const errors: unknown[] = [];\n\n  try {\n    return [xhr.responseText];\n  } catch (e) {\n    errors.push(e);\n  }\n\n  // Try to manually parse the response body, if responseText fails\n  try {\n    return _parseXhrResponse(xhr.response, xhr.responseType);\n  } catch (e) {\n    errors.push(e);\n  }\n\n  DEBUG_BUILD && debug.warn('Failed to get xhr response body', ...errors);\n\n  return [undefined];\n}\n\n/**\n * Get the string representation of the XHR response.\n * Based on MDN, these are the possible types of the response:\n * string\n * ArrayBuffer\n * Blob\n * Document\n * POJO\n *\n * Exported only for tests.\n */\nexport function _parseXhrResponse(\n  body: XMLHttpRequest['response'],\n  responseType: XMLHttpRequest['responseType'],\n): [string | undefined, NetworkMetaWarning?] {\n  try {\n    if (typeof body === 'string') {\n      return [body];\n    }\n\n    if (body instanceof Document) {\n      return [body.body.outerHTML];\n    }\n\n    if (responseType === 'json' && body && typeof body === 'object') {\n      return [JSON.stringify(body)];\n    }\n\n    if (!body) {\n      return [undefined];\n    }\n  } catch (error) {\n    DEBUG_BUILD && debug.exception(error, 'Failed to serialize body', body);\n    return [undefined, 'BODY_PARSE_ERROR'];\n  }\n\n  DEBUG_BUILD && debug.log('Skipping network body because of body type', body);\n\n  return [undefined, 'UNPARSEABLE_BODY_TYPE'];\n}\n\nfunction _getBodySize(\n  body: XMLHttpRequest['response'],\n  responseType: XMLHttpRequest['responseType'],\n): number | undefined {\n  try {\n    const bodyStr = responseType === 'json' && body && typeof body === 'object' ? JSON.stringify(body) : body;\n    return getBodySize(bodyStr);\n  } catch {\n    return undefined;\n  }\n}\n","import type { Breadcrumb, BreadcrumbHint, FetchBreadcrumbData, XhrBreadcrumbData } from '@sentry/core';\nimport { getClient } from '@sentry/core';\nimport type { FetchHint, XhrHint } from '@sentry-internal/browser-utils';\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { ReplayContainer, ReplayNetworkOptions } from '../types';\nimport { debug } from '../util/logger';\nimport { captureFetchBreadcrumbToReplay, enrichFetchBreadcrumb } from './util/fetchUtils';\nimport { captureXhrBreadcrumbToReplay, enrichXhrBreadcrumb } from './util/xhrUtils';\n\ninterface ExtendedNetworkBreadcrumbsOptions extends ReplayNetworkOptions {\n  replay: ReplayContainer;\n}\n\n/**\n * This method does two things:\n * - It enriches the regular XHR/fetch breadcrumbs with request/response size data\n * - It captures the XHR/fetch breadcrumbs to the replay\n *   (enriching it with further data that is _not_ added to the regular breadcrumbs)\n */\nexport function handleNetworkBreadcrumbs(replay: ReplayContainer): void {\n  const client = getClient();\n\n  try {\n    const {\n      networkDetailAllowUrls,\n      networkDetailDenyUrls,\n      networkCaptureBodies,\n      networkRequestHeaders,\n      networkResponseHeaders,\n    } = replay.getOptions();\n\n    const options: ExtendedNetworkBreadcrumbsOptions = {\n      replay,\n      networkDetailAllowUrls,\n      networkDetailDenyUrls,\n      networkCaptureBodies,\n      networkRequestHeaders,\n      networkResponseHeaders,\n    };\n\n    if (client) {\n      client.on('beforeAddBreadcrumb', (breadcrumb, hint) => beforeAddNetworkBreadcrumb(options, breadcrumb, hint));\n    }\n  } catch {\n    // Do nothing\n  }\n}\n\n/** just exported for tests */\nexport function beforeAddNetworkBreadcrumb(\n  options: ExtendedNetworkBreadcrumbsOptions,\n  breadcrumb: Breadcrumb,\n  hint?: BreadcrumbHint,\n): void {\n  if (!breadcrumb.data) {\n    return;\n  }\n\n  try {\n    if (_isXhrBreadcrumb(breadcrumb) && _isXhrHint(hint)) {\n      // This has to be sync, as we need to ensure the breadcrumb is enriched in the same tick\n      // Because the hook runs synchronously, and the breadcrumb is afterwards passed on\n      // So any async mutations to it will not be reflected in the final breadcrumb\n      enrichXhrBreadcrumb(breadcrumb, hint);\n\n      // This call should not reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      captureXhrBreadcrumbToReplay(breadcrumb, hint, options);\n    }\n\n    if (_isFetchBreadcrumb(breadcrumb) && _isFetchHint(hint)) {\n      // This has to be sync, as we need to ensure the breadcrumb is enriched in the same tick\n      // Because the hook runs synchronously, and the breadcrumb is afterwards passed on\n      // So any async mutations to it will not be reflected in the final breadcrumb\n      enrichFetchBreadcrumb(breadcrumb, hint);\n\n      // This call should not reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      captureFetchBreadcrumbToReplay(breadcrumb, hint, options);\n    }\n  } catch (e) {\n    DEBUG_BUILD && debug.exception(e, 'Error when enriching network breadcrumb');\n  }\n}\n\nfunction _isXhrBreadcrumb(breadcrumb: Breadcrumb): breadcrumb is Breadcrumb & { data: XhrBreadcrumbData } {\n  return breadcrumb.category === 'xhr';\n}\n\nfunction _isFetchBreadcrumb(breadcrumb: Breadcrumb): breadcrumb is Breadcrumb & { data: FetchBreadcrumbData } {\n  return breadcrumb.category === 'fetch';\n}\n\nfunction _isXhrHint(hint?: BreadcrumbHint): hint is XhrHint {\n  return hint?.xhr;\n}\n\nfunction _isFetchHint(hint?: BreadcrumbHint): hint is FetchHint {\n  return hint?.response;\n}\n","import type { DynamicSamplingContext } from '@sentry/core';\nimport { addEventProcessor, getClient } from '@sentry/core';\nimport {\n  addClickKeypressInstrumentationHandler,\n  addHistoryInstrumentationHandler,\n} from '@sentry-internal/browser-utils';\nimport { handleAfterSendEvent } from '../coreHandlers/handleAfterSendEvent';\nimport { handleBeforeSendEvent } from '../coreHandlers/handleBeforeSendEvent';\nimport { handleBreadcrumbs } from '../coreHandlers/handleBreadcrumbs';\nimport { handleDomListener } from '../coreHandlers/handleDom';\nimport { handleGlobalEventListener } from '../coreHandlers/handleGlobalEvent';\nimport { handleHistorySpanListener } from '../coreHandlers/handleHistory';\nimport { handleNetworkBreadcrumbs } from '../coreHandlers/handleNetworkBreadcrumbs';\nimport type { ReplayContainer } from '../types';\n\n/**\n * Add global listeners that cannot be removed.\n */\nexport function addGlobalListeners(\n  replay: ReplayContainer,\n  { autoFlushOnFeedback }: { autoFlushOnFeedback?: boolean },\n): void {\n  // Listeners from core SDK //\n  const client = getClient();\n\n  addClickKeypressInstrumentationHandler(handleDomListener(replay));\n  addHistoryInstrumentationHandler(handleHistorySpanListener(replay));\n  handleBreadcrumbs(replay);\n  handleNetworkBreadcrumbs(replay);\n\n  // Tag all (non replay) events that get sent to Sentry with the current\n  // replay ID so that we can reference them later in the UI\n  const eventProcessor = handleGlobalEventListener(replay);\n  addEventProcessor(eventProcessor);\n\n  // If a custom client has no hooks yet, we continue to use the \"old\" implementation\n  if (client) {\n    client.on('beforeSendEvent', handleBeforeSendEvent(replay));\n    client.on('afterSendEvent', handleAfterSendEvent(replay));\n    client.on('createDsc', (dsc: DynamicSamplingContext) => {\n      const replayId = replay.getSessionId();\n      // We do not want to set the DSC when in buffer mode, as that means the replay has not been sent (yet)\n      if (replayId && replay.isEnabled() && replay.recordingMode === 'session') {\n        // Ensure to check that the session is still active - it could have expired in the meanwhile\n        const isSessionActive = replay.checkAndHandleExpiredSession();\n        if (isSessionActive) {\n          dsc.replay_id = replayId;\n        }\n      }\n    });\n\n    client.on('spanStart', span => {\n      replay.lastActiveSpan = span;\n    });\n\n    // We may be missing the initial spanStart due to timing issues,\n    // so we capture it on finish again.\n    client.on('spanEnd', span => {\n      replay.lastActiveSpan = span;\n    });\n\n    // We want to attach the replay id to the feedback event\n    client.on('beforeSendFeedback', async (feedbackEvent, options) => {\n      const replayId = replay.getSessionId();\n      if (options?.includeReplay && replay.isEnabled() && replayId && feedbackEvent.contexts?.feedback) {\n        // In case the feedback is sent via API and not through our widget, we want to flush replay\n        if (feedbackEvent.contexts.feedback.source === 'api' && autoFlushOnFeedback) {\n          await replay.flush();\n        }\n        feedbackEvent.contexts.feedback.replay_id = replayId;\n      }\n    });\n\n    if (autoFlushOnFeedback) {\n      client.on('openFeedbackWidget', async () => {\n        await replay.flush();\n      });\n    }\n  }\n}\n","import { WINDOW } from '../constants';\nimport type { AddEventResult, MemoryData, ReplayContainer, ReplayPerformanceEntry } from '../types';\nimport { createPerformanceSpans } from './createPerformanceSpans';\n\ntype ReplayMemoryEntry = ReplayPerformanceEntry<MemoryData> & { data: { memory: MemoryInfo } };\n\ninterface MemoryInfo {\n  jsHeapSizeLimit: number;\n  totalJSHeapSize: number;\n  usedJSHeapSize: number;\n}\n\n/**\n * Create a \"span\" for the total amount of memory being used by JS objects\n * (including v8 internal objects).\n */\nexport async function addMemoryEntry(replay: ReplayContainer): Promise<Array<AddEventResult | null>> {\n  // window.performance.memory is a non-standard API and doesn't work on all browsers, so we try-catch this\n  try {\n    return Promise.all(\n      createPerformanceSpans(replay, [\n        // @ts-expect-error memory doesn't exist on type Performance as the API is non-standard (we check that it exists above)\n        createMemoryEntry(WINDOW.performance.memory),\n      ]),\n    );\n  } catch {\n    // Do nothing\n    return [];\n  }\n}\n\nfunction createMemoryEntry(memoryEntry: MemoryInfo): ReplayMemoryEntry {\n  const { jsHeapSizeLimit, totalJSHeapSize, usedJSHeapSize } = memoryEntry;\n  // we don't want to use `getAbsoluteTime` because it adds the event time to the\n  // time origin, so we get the current timestamp instead\n  const time = Date.now() / 1000;\n  return {\n    type: 'memory',\n    name: 'memory',\n    start: time,\n    end: time,\n    data: {\n      memory: {\n        jsHeapSizeLimit,\n        totalJSHeapSize,\n        usedJSHeapSize,\n      },\n    },\n  };\n}\n","import { debounce as debounceCore } from '@sentry/core';\nimport { setTimeout } from '@sentry-internal/browser-utils';\n\ntype DebouncedCallback = {\n  (): void | unknown;\n  flush: () => void | unknown;\n  cancel: () => void;\n};\ntype CallbackFunction = () => unknown;\ntype DebounceOptions = { maxWait?: number };\n\n/**\n * Heavily simplified debounce function based on lodash.debounce.\n *\n * This function takes a callback function (@param fun) and delays its invocation\n * by @param wait milliseconds. Optionally, a maxWait can be specified in @param options,\n * which ensures that the callback is invoked at least once after the specified max. wait time.\n *\n * @param func the function whose invocation is to be debounced\n * @param wait the minimum time until the function is invoked after it was called once\n * @param options the options object, which can contain the `maxWait` property\n *\n * @returns the debounced version of the function, which needs to be called at least once to start the\n *          debouncing process. Subsequent calls will reset the debouncing timer and, in case @paramfunc\n *          was already invoked in the meantime, return @param func's return value.\n *          The debounced function has two additional properties:\n *          - `flush`: Invokes the debounced function immediately and returns its return value\n *          - `cancel`: Cancels the debouncing process and resets the debouncing timer\n */\nexport function debounce(func: CallbackFunction, wait: number, options?: DebounceOptions): DebouncedCallback {\n  return debounceCore(func, wait, {\n    ...options,\n    // @ts-expect-error - Not quite sure why these types do not match, but this is fine\n    setTimeoutImpl: setTimeout,\n  });\n}\n","import { GLOBAL_OBJ } from '@sentry/core';\n\nconst NAVIGATOR = GLOBAL_OBJ.navigator;\n\n/**\n *  Disable sampling mousemove events on iOS browsers as this can cause blocking the main thread\n *  https://github.com/getsentry/sentry-javascript/issues/14534\n */\nexport function getRecordingSamplingOptions(): Partial<{ sampling: { mousemove: boolean } }> {\n  if (\n    /iPhone|iPad|iPod/i.test(NAVIGATOR?.userAgent ?? '') ||\n    (/Macintosh/i.test(NAVIGATOR?.userAgent ?? '') && NAVIGATOR?.maxTouchPoints && NAVIGATOR?.maxTouchPoints > 1)\n  ) {\n    return {\n      sampling: {\n        mousemove: false,\n      },\n    };\n  }\n\n  return {};\n}\n","import { EventType } from '@sentry-internal/rrweb';\nimport { updateClickDetectorForRecordingEvent } from '../coreHandlers/handleClick';\nimport { DEBUG_BUILD } from '../debug-build';\nimport { saveSession } from '../session/saveSession';\nimport type { RecordingEvent, ReplayContainer, ReplayOptionFrameEvent } from '../types';\nimport { addEventSync } from './addEvent';\nimport { debug } from './logger';\n\ntype RecordingEmitCallback = (event: RecordingEvent, isCheckout?: boolean) => void;\n\n/**\n * Handler for recording events.\n *\n * Adds to event buffer, and has varying flushing behaviors if the event was a checkout.\n */\nexport function getHandleRecordingEmit(replay: ReplayContainer): RecordingEmitCallback {\n  let hadFirstEvent = false;\n\n  return (event: RecordingEvent, _isCheckout?: boolean) => {\n    // If this is false, it means session is expired, create and a new session and wait for checkout\n    if (!replay.checkAndHandleExpiredSession()) {\n      DEBUG_BUILD && debug.warn('Received replay event after session expired.');\n\n      return;\n    }\n\n    // `_isCheckout` is only set when the checkout is due to `checkoutEveryNms`\n    // We also want to treat the first event as a checkout, so we handle this specifically here\n    const isCheckout = _isCheckout || !hadFirstEvent;\n    hadFirstEvent = true;\n\n    if (replay.clickDetector) {\n      updateClickDetectorForRecordingEvent(replay.clickDetector, event);\n    }\n\n    // The handler returns `true` if we do not want to trigger debounced flush, `false` if we want to debounce flush.\n    replay.addUpdate(() => {\n      // The session is always started immediately on pageload/init, but for\n      // error-only replays, it should reflect the most recent checkout\n      // when an error occurs. Clear any state that happens before this current\n      // checkout. This needs to happen before `addEvent()` which updates state\n      // dependent on this reset.\n      if (replay.recordingMode === 'buffer' && isCheckout) {\n        replay.setInitialState();\n      }\n\n      // If the event is not added (e.g. due to being paused, disabled, or out of the max replay duration),\n      // Skip all further steps\n      if (!addEventSync(replay, event, isCheckout)) {\n        // Return true to skip scheduling a debounced flush\n        return true;\n      }\n\n      // Different behavior for full snapshots (type=2), ignore other event types\n      // See https://github.com/rrweb-io/rrweb/blob/d8f9290ca496712aa1e7d472549480c4e7876594/packages/rrweb/src/types.ts#L16\n      if (!isCheckout) {\n        return false;\n      }\n\n      const session = replay.session;\n\n      // Additionally, create a meta event that will capture certain SDK settings.\n      // In order to handle buffer mode, this needs to either be done when we\n      // receive checkout events or at flush time. We have an experimental mode\n      // to perform multiple checkouts a session (the idea is to improve\n      // seeking during playback), so also only include if segmentId is 0\n      // (handled in `addSettingsEvent`).\n      //\n      // `isCheckout` is always true, but want to be explicit that it should\n      // only be added for checkouts\n      addSettingsEvent(replay, isCheckout);\n\n      // When in buffer mode, make sure we adjust the session started date to the current earliest event of the buffer\n      // this should usually be the timestamp of the checkout event, but to be safe...\n      if (replay.recordingMode === 'buffer' && session && replay.eventBuffer) {\n        const earliestEvent = replay.eventBuffer.getEarliestTimestamp();\n        if (earliestEvent) {\n          DEBUG_BUILD &&\n            debug.log(`Updating session start time to earliest event in buffer to ${new Date(earliestEvent)}`);\n\n          session.started = earliestEvent;\n\n          if (replay.getOptions().stickySession) {\n            saveSession(session);\n          }\n        }\n      }\n\n      // If there is a previousSessionId after a full snapshot occurs, then\n      // the replay session was started due to session expiration. The new session\n      // is started before triggering a new checkout and contains the id\n      // of the previous session. Do not immediately flush in this case\n      // to avoid capturing only the checkout and instead the replay will\n      // be captured if they perform any follow-up actions.\n      if (session?.previousSessionId) {\n        return true;\n      }\n\n      if (replay.recordingMode === 'session') {\n        // If the full snapshot is due to an initial load, we will not have\n        // a previous session ID. In this case, we want to buffer events\n        // for a set amount of time before flushing. This can help avoid\n        // capturing replays of users that immediately close the window.\n\n        // This should never reject\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        void replay.flush();\n      }\n\n      return true;\n    });\n  };\n}\n\n/**\n * Exported for tests\n */\nexport function createOptionsEvent(replay: ReplayContainer): ReplayOptionFrameEvent {\n  const options = replay.getOptions();\n  return {\n    type: EventType.Custom,\n    timestamp: Date.now(),\n    data: {\n      tag: 'options',\n      payload: {\n        shouldRecordCanvas: replay.isRecordingCanvas(),\n        sessionSampleRate: options.sessionSampleRate,\n        errorSampleRate: options.errorSampleRate,\n        useCompressionOption: options.useCompression,\n        blockAllMedia: options.blockAllMedia,\n        maskAllText: options.maskAllText,\n        maskAllInputs: options.maskAllInputs,\n        useCompression: replay.eventBuffer ? replay.eventBuffer.type === 'worker' : false,\n        networkDetailHasUrls: options.networkDetailAllowUrls.length > 0,\n        networkCaptureBodies: options.networkCaptureBodies,\n        networkRequestHasHeaders: options.networkRequestHeaders.length > 0,\n        networkResponseHasHeaders: options.networkResponseHeaders.length > 0,\n      },\n    },\n  };\n}\n\n/**\n * Add a \"meta\" event that contains a simplified view on current configuration\n * options. This should only be included on the first segment of a recording.\n */\nfunction addSettingsEvent(replay: ReplayContainer, isCheckout?: boolean): void {\n  // Only need to add this event when sending the first segment\n  if (!isCheckout || !replay.session || replay.session.segmentId !== 0) {\n    return;\n  }\n\n  addEventSync(replay, createOptionsEvent(replay), false);\n}\n","/**\n * Vendored in from @sentry-internal/rrweb.\n *\n * This is a copy of the function from rrweb, it is not nicely exported there.\n */\nexport function closestElementOfNode(node: Node | null): HTMLElement | null {\n  if (!node) {\n    return null;\n  }\n\n  // Catch access to node properties to avoid Firefox \"permission denied\" errors\n  try {\n    const el: HTMLElement | null = node.nodeType === node.ELEMENT_NODE ? (node as HTMLElement) : node.parentElement;\n    return el;\n  } catch {\n    return null;\n  }\n}\n","import type { DsnComponents, ReplayEnvelope, ReplayEvent, ReplayRecordingData } from '@sentry/core';\nimport { createEnvelope, createEventEnvelopeHeaders, getSdkMetadataForEnvelopeHeader } from '@sentry/core';\n\n/**\n * Create a replay envelope ready to be sent.\n * This includes both the replay event, as well as the recording data.\n */\nexport function createReplayEnvelope(\n  replayEvent: ReplayEvent,\n  recordingData: ReplayRecordingData,\n  dsn: DsnComponents,\n  tunnel?: string,\n): ReplayEnvelope {\n  return createEnvelope<ReplayEnvelope>(\n    createEventEnvelopeHeaders(replayEvent, getSdkMetadataForEnvelopeHeader(replayEvent), tunnel, dsn),\n    [\n      [{ type: 'replay_event' }, replayEvent],\n      [\n        {\n          type: 'replay_recording',\n          // If string then we need to encode to UTF8, otherwise will have\n          // wrong size. TextEncoder has similar browser support to\n          // MutationObserver, although it does not accept IE11.\n          length:\n            typeof recordingData === 'string' ? new TextEncoder().encode(recordingData).length : recordingData.length,\n        },\n        recordingData,\n      ],\n    ],\n  );\n}\n","import type { ReplayRecordingData } from '@sentry/core';\n\n/**\n * Prepare the recording data ready to be sent.\n */\nexport function prepareRecordingData({\n  recordingData,\n  headers,\n}: {\n  recordingData: ReplayRecordingData;\n  headers: Record<string, unknown>;\n}): ReplayRecordingData {\n  let payloadWithSequence;\n\n  // XXX: newline is needed to separate sequence id from events\n  const replayHeaders = `${JSON.stringify(headers)}\n`;\n\n  if (typeof recordingData === 'string') {\n    payloadWithSequence = `${replayHeaders}${recordingData}`;\n  } else {\n    const enc = new TextEncoder();\n    // XXX: newline is needed to separate sequence id from events\n    const sequence = enc.encode(replayHeaders);\n    // Merge the two Uint8Arrays\n    payloadWithSequence = new Uint8Array(sequence.length + recordingData.length);\n    payloadWithSequence.set(sequence);\n    payloadWithSequence.set(recordingData, sequence.length);\n  }\n\n  return payloadWithSequence;\n}\n","import type { Client, EventHint, ReplayEvent, Scope } from '@sentry/core';\nimport { getIsolationScope, prepareEvent } from '@sentry/core';\n\n/**\n * Prepare a replay event & enrich it with the SDK metadata.\n */\nexport async function prepareReplayEvent({\n  client,\n  scope,\n  replayId: event_id,\n  event,\n}: {\n  client: Client;\n  scope: Scope;\n  replayId: string;\n  event: ReplayEvent;\n}): Promise<ReplayEvent | null> {\n  const integrations =\n    typeof client['_integrations'] === 'object' &&\n    client['_integrations'] !== null &&\n    !Array.isArray(client['_integrations'])\n      ? Object.keys(client['_integrations'])\n      : undefined;\n\n  const eventHint: EventHint = { event_id, integrations };\n\n  client.emit('preprocessEvent', event, eventHint);\n\n  const preparedEvent = (await prepareEvent(\n    client.getOptions(),\n    event,\n    eventHint,\n    scope,\n    client,\n    getIsolationScope(),\n  )) as ReplayEvent | null;\n\n  // If e.g. a global event processor returned null\n  if (!preparedEvent) {\n    return null;\n  }\n\n  client.emit('postprocessEvent', preparedEvent, eventHint);\n\n  // This normally happens in browser client \"_prepareEvent\"\n  // but since we do not use this private method from the client, but rather the plain import\n  // we need to do this manually.\n  preparedEvent.platform = preparedEvent.platform || 'javascript';\n\n  // extract the SDK name because `client._prepareEvent` doesn't add it to the event\n  const metadata = client.getSdkMetadata();\n  const { name, version } = metadata?.sdk || {};\n\n  preparedEvent.sdk = {\n    ...preparedEvent.sdk,\n    name: name || 'sentry.javascript.unknown',\n    version: version || '0.0.0',\n  };\n\n  return preparedEvent;\n}\n","import type { RateLimits, ReplayEvent, TransportMakeRequestResponse } from '@sentry/core';\nimport { getClient, getCurrentScope, isRateLimited, resolvedSyncPromise, updateRateLimits } from '@sentry/core';\nimport { REPLAY_EVENT_NAME, UNABLE_TO_SEND_REPLAY } from '../constants';\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { SendReplayData } from '../types';\nimport { createReplayEnvelope } from './createReplayEnvelope';\nimport { debug } from './logger';\nimport { prepareRecordingData } from './prepareRecordingData';\nimport { prepareReplayEvent } from './prepareReplayEvent';\n\n/**\n * Send replay attachment using `fetch()`\n */\nexport async function sendReplayRequest({\n  recordingData,\n  replayId,\n  segmentId: segment_id,\n  eventContext,\n  timestamp,\n  session,\n}: SendReplayData): Promise<TransportMakeRequestResponse> {\n  const preparedRecordingData = prepareRecordingData({\n    recordingData,\n    headers: {\n      segment_id,\n    },\n  });\n\n  const { urls, errorIds, traceIds, initialTimestamp } = eventContext;\n\n  const client = getClient();\n  const scope = getCurrentScope();\n  const transport = client?.getTransport();\n  const dsn = client?.getDsn();\n\n  if (!client || !transport || !dsn || !session.sampled) {\n    return resolvedSyncPromise({});\n  }\n\n  const baseEvent: ReplayEvent = {\n    type: REPLAY_EVENT_NAME,\n    replay_start_timestamp: initialTimestamp / 1000,\n    timestamp: timestamp / 1000,\n    error_ids: errorIds,\n    trace_ids: traceIds,\n    urls,\n    replay_id: replayId,\n    segment_id,\n    replay_type: session.sampled,\n  };\n\n  const replayEvent = await prepareReplayEvent({ scope, client, replayId, event: baseEvent });\n\n  if (!replayEvent) {\n    // Taken from baseclient's `_processEvent` method, where this is handled for errors/transactions\n    client.recordDroppedEvent('event_processor', 'replay');\n    DEBUG_BUILD && debug.log('An event processor returned `null`, will not send event.');\n    return resolvedSyncPromise({});\n  }\n\n  /*\n  For reference, the fully built event looks something like this:\n  {\n      \"type\": \"replay_event\",\n      \"timestamp\": 1670837008.634,\n      \"error_ids\": [\n          \"errorId\"\n      ],\n      \"trace_ids\": [\n          \"traceId\"\n      ],\n      \"urls\": [\n          \"https://example.com\"\n      ],\n      \"replay_id\": \"eventId\",\n      \"segment_id\": 3,\n      \"replay_type\": \"error\",\n      \"platform\": \"javascript\",\n      \"event_id\": \"eventId\",\n      \"environment\": \"production\",\n      \"sdk\": {\n          \"integrations\": [\n              \"BrowserTracing\",\n              \"Replay\"\n          ],\n          \"name\": \"sentry.javascript.browser\",\n          \"version\": \"7.25.0\"\n      },\n      \"sdkProcessingMetadata\": {},\n      \"contexts\": {\n      },\n  }\n  */\n\n  // Prevent this data (which, if it exists, was used in earlier steps in the processing pipeline) from being sent to\n  // sentry. (Note: Our use of this property comes and goes with whatever we might be debugging, whatever hacks we may\n  // have temporarily added, etc. Even if we don't happen to be using it at some point in the future, let's not get rid\n  // of this `delete`, lest we miss putting it back in the next time the property is in use.)\n  delete replayEvent.sdkProcessingMetadata;\n\n  const envelope = createReplayEnvelope(replayEvent, preparedRecordingData, dsn, client.getOptions().tunnel);\n\n  let response: TransportMakeRequestResponse;\n\n  try {\n    response = await transport.send(envelope);\n  } catch (err) {\n    const error = new Error(UNABLE_TO_SEND_REPLAY);\n\n    try {\n      // In case browsers don't allow this property to be writable\n      // @ts-expect-error This needs lib es2022 and newer\n      error.cause = err;\n    } catch {\n      // nothing to do\n    }\n    throw error;\n  }\n\n  // If the status code is invalid, we want to immediately stop & not retry\n  if (typeof response.statusCode === 'number' && (response.statusCode < 200 || response.statusCode >= 300)) {\n    throw new TransportStatusCodeError(response.statusCode);\n  }\n\n  const rateLimits = updateRateLimits({}, response);\n  if (isRateLimited(rateLimits, 'replay')) {\n    throw new RateLimitError(rateLimits);\n  }\n\n  return response;\n}\n\n/**\n * This error indicates that the transport returned an invalid status code.\n */\nexport class TransportStatusCodeError extends Error {\n  public constructor(statusCode: number) {\n    super(`Transport returned status code ${statusCode}`);\n  }\n}\n\n/**\n * This error indicates that we hit a rate limit API error.\n */\nexport class RateLimitError extends Error {\n  public rateLimits: RateLimits;\n\n  public constructor(rateLimits: RateLimits) {\n    super('Rate limit hit');\n    this.rateLimits = rateLimits;\n  }\n}\n","import { setContext } from '@sentry/core';\nimport { setTimeout } from '@sentry-internal/browser-utils';\nimport { RETRY_BASE_INTERVAL, RETRY_MAX_COUNT, UNABLE_TO_SEND_REPLAY } from '../constants';\nimport type { SendReplayData } from '../types';\nimport { RateLimitError, sendReplayRequest, TransportStatusCodeError } from './sendReplayRequest';\n\n/**\n * Finalize and send the current replay event to Sentry\n */\nexport async function sendReplay(\n  replayData: SendReplayData,\n  retryConfig = {\n    count: 0,\n    interval: RETRY_BASE_INTERVAL,\n  },\n): Promise<unknown> {\n  const { recordingData, onError } = replayData;\n\n  // short circuit if there's no events to upload (this shouldn't happen as _runFlush makes this check)\n  if (!recordingData.length) {\n    return;\n  }\n\n  try {\n    await sendReplayRequest(replayData);\n    return true;\n  } catch (err) {\n    if (err instanceof TransportStatusCodeError || err instanceof RateLimitError) {\n      throw err;\n    }\n\n    // Capture error for every failed replay\n    setContext('Replays', {\n      _retryCount: retryConfig.count,\n    });\n\n    if (onError) {\n      onError(err);\n    }\n\n    // If an error happened here, it's likely that uploading the attachment\n    // failed, we'll can retry with the same events payload\n    if (retryConfig.count >= RETRY_MAX_COUNT) {\n      const error = new Error(`${UNABLE_TO_SEND_REPLAY} - max retries exceeded`);\n\n      try {\n        // In case browsers don't allow this property to be writable\n        // @ts-expect-error This needs lib es2022 and newer\n        error.cause = err;\n      } catch {\n        // nothing to do\n      }\n\n      throw error;\n    }\n\n    // will retry in intervals of 5, 10, 30\n    retryConfig.interval *= ++retryConfig.count;\n\n    return new Promise((resolve, reject) => {\n      setTimeout(async () => {\n        try {\n          await sendReplay(replayData, retryConfig);\n          resolve(true);\n        } catch (err) {\n          reject(err);\n        }\n      }, retryConfig.interval);\n    });\n  }\n}\n","export const THROTTLED = '__THROTTLED';\nexport const SKIPPED = '__SKIPPED';\n\n/**\n * Create a throttled function off a given function.\n * When calling the throttled function, it will call the original function only\n * if it hasn't been called more than `maxCount` times in the last `durationSeconds`.\n *\n * Returns `THROTTLED` if throttled for the first time, after that `SKIPPED`,\n * or else the return value of the original function.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function throttle<T extends (...rest: any[]) => any>(\n  fn: T,\n  maxCount: number,\n  durationSeconds: number,\n): (...rest: Parameters<T>) => ReturnType<T> | typeof THROTTLED | typeof SKIPPED {\n  const counter = new Map<number, number>();\n\n  const _cleanup = (now: number): void => {\n    const threshold = now - durationSeconds;\n    counter.forEach((_value, key) => {\n      if (key < threshold) {\n        counter.delete(key);\n      }\n    });\n  };\n\n  const _getTotalCount = (): number => {\n    return [...counter.values()].reduce((a, b) => a + b, 0);\n  };\n\n  let isThrottled = false;\n\n  return (...rest: Parameters<T>): ReturnType<T> | typeof THROTTLED | typeof SKIPPED => {\n    // Date in second-precision, which we use as basis for the throttling\n    const now = Math.floor(Date.now() / 1000);\n\n    // First, make sure to delete any old entries\n    _cleanup(now);\n\n    // If already over limit, do nothing\n    if (_getTotalCount() >= maxCount) {\n      const wasThrottled = isThrottled;\n      isThrottled = true;\n      return wasThrottled ? SKIPPED : THROTTLED;\n    }\n\n    isThrottled = false;\n    const count = counter.get(now) || 0;\n    counter.set(now, count + 1);\n\n    return fn(...rest);\n  };\n}\n","/* eslint-disable max-lines */ // TODO: We might want to split this file up\nimport type { ReplayRecordingMode, Span } from '@sentry/core';\nimport { getActiveSpan, getClient, getRootSpan, SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, spanToJSON } from '@sentry/core';\nimport { EventType, record } from '@sentry-internal/rrweb';\nimport {\n  BUFFER_CHECKOUT_TIME,\n  SESSION_IDLE_EXPIRE_DURATION,\n  SESSION_IDLE_PAUSE_DURATION,\n  SLOW_CLICK_SCROLL_TIMEOUT,\n  SLOW_CLICK_THRESHOLD,\n  WINDOW,\n} from './constants';\nimport { ClickDetector } from './coreHandlers/handleClick';\nimport { handleKeyboardEvent } from './coreHandlers/handleKeyboardEvent';\nimport { setupPerformanceObserver } from './coreHandlers/performanceObserver';\nimport { DEBUG_BUILD } from './debug-build';\nimport { createEventBuffer } from './eventBuffer';\nimport { clearSession } from './session/clearSession';\nimport { loadOrCreateSession } from './session/loadOrCreateSession';\nimport { saveSession } from './session/saveSession';\nimport { shouldRefreshSession } from './session/shouldRefreshSession';\nimport type {\n  AddEventResult,\n  AddUpdateCallback,\n  AllPerformanceEntry,\n  AllPerformanceEntryData,\n  EventBuffer,\n  InternalEventContext,\n  PopEventContext,\n  RecordingEvent,\n  RecordingOptions,\n  ReplayBreadcrumbFrame,\n  ReplayCanvasIntegrationOptions,\n  ReplayContainer as ReplayContainerInterface,\n  ReplayPerformanceEntry,\n  ReplayPluginOptions,\n  SendBufferedReplayOptions,\n  Session,\n  SlowClickConfig,\n  Timeouts,\n} from './types';\nimport { ReplayEventTypeCustom } from './types';\nimport { addEvent, addEventSync } from './util/addEvent';\nimport { addGlobalListeners } from './util/addGlobalListeners';\nimport { addMemoryEntry } from './util/addMemoryEntry';\nimport { createBreadcrumb } from './util/createBreadcrumb';\nimport { createPerformanceEntries } from './util/createPerformanceEntries';\nimport { createPerformanceSpans } from './util/createPerformanceSpans';\nimport { debounce } from './util/debounce';\nimport { getRecordingSamplingOptions } from './util/getRecordingSamplingOptions';\nimport { getHandleRecordingEmit } from './util/handleRecordingEmit';\nimport { isExpired } from './util/isExpired';\nimport { isSessionExpired } from './util/isSessionExpired';\nimport { debug } from './util/logger';\nimport { resetReplayIdOnDynamicSamplingContext } from './util/resetReplayIdOnDynamicSamplingContext';\nimport { closestElementOfNode } from './util/rrweb';\nimport { sendReplay } from './util/sendReplay';\nimport { RateLimitError } from './util/sendReplayRequest';\nimport type { SKIPPED } from './util/throttle';\nimport { throttle, THROTTLED } from './util/throttle';\n\n/**\n * The main replay container class, which holds all the state and methods for recording and sending replays.\n */\nexport class ReplayContainer implements ReplayContainerInterface {\n  public eventBuffer: EventBuffer | null;\n\n  public performanceEntries: AllPerformanceEntry[];\n\n  public replayPerformanceEntries: ReplayPerformanceEntry<AllPerformanceEntryData>[];\n\n  public session: Session | undefined;\n\n  public clickDetector: ClickDetector | undefined;\n\n  /**\n   * Recording can happen in one of two modes:\n   *   - session: Record the whole session, sending it continuously\n   *   - buffer: Always keep the last 60s of recording, requires:\n   *     - having replaysOnErrorSampleRate > 0 to capture replay when an error occurs\n   *     - or calling `flush()` to send the replay\n   */\n  public recordingMode: ReplayRecordingMode;\n\n  /**\n   * The current or last active span.\n   * This is only available when performance is enabled.\n   */\n  public lastActiveSpan?: Span;\n\n  /**\n   * These are here so we can overwrite them in tests etc.\n   * @hidden\n   */\n  public readonly timeouts: Timeouts;\n\n  /** The replay has to be manually started, because no sample rate (neither session or error) was provided. */\n  private _requiresManualStart: boolean;\n\n  private _throttledAddEvent: (\n    event: RecordingEvent,\n    isCheckout?: boolean,\n  ) => typeof THROTTLED | typeof SKIPPED | Promise<AddEventResult | null>;\n\n  /**\n   * Options to pass to `rrweb.record()`\n   */\n  private readonly _recordingOptions: RecordingOptions;\n\n  private readonly _options: ReplayPluginOptions;\n\n  private _performanceCleanupCallback?: () => void;\n\n  private _debouncedFlush: ReturnType<typeof debounce>;\n  private _flushLock: Promise<unknown> | undefined;\n\n  /**\n   * Timestamp of the last user activity. This lives across sessions.\n   */\n  private _lastActivity: number;\n\n  /**\n   * Is the integration currently active?\n   */\n  private _isEnabled: boolean;\n\n  /**\n   * Paused is a state where:\n   * - DOM Recording is not listening at all\n   * - Nothing will be added to event buffer (e.g. core SDK events)\n   */\n  private _isPaused: boolean;\n\n  /**\n   * Have we attached listeners to the core SDK?\n   * Note we have to track this as there is no way to remove instrumentation handlers.\n   */\n  private _hasInitializedCoreListeners: boolean;\n\n  /**\n   * Function to stop recording\n   */\n  private _stopRecording: ReturnType<typeof record> | undefined;\n\n  private _context: InternalEventContext;\n\n  /**\n   * Internal use for canvas recording options\n   */\n  private _canvas: ReplayCanvasIntegrationOptions | undefined;\n\n  /**\n   * Handle when visibility of the page content changes. Opening a new tab will\n   * cause the state to change to hidden because of content of current page will\n   * be hidden. Likewise, moving a different window to cover the contents of the\n   * page will also trigger a change to a hidden state.\n   */\n  private _handleVisibilityChange: () => void;\n\n  /**\n   * Handle when page is blurred\n   */\n  private _handleWindowBlur: () => void;\n\n  /**\n   * Handle when page is focused\n   */\n  private _handleWindowFocus: () => void;\n\n  /** Ensure page remains active when a key is pressed. */\n  private _handleKeyboardEvent: (event: KeyboardEvent) => void;\n\n  public constructor({\n    options,\n    recordingOptions,\n  }: {\n    options: ReplayPluginOptions;\n    recordingOptions: RecordingOptions;\n  }) {\n    this.eventBuffer = null;\n    this.performanceEntries = [];\n    this.replayPerformanceEntries = [];\n    this.recordingMode = 'session';\n    this.timeouts = {\n      sessionIdlePause: SESSION_IDLE_PAUSE_DURATION,\n      sessionIdleExpire: SESSION_IDLE_EXPIRE_DURATION,\n    } as const;\n    this._lastActivity = Date.now();\n    this._isEnabled = false;\n    this._isPaused = false;\n    this._requiresManualStart = false;\n    this._hasInitializedCoreListeners = false;\n    this._context = {\n      errorIds: new Set(),\n      traceIds: new Set(),\n      urls: [],\n      initialTimestamp: Date.now(),\n      initialUrl: '',\n    };\n\n    this._recordingOptions = recordingOptions;\n    this._options = options;\n\n    this._debouncedFlush = debounce(() => this._flush(), this._options.flushMinDelay, {\n      maxWait: this._options.flushMaxDelay,\n    });\n\n    this._throttledAddEvent = throttle(\n      (event: RecordingEvent, isCheckout?: boolean) => addEvent(this, event, isCheckout),\n      // Max 300 events...\n      300,\n      // ... per 5s\n      5,\n    );\n\n    const { slowClickTimeout, slowClickIgnoreSelectors } = this.getOptions();\n\n    const slowClickConfig: SlowClickConfig | undefined = slowClickTimeout\n      ? {\n          threshold: Math.min(SLOW_CLICK_THRESHOLD, slowClickTimeout),\n          timeout: slowClickTimeout,\n          scrollTimeout: SLOW_CLICK_SCROLL_TIMEOUT,\n          ignoreSelector: slowClickIgnoreSelectors ? slowClickIgnoreSelectors.join(',') : '',\n        }\n      : undefined;\n\n    if (slowClickConfig) {\n      this.clickDetector = new ClickDetector(this, slowClickConfig);\n    }\n\n    // Configure replay debug logger w/ experimental options\n    if (DEBUG_BUILD) {\n      const experiments = options._experiments;\n      debug.setConfig({\n        captureExceptions: !!experiments.captureExceptions,\n        traceInternals: !!experiments.traceInternals,\n      });\n    }\n\n    // We set these handler properties as class properties, to make binding/unbinding them easier\n    this._handleVisibilityChange = () => {\n      if (WINDOW.document.visibilityState === 'visible') {\n        this._doChangeToForegroundTasks();\n      } else {\n        this._doChangeToBackgroundTasks();\n      }\n    };\n\n    /**\n     * Handle when page is blurred\n     */\n    this._handleWindowBlur = () => {\n      const breadcrumb = createBreadcrumb({\n        category: 'ui.blur',\n      });\n\n      // Do not count blur as a user action -- it's part of the process of them\n      // leaving the page\n      this._doChangeToBackgroundTasks(breadcrumb);\n    };\n\n    this._handleWindowFocus = () => {\n      const breadcrumb = createBreadcrumb({\n        category: 'ui.focus',\n      });\n\n      // Do not count focus as a user action -- instead wait until they focus and\n      // interactive with page\n      this._doChangeToForegroundTasks(breadcrumb);\n    };\n\n    /** Ensure page remains active when a key is pressed. */\n    this._handleKeyboardEvent = (event: KeyboardEvent) => {\n      handleKeyboardEvent(this, event);\n    };\n  }\n\n  /** Get the event context. */\n  public getContext(): InternalEventContext {\n    return this._context;\n  }\n\n  /** If recording is currently enabled. */\n  public isEnabled(): boolean {\n    return this._isEnabled;\n  }\n\n  /** If recording is currently paused. */\n  public isPaused(): boolean {\n    return this._isPaused;\n  }\n\n  /**\n   * Determine if canvas recording is enabled\n   */\n  public isRecordingCanvas(): boolean {\n    return Boolean(this._canvas);\n  }\n\n  /** Get the replay integration options. */\n  public getOptions(): ReplayPluginOptions {\n    return this._options;\n  }\n\n  /** A wrapper to conditionally capture exceptions. */\n  public handleException(error: unknown): void {\n    DEBUG_BUILD && debug.exception(error);\n    if (this._options.onError) {\n      this._options.onError(error);\n    }\n  }\n\n  /**\n   * Initializes the plugin based on sampling configuration. Should not be\n   * called outside of constructor.\n   */\n  public initializeSampling(previousSessionId?: string): void {\n    const { errorSampleRate, sessionSampleRate } = this._options;\n\n    // If neither sample rate is > 0, then do nothing - user will need to call one of\n    // `start()` or `startBuffering` themselves.\n    const requiresManualStart = errorSampleRate <= 0 && sessionSampleRate <= 0;\n\n    this._requiresManualStart = requiresManualStart;\n\n    if (requiresManualStart) {\n      return;\n    }\n\n    // Otherwise if there is _any_ sample rate set, try to load an existing\n    // session, or create a new one.\n    this._initializeSessionForSampling(previousSessionId);\n\n    if (!this.session) {\n      // This should not happen, something wrong has occurred\n      DEBUG_BUILD && debug.exception(new Error('Unable to initialize and create session'));\n      return;\n    }\n\n    if (this.session.sampled === false) {\n      // This should only occur if `errorSampleRate` is 0 and was unsampled for\n      // session-based replay. In this case there is nothing to do.\n      return;\n    }\n\n    // If segmentId > 0, it means we've previously already captured this session\n    // In this case, we still want to continue in `session` recording mode\n    this.recordingMode = this.session.sampled === 'buffer' && this.session.segmentId === 0 ? 'buffer' : 'session';\n\n    DEBUG_BUILD && debug.infoTick(`Starting replay in ${this.recordingMode} mode`);\n\n    this._initializeRecording();\n  }\n\n  /**\n   * Start a replay regardless of sampling rate. Calling this will always\n   * create a new session. Will log a message if replay is already in progress.\n   *\n   * Creates or loads a session, attaches listeners to varying events (DOM,\n   * _performanceObserver, Recording, Sentry SDK, etc)\n   */\n  public start(): void {\n    if (this._isEnabled && this.recordingMode === 'session') {\n      DEBUG_BUILD && debug.log('Recording is already in progress');\n      return;\n    }\n\n    if (this._isEnabled && this.recordingMode === 'buffer') {\n      DEBUG_BUILD && debug.log('Buffering is in progress, call `flush()` to save the replay');\n      return;\n    }\n\n    DEBUG_BUILD && debug.infoTick('Starting replay in session mode');\n\n    // Required as user activity is initially set in\n    // constructor, so if `start()` is called after\n    // session idle expiration, a replay will not be\n    // created due to an idle timeout.\n    this._updateUserActivity();\n\n    const session = loadOrCreateSession(\n      {\n        maxReplayDuration: this._options.maxReplayDuration,\n        sessionIdleExpire: this.timeouts.sessionIdleExpire,\n      },\n      {\n        stickySession: this._options.stickySession,\n        // This is intentional: create a new session-based replay when calling `start()`\n        sessionSampleRate: 1,\n        allowBuffering: false,\n      },\n    );\n\n    this.session = session;\n\n    this._initializeRecording();\n  }\n\n  /**\n   * Start replay buffering. Buffers until `flush()` is called or, if\n   * `replaysOnErrorSampleRate` > 0, an error occurs.\n   */\n  public startBuffering(): void {\n    if (this._isEnabled) {\n      DEBUG_BUILD && debug.log('Buffering is in progress, call `flush()` to save the replay');\n      return;\n    }\n\n    DEBUG_BUILD && debug.infoTick('Starting replay in buffer mode');\n\n    const session = loadOrCreateSession(\n      {\n        sessionIdleExpire: this.timeouts.sessionIdleExpire,\n        maxReplayDuration: this._options.maxReplayDuration,\n      },\n      {\n        stickySession: this._options.stickySession,\n        sessionSampleRate: 0,\n        allowBuffering: true,\n      },\n    );\n\n    this.session = session;\n\n    this.recordingMode = 'buffer';\n    this._initializeRecording();\n  }\n\n  /**\n   * Start recording.\n   *\n   * Note that this will cause a new DOM checkout\n   */\n  public startRecording(): void {\n    try {\n      const canvasOptions = this._canvas;\n\n      this._stopRecording = record({\n        ...this._recordingOptions,\n        // When running in error sampling mode, we need to overwrite `checkoutEveryNms`\n        // Without this, it would record forever, until an error happens, which we don't want\n        // instead, we'll always keep the last 60 seconds of replay before an error happened\n        ...(this.recordingMode === 'buffer'\n          ? { checkoutEveryNms: BUFFER_CHECKOUT_TIME }\n          : // Otherwise, use experimental option w/ min checkout time of 6 minutes\n            // This is to improve playback seeking as there could potentially be\n            // less mutations to process in the worse cases.\n            //\n            // checkout by \"N\" events is probably ideal, but means we have less\n            // control about the number of checkouts we make (which generally\n            // increases replay size)\n            this._options._experiments.continuousCheckout && {\n              // Minimum checkout time is 6 minutes\n              checkoutEveryNms: Math.max(360_000, this._options._experiments.continuousCheckout),\n            }),\n        emit: getHandleRecordingEmit(this),\n        ...getRecordingSamplingOptions(),\n        onMutation: this._onMutationHandler.bind(this),\n        ...(canvasOptions\n          ? {\n              recordCanvas: canvasOptions.recordCanvas,\n              getCanvasManager: canvasOptions.getCanvasManager,\n              sampling: canvasOptions.sampling,\n              dataURLOptions: canvasOptions.dataURLOptions,\n            }\n          : {}),\n      });\n    } catch (err) {\n      this.handleException(err);\n    }\n  }\n\n  /**\n   * Stops the recording, if it was running.\n   *\n   * Returns true if it was previously stopped, or is now stopped,\n   * otherwise false.\n   */\n  public stopRecording(): boolean {\n    try {\n      if (this._stopRecording) {\n        this._stopRecording();\n        this._stopRecording = undefined;\n      }\n\n      return true;\n    } catch (err) {\n      this.handleException(err);\n      return false;\n    }\n  }\n\n  /**\n   * Currently, this needs to be manually called (e.g. for tests). Sentry SDK\n   * does not support a teardown\n   */\n  public async stop({ forceFlush = false, reason }: { forceFlush?: boolean; reason?: string } = {}): Promise<void> {\n    if (!this._isEnabled) {\n      return;\n    }\n\n    // We can't move `_isEnabled` after awaiting a flush, otherwise we can\n    // enter into an infinite loop when `stop()` is called while flushing.\n    this._isEnabled = false;\n\n    try {\n      DEBUG_BUILD && debug.log(`Stopping Replay${reason ? ` triggered by ${reason}` : ''}`);\n\n      resetReplayIdOnDynamicSamplingContext();\n\n      this._removeListeners();\n      this.stopRecording();\n\n      this._debouncedFlush.cancel();\n      // See comment above re: `_isEnabled`, we \"force\" a flush, ignoring the\n      // `_isEnabled` state of the plugin since it was disabled above.\n      if (forceFlush) {\n        await this._flush({ force: true });\n      }\n\n      // After flush, destroy event buffer\n      this.eventBuffer?.destroy();\n      this.eventBuffer = null;\n\n      // Clear session from session storage, note this means if a new session\n      // is started after, it will not have `previousSessionId`\n      clearSession(this);\n    } catch (err) {\n      this.handleException(err);\n    }\n  }\n\n  /**\n   * Pause some replay functionality. See comments for `_isPaused`.\n   * This differs from stop as this only stops DOM recording, it is\n   * not as thorough of a shutdown as `stop()`.\n   */\n  public pause(): void {\n    if (this._isPaused) {\n      return;\n    }\n\n    this._isPaused = true;\n    this.stopRecording();\n\n    DEBUG_BUILD && debug.log('Pausing replay');\n  }\n\n  /**\n   * Resumes recording, see notes for `pause().\n   *\n   * Note that calling `startRecording()` here will cause a\n   * new DOM checkout.`\n   */\n  public resume(): void {\n    if (!this._isPaused || !this._checkSession()) {\n      return;\n    }\n\n    this._isPaused = false;\n    this.startRecording();\n\n    DEBUG_BUILD && debug.log('Resuming replay');\n  }\n\n  /**\n   * If not in \"session\" recording mode, flush event buffer which will create a new replay.\n   * Unless `continueRecording` is false, the replay will continue to record and\n   * behave as a \"session\"-based replay.\n   *\n   * Otherwise, queue up a flush.\n   */\n  public async sendBufferedReplayOrFlush({ continueRecording = true }: SendBufferedReplayOptions = {}): Promise<void> {\n    if (this.recordingMode === 'session') {\n      return this.flushImmediate();\n    }\n\n    const activityTime = Date.now();\n\n    DEBUG_BUILD && debug.log('Converting buffer to session');\n\n    // Allow flush to complete before resuming as a session recording, otherwise\n    // the checkout from `startRecording` may be included in the payload.\n    // Prefer to keep the error replay as a separate (and smaller) segment\n    // than the session replay.\n    await this.flushImmediate();\n\n    const hasStoppedRecording = this.stopRecording();\n\n    if (!continueRecording || !hasStoppedRecording) {\n      return;\n    }\n\n    // To avoid race conditions where this is called multiple times, we check here again that we are still buffering\n    if ((this.recordingMode as ReplayRecordingMode) === 'session') {\n      return;\n    }\n\n    // Re-start recording in session-mode\n    this.recordingMode = 'session';\n\n    // Once this session ends, we do not want to refresh it\n    if (this.session) {\n      this._updateUserActivity(activityTime);\n      this._updateSessionActivity(activityTime);\n      this._maybeSaveSession();\n    }\n\n    this.startRecording();\n  }\n\n  /**\n   * We want to batch uploads of replay events. Save events only if\n   * `<flushMinDelay>` milliseconds have elapsed since the last event\n   * *OR* if `<flushMaxDelay>` milliseconds have elapsed.\n   *\n   * Accepts a callback to perform side-effects and returns true to stop batch\n   * processing and hand back control to caller.\n   */\n  public addUpdate(cb: AddUpdateCallback): void {\n    // We need to always run `cb` (e.g. in the case of `this.recordingMode == 'buffer'`)\n    const cbResult = cb();\n\n    // If this option is turned on then we will only want to call `flush`\n    // explicitly\n    if (this.recordingMode === 'buffer') {\n      return;\n    }\n\n    // If callback is true, we do not want to continue with flushing -- the\n    // caller will need to handle it.\n    if (cbResult === true) {\n      return;\n    }\n\n    // addUpdate is called quite frequently - use _debouncedFlush so that it\n    // respects the flush delays and does not flush immediately\n    this._debouncedFlush();\n  }\n\n  /**\n   * Updates the user activity timestamp and resumes recording. This should be\n   * called in an event handler for a user action that we consider as the user\n   * being \"active\" (e.g. a mouse click).\n   */\n  public triggerUserActivity(): void {\n    this._updateUserActivity();\n\n    // This case means that recording was once stopped due to inactivity.\n    // Ensure that recording is resumed.\n    if (!this._stopRecording) {\n      // Create a new session, otherwise when the user action is flushed, it\n      // will get rejected due to an expired session.\n      if (!this._checkSession()) {\n        return;\n      }\n\n      // Note: This will cause a new DOM checkout\n      this.resume();\n      return;\n    }\n\n    // Otherwise... recording was never suspended, continue as normalish\n    this.checkAndHandleExpiredSession();\n\n    this._updateSessionActivity();\n  }\n\n  /**\n   * Updates the user activity timestamp *without* resuming\n   * recording. Some user events (e.g. keydown) can be create\n   * low-value replays that only contain the keypress as a\n   * breadcrumb. Instead this would require other events to\n   * create a new replay after a session has expired.\n   */\n  public updateUserActivity(): void {\n    this._updateUserActivity();\n    this._updateSessionActivity();\n  }\n\n  /**\n   * Only flush if `this.recordingMode === 'session'`\n   */\n  public conditionalFlush(): Promise<void> {\n    if (this.recordingMode === 'buffer') {\n      return Promise.resolve();\n    }\n\n    return this.flushImmediate();\n  }\n\n  /**\n   * Flush using debounce flush\n   */\n  public flush(): Promise<void> {\n    return this._debouncedFlush() as Promise<void>;\n  }\n\n  /**\n   * Always flush via `_debouncedFlush` so that we do not have flushes triggered\n   * from calling both `flush` and `_debouncedFlush`. Otherwise, there could be\n   * cases of multiple flushes happening closely together.\n   */\n  public flushImmediate(): Promise<void> {\n    this._debouncedFlush();\n    // `.flush` is provided by the debounced function, analogously to lodash.debounce\n    return this._debouncedFlush.flush() as Promise<void>;\n  }\n\n  /**\n   * Cancels queued up flushes.\n   */\n  public cancelFlush(): void {\n    this._debouncedFlush.cancel();\n  }\n\n  /** Get the current session (=replay) ID */\n  public getSessionId(): string | undefined {\n    return this.session?.id;\n  }\n\n  /**\n   * Checks if recording should be stopped due to user inactivity. Otherwise\n   * check if session is expired and create a new session if so. Triggers a new\n   * full snapshot on new session.\n   *\n   * Returns true if session is not expired, false otherwise.\n   * @hidden\n   */\n  public checkAndHandleExpiredSession(): boolean | void {\n    // Prevent starting a new session if the last user activity is older than\n    // SESSION_IDLE_PAUSE_DURATION. Otherwise non-user activity can trigger a new\n    // session+recording. This creates noisy replays that do not have much\n    // content in them.\n    if (\n      this._lastActivity &&\n      isExpired(this._lastActivity, this.timeouts.sessionIdlePause) &&\n      this.session &&\n      this.session.sampled === 'session'\n    ) {\n      // Pause recording only for session-based replays. Otherwise, resuming\n      // will create a new replay and will conflict with users who only choose\n      // to record error-based replays only. (e.g. the resumed replay will not\n      // contain a reference to an error)\n      this.pause();\n      return;\n    }\n\n    // --- There is recent user activity --- //\n    // This will create a new session if expired, based on expiry length\n    if (!this._checkSession()) {\n      // Check session handles the refreshing itself\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Capture some initial state that can change throughout the lifespan of the\n   * replay. This is required because otherwise they would be captured at the\n   * first flush.\n   */\n  public setInitialState(): void {\n    const urlPath = `${WINDOW.location.pathname}${WINDOW.location.hash}${WINDOW.location.search}`;\n    const url = `${WINDOW.location.origin}${urlPath}`;\n\n    this.performanceEntries = [];\n    this.replayPerformanceEntries = [];\n\n    // Reset _context as well\n    this._clearContext();\n\n    this._context.initialUrl = url;\n    this._context.initialTimestamp = Date.now();\n    this._context.urls.push(url);\n  }\n\n  /**\n   * Add a breadcrumb event, that may be throttled.\n   * If it was throttled, we add a custom breadcrumb to indicate that.\n   */\n  public throttledAddEvent(\n    event: RecordingEvent,\n    isCheckout?: boolean,\n  ): typeof THROTTLED | typeof SKIPPED | Promise<AddEventResult | null> {\n    const res = this._throttledAddEvent(event, isCheckout);\n\n    // If this is THROTTLED, it means we have throttled the event for the first time\n    // In this case, we want to add a breadcrumb indicating that something was skipped\n    if (res === THROTTLED) {\n      const breadcrumb = createBreadcrumb({\n        category: 'replay.throttled',\n      });\n\n      this.addUpdate(() => {\n        // Return `false` if the event _was_ added, as that means we schedule a flush\n        return !addEventSync(this, {\n          type: ReplayEventTypeCustom,\n          timestamp: breadcrumb.timestamp || 0,\n          data: {\n            tag: 'breadcrumb',\n            payload: breadcrumb,\n            metric: true,\n          },\n        });\n      });\n    }\n\n    return res;\n  }\n\n  /**\n   * This will get the parametrized route name of the current page.\n   * This is only available if performance is enabled, and if an instrumented router is used.\n   */\n  public getCurrentRoute(): string | undefined {\n    const lastActiveSpan = this.lastActiveSpan || getActiveSpan();\n    const lastRootSpan = lastActiveSpan && getRootSpan(lastActiveSpan);\n\n    const attributes = (lastRootSpan && spanToJSON(lastRootSpan).data) || {};\n    const source = attributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE];\n    if (!lastRootSpan || !source || !['route', 'custom'].includes(source)) {\n      return undefined;\n    }\n\n    return spanToJSON(lastRootSpan).description;\n  }\n\n  /**\n   * Initialize and start all listeners to varying events (DOM,\n   * Performance Observer, Recording, Sentry SDK, etc)\n   */\n  private _initializeRecording(): void {\n    this.setInitialState();\n\n    // this method is generally called on page load or manually - in both cases\n    // we should treat it as an activity\n    this._updateSessionActivity();\n\n    this.eventBuffer = createEventBuffer({\n      useCompression: this._options.useCompression,\n      workerUrl: this._options.workerUrl,\n    });\n\n    this._removeListeners();\n    this._addListeners();\n\n    // Need to set as enabled before we start recording, as `record()` can trigger a flush with a new checkout\n    this._isEnabled = true;\n    this._isPaused = false;\n\n    this.startRecording();\n  }\n\n  /**\n   * Loads (or refreshes) the current session.\n   */\n  private _initializeSessionForSampling(previousSessionId?: string): void {\n    // Whenever there is _any_ error sample rate, we always allow buffering\n    // Because we decide on sampling when an error occurs, we need to buffer at all times if sampling for errors\n    const allowBuffering = this._options.errorSampleRate > 0;\n\n    const session = loadOrCreateSession(\n      {\n        sessionIdleExpire: this.timeouts.sessionIdleExpire,\n        maxReplayDuration: this._options.maxReplayDuration,\n        previousSessionId,\n      },\n      {\n        stickySession: this._options.stickySession,\n        sessionSampleRate: this._options.sessionSampleRate,\n        allowBuffering,\n      },\n    );\n\n    this.session = session;\n  }\n\n  /**\n   * Checks and potentially refreshes the current session.\n   * Returns false if session is not recorded.\n   */\n  private _checkSession(): boolean {\n    // If there is no session yet, we do not want to refresh anything\n    // This should generally not happen, but to be safe....\n    if (!this.session) {\n      return false;\n    }\n\n    const currentSession = this.session;\n\n    if (\n      shouldRefreshSession(currentSession, {\n        sessionIdleExpire: this.timeouts.sessionIdleExpire,\n        maxReplayDuration: this._options.maxReplayDuration,\n      })\n    ) {\n      // This should never reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this._refreshSession(currentSession);\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Refresh a session with a new one.\n   * This stops the current session (without forcing a flush, as that would never work since we are expired),\n   * and then does a new sampling based on the refreshed session.\n   */\n  private async _refreshSession(session: Session): Promise<void> {\n    if (!this._isEnabled) {\n      return;\n    }\n    await this.stop({ reason: 'refresh session' });\n    this.initializeSampling(session.id);\n  }\n\n  /**\n   * Adds listeners to record events for the replay\n   */\n  private _addListeners(): void {\n    try {\n      WINDOW.document.addEventListener('visibilitychange', this._handleVisibilityChange);\n      WINDOW.addEventListener('blur', this._handleWindowBlur);\n      WINDOW.addEventListener('focus', this._handleWindowFocus);\n      WINDOW.addEventListener('keydown', this._handleKeyboardEvent);\n\n      if (this.clickDetector) {\n        this.clickDetector.addListeners();\n      }\n\n      // There is no way to remove these listeners, so ensure they are only added once\n      if (!this._hasInitializedCoreListeners) {\n        addGlobalListeners(this, { autoFlushOnFeedback: this._options._experiments.autoFlushOnFeedback });\n\n        this._hasInitializedCoreListeners = true;\n      }\n    } catch (err) {\n      this.handleException(err);\n    }\n\n    this._performanceCleanupCallback = setupPerformanceObserver(this);\n  }\n\n  /**\n   * Cleans up listeners that were created in `_addListeners`\n   */\n  private _removeListeners(): void {\n    try {\n      WINDOW.document.removeEventListener('visibilitychange', this._handleVisibilityChange);\n\n      WINDOW.removeEventListener('blur', this._handleWindowBlur);\n      WINDOW.removeEventListener('focus', this._handleWindowFocus);\n      WINDOW.removeEventListener('keydown', this._handleKeyboardEvent);\n\n      if (this.clickDetector) {\n        this.clickDetector.removeListeners();\n      }\n\n      if (this._performanceCleanupCallback) {\n        this._performanceCleanupCallback();\n      }\n    } catch (err) {\n      this.handleException(err);\n    }\n  }\n\n  /**\n   * Tasks to run when we consider a page to be hidden (via blurring and/or visibility)\n   */\n  private _doChangeToBackgroundTasks(breadcrumb?: ReplayBreadcrumbFrame): void {\n    if (!this.session) {\n      return;\n    }\n\n    const expired = isSessionExpired(this.session, {\n      maxReplayDuration: this._options.maxReplayDuration,\n      sessionIdleExpire: this.timeouts.sessionIdleExpire,\n    });\n\n    if (expired) {\n      return;\n    }\n\n    if (breadcrumb) {\n      this._createCustomBreadcrumb(breadcrumb);\n    }\n\n    // Send replay when the page/tab becomes hidden. There is no reason to send\n    // replay if it becomes visible, since no actions we care about were done\n    // while it was hidden\n    // This should never reject\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    void this.conditionalFlush();\n  }\n\n  /**\n   * Tasks to run when we consider a page to be visible (via focus and/or visibility)\n   */\n  private _doChangeToForegroundTasks(breadcrumb?: ReplayBreadcrumbFrame): void {\n    if (!this.session) {\n      return;\n    }\n\n    const isSessionActive = this.checkAndHandleExpiredSession();\n\n    if (!isSessionActive) {\n      // If the user has come back to the page within SESSION_IDLE_PAUSE_DURATION\n      // ms, we will re-use the existing session, otherwise create a new\n      // session\n      DEBUG_BUILD && debug.log('Document has become active, but session has expired');\n      return;\n    }\n\n    if (breadcrumb) {\n      this._createCustomBreadcrumb(breadcrumb);\n    }\n  }\n\n  /**\n   * Update user activity (across session lifespans)\n   */\n  private _updateUserActivity(_lastActivity: number = Date.now()): void {\n    this._lastActivity = _lastActivity;\n  }\n\n  /**\n   * Updates the session's last activity timestamp\n   */\n  private _updateSessionActivity(_lastActivity: number = Date.now()): void {\n    if (this.session) {\n      this.session.lastActivity = _lastActivity;\n      this._maybeSaveSession();\n    }\n  }\n\n  /**\n   * Helper to create (and buffer) a replay breadcrumb from a core SDK breadcrumb\n   */\n  private _createCustomBreadcrumb(breadcrumb: ReplayBreadcrumbFrame): void {\n    this.addUpdate(() => {\n      // This should never reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.throttledAddEvent({\n        type: EventType.Custom,\n        timestamp: breadcrumb.timestamp || 0,\n        data: {\n          tag: 'breadcrumb',\n          payload: breadcrumb,\n        },\n      });\n    });\n  }\n\n  /**\n   * Observed performance events are added to `this.performanceEntries`. These\n   * are included in the replay event before it is finished and sent to Sentry.\n   */\n  private _addPerformanceEntries(): Promise<Array<AddEventResult | null>> {\n    let performanceEntries = createPerformanceEntries(this.performanceEntries).concat(this.replayPerformanceEntries);\n\n    this.performanceEntries = [];\n    this.replayPerformanceEntries = [];\n\n    // If we are manually starting, we want to ensure we only include performance entries\n    // that are after the initial timestamp\n    // The reason for this is that we may have performance entries from the page load, but may decide to start\n    // the replay later on, in which case we do not want to include these entries.\n    // without this, manually started replays can have events long before the actual replay recording starts,\n    // which messes with the timeline etc.\n    if (this._requiresManualStart) {\n      const initialTimestampInSeconds = this._context.initialTimestamp / 1000;\n      performanceEntries = performanceEntries.filter(entry => entry.start >= initialTimestampInSeconds);\n    }\n\n    return Promise.all(createPerformanceSpans(this, performanceEntries));\n  }\n\n  /**\n   * Clear _context\n   */\n  private _clearContext(): void {\n    // XXX: `initialTimestamp` and `initialUrl` do not get cleared\n    this._context.errorIds.clear();\n    this._context.traceIds.clear();\n    this._context.urls = [];\n  }\n\n  /** Update the initial timestamp based on the buffer content. */\n  private _updateInitialTimestampFromEventBuffer(): void {\n    const { session, eventBuffer } = this;\n    // If replay was started manually (=no sample rate was given),\n    // We do not want to back-port the initial timestamp\n    if (!session || !eventBuffer || this._requiresManualStart) {\n      return;\n    }\n\n    // we only ever update this on the initial segment\n    if (session.segmentId) {\n      return;\n    }\n\n    const earliestEvent = eventBuffer.getEarliestTimestamp();\n    if (earliestEvent && earliestEvent < this._context.initialTimestamp) {\n      this._context.initialTimestamp = earliestEvent;\n    }\n  }\n\n  /**\n   * Return and clear _context\n   */\n  private _popEventContext(): PopEventContext {\n    const _context = {\n      initialTimestamp: this._context.initialTimestamp,\n      initialUrl: this._context.initialUrl,\n      errorIds: Array.from(this._context.errorIds),\n      traceIds: Array.from(this._context.traceIds),\n      urls: this._context.urls,\n    };\n\n    this._clearContext();\n\n    return _context;\n  }\n\n  /**\n   * Flushes replay event buffer to Sentry.\n   *\n   * Performance events are only added right before flushing - this is\n   * due to the buffered performance observer events.\n   *\n   * Should never be called directly, only by `flush`\n   */\n  private async _runFlush(): Promise<void> {\n    const replayId = this.getSessionId();\n\n    if (!this.session || !this.eventBuffer || !replayId) {\n      DEBUG_BUILD && debug.error('No session or eventBuffer found to flush.');\n      return;\n    }\n\n    await this._addPerformanceEntries();\n\n    // Check eventBuffer again, as it could have been stopped in the meanwhile\n    if (!this.eventBuffer?.hasEvents) {\n      return;\n    }\n\n    // Only attach memory event if eventBuffer is not empty\n    await addMemoryEntry(this);\n\n    // Check eventBuffer again, as it could have been stopped in the meanwhile\n    if (!this.eventBuffer) {\n      return;\n    }\n\n    // if this changed in the meanwhile, e.g. because the session was refreshed or similar, we abort here\n    if (replayId !== this.getSessionId()) {\n      return;\n    }\n\n    try {\n      // This uses the data from the eventBuffer, so we need to call this before `finish()\n      this._updateInitialTimestampFromEventBuffer();\n\n      const timestamp = Date.now();\n\n      // Check total duration again, to avoid sending outdated stuff\n      // We leave 30s wiggle room to accommodate late flushing etc.\n      // This _could_ happen when the browser is suspended during flushing, in which case we just want to stop\n      if (timestamp - this._context.initialTimestamp > this._options.maxReplayDuration + 30_000) {\n        throw new Error('Session is too long, not sending replay');\n      }\n\n      const eventContext = this._popEventContext();\n      // Always increment segmentId regardless of outcome of sending replay\n      const segmentId = this.session.segmentId++;\n      this._maybeSaveSession();\n\n      // Note this empties the event buffer regardless of outcome of sending replay\n      const recordingData = await this.eventBuffer.finish();\n\n      await sendReplay({\n        replayId,\n        recordingData,\n        segmentId,\n        eventContext,\n        session: this.session,\n        timestamp,\n        onError: err => this.handleException(err),\n      });\n    } catch (err) {\n      this.handleException(err);\n\n      // This means we retried 3 times and all of them failed,\n      // or we ran into a problem we don't want to retry, like rate limiting.\n      // In this case, we want to completely stop the replay - otherwise, we may get inconsistent segments\n      // This should never reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.stop({ reason: 'sendReplay' });\n\n      const client = getClient();\n\n      if (client) {\n        const dropReason = err instanceof RateLimitError ? 'ratelimit_backoff' : 'send_error';\n        client.recordDroppedEvent(dropReason, 'replay');\n      }\n    }\n  }\n\n  /**\n   * Flush recording data to Sentry. Creates a lock so that only a single flush\n   * can be active at a time. Do not call this directly.\n   */\n  private async _flush({\n    force = false,\n  }: {\n    /**\n     * If true, flush while ignoring the `_isEnabled` state of\n     * Replay integration. (By default, flush is noop if integration\n     * is stopped).\n     */\n    force?: boolean;\n  } = {}): Promise<void> {\n    if (!this._isEnabled && !force) {\n      // This can happen if e.g. the replay was stopped because of exceeding the retry limit\n      return;\n    }\n\n    if (!this.checkAndHandleExpiredSession()) {\n      DEBUG_BUILD && debug.error('Attempting to finish replay event after session expired.');\n      return;\n    }\n\n    if (!this.session) {\n      // should never happen, as we would have bailed out before\n      return;\n    }\n\n    const start = this.session.started;\n    const now = Date.now();\n    const duration = now - start;\n\n    // A flush is about to happen, cancel any queued flushes\n    this._debouncedFlush.cancel();\n\n    // If session is too short, or too long (allow some wiggle room over maxReplayDuration), do not send it\n    // This _should_ not happen, but it may happen if flush is triggered due to a page activity change or similar\n    const tooShort = duration < this._options.minReplayDuration;\n    const tooLong = duration > this._options.maxReplayDuration + 5_000;\n    if (tooShort || tooLong) {\n      DEBUG_BUILD &&\n        debug.log(\n          `Session duration (${Math.floor(duration / 1000)}s) is too ${\n            tooShort ? 'short' : 'long'\n          }, not sending replay.`,\n        );\n\n      if (tooShort) {\n        this._debouncedFlush();\n      }\n      return;\n    }\n\n    const eventBuffer = this.eventBuffer;\n    if (eventBuffer && this.session.segmentId === 0 && !eventBuffer.hasCheckout) {\n      DEBUG_BUILD && debug.log('Flushing initial segment without checkout.');\n      // TODO FN: Evaluate if we want to stop here, or remove this again?\n    }\n\n    const _flushInProgress = !!this._flushLock;\n\n    // this._flushLock acts as a lock so that future calls to `_flush()` will\n    // be blocked until current flush is finished (i.e. this promise resolves)\n    if (!this._flushLock) {\n      this._flushLock = this._runFlush();\n    }\n\n    try {\n      await this._flushLock;\n    } catch (err) {\n      this.handleException(err);\n    } finally {\n      this._flushLock = undefined;\n\n      if (_flushInProgress) {\n        // Wait for previous flush to finish, then call the debounced\n        // `_flush()`. It's possible there are other flush requests queued and\n        // waiting for it to resolve. We want to reduce all outstanding\n        // requests (as well as any new flush requests that occur within a\n        // second of the locked flush completing) into a single flush.\n        this._debouncedFlush();\n      }\n    }\n  }\n\n  /** Save the session, if it is sticky */\n  private _maybeSaveSession(): void {\n    if (this.session && this._options.stickySession) {\n      saveSession(this.session);\n    }\n  }\n\n  /** Handler for rrweb.record.onMutation */\n  private _onMutationHandler(mutations: MutationRecord[]): boolean {\n    const { ignoreMutations } = this._options._experiments;\n    if (ignoreMutations?.length) {\n      if (\n        mutations.some(mutation => {\n          const el = closestElementOfNode(mutation.target);\n          const selector = ignoreMutations.join(',');\n          return el?.matches(selector);\n        })\n      ) {\n        return false;\n      }\n    }\n\n    const count = mutations.length;\n\n    const mutationLimit = this._options.mutationLimit;\n    const mutationBreadcrumbLimit = this._options.mutationBreadcrumbLimit;\n    const overMutationLimit = mutationLimit && count > mutationLimit;\n\n    // Create a breadcrumb if a lot of mutations happen at the same time\n    // We can show this in the UI as an information with potential performance improvements\n    if (count > mutationBreadcrumbLimit || overMutationLimit) {\n      const breadcrumb = createBreadcrumb({\n        category: 'replay.mutations',\n        data: {\n          count,\n          limit: overMutationLimit,\n        },\n      });\n      this._createCustomBreadcrumb(breadcrumb);\n    }\n\n    // Stop replay if over the mutation limit\n    if (overMutationLimit) {\n      // This should never reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.stop({ reason: 'mutationLimit', forceFlush: this.recordingMode === 'session' });\n      return false;\n    }\n\n    // `true` means we use the regular mutation handling by rrweb\n    return true;\n  }\n}\n\ninterface MutationRecord {\n  type: string;\n  target: Node;\n  oldValue: string | null;\n  addedNodes: NodeList;\n  removedNodes: NodeList;\n  attributeName: string | null;\n}\n","import type { ReplayIntegrationPrivacyOptions } from '../types';\n\ntype GetPrivacyOptions = Required<Omit<ReplayIntegrationPrivacyOptions, 'maskFn'>>;\n\ninterface GetPrivacyReturn {\n  maskTextSelector: string;\n  unmaskTextSelector: string;\n  blockSelector: string;\n  unblockSelector: string;\n  ignoreSelector: string;\n\n  blockClass?: RegExp;\n  maskTextClass?: RegExp;\n}\n\nfunction getOption(selectors: string[], defaultSelectors: string[]): string {\n  return [\n    ...selectors,\n    // sentry defaults\n    ...defaultSelectors,\n  ].join(',');\n}\n\n/**\n * Returns privacy related configuration for use in rrweb\n */\nexport function getPrivacyOptions({ mask, unmask, block, unblock, ignore }: GetPrivacyOptions): GetPrivacyReturn {\n  const defaultBlockedElements = ['base', 'iframe[srcdoc]:not([src])'];\n\n  const maskSelector = getOption(mask, ['.sentry-mask', '[data-sentry-mask]']);\n  const unmaskSelector = getOption(unmask, []);\n\n  const options: GetPrivacyReturn = {\n    // We are making the decision to make text and input selectors the same\n    maskTextSelector: maskSelector,\n    unmaskTextSelector: unmaskSelector,\n\n    blockSelector: getOption(block, ['.sentry-block', '[data-sentry-block]', ...defaultBlockedElements]),\n    unblockSelector: getOption(unblock, []),\n    ignoreSelector: getOption(ignore, ['.sentry-ignore', '[data-sentry-ignore]', 'input[type=\"file\"]']),\n  };\n\n  return options;\n}\n","import type { getPrivacyOptions } from './getPrivacyOptions';\n\ninterface MaskAttributeParams {\n  maskAttributes: string[];\n  maskAllText: boolean;\n  privacyOptions: ReturnType<typeof getPrivacyOptions>;\n  key: string;\n  value: string;\n  el: HTMLElement;\n}\n\n/**\n * Masks an attribute if necessary, otherwise return attribute value as-is.\n */\nexport function maskAttribute({\n  el,\n  key,\n  maskAttributes,\n  maskAllText,\n  privacyOptions,\n  value,\n}: MaskAttributeParams): string {\n  // We only mask attributes if `maskAllText` is true\n  if (!maskAllText) {\n    return value;\n  }\n\n  // unmaskTextSelector takes precedence\n  if (privacyOptions.unmaskTextSelector && el.matches(privacyOptions.unmaskTextSelector)) {\n    return value;\n  }\n\n  if (\n    maskAttributes.includes(key) ||\n    // Need to mask `value` attribute for `<input>` if it's a button-like\n    // type\n    (key === 'value' && el.tagName === 'INPUT' && ['submit', 'button'].includes(el.getAttribute('type') || ''))\n  ) {\n    return value.replace(/[\\S]/g, '*');\n  }\n\n  return value;\n}\n","import type { BrowserClientReplayOptions, Client, Integration, IntegrationFn, ReplayRecordingMode } from '@sentry/core';\nimport { consoleSandbox, isBrowser, parseSampleRate } from '@sentry/core';\nimport {\n  DEFAULT_FLUSH_MAX_DELAY,\n  DEFAULT_FLUSH_MIN_DELAY,\n  MAX_REPLAY_DURATION,\n  MIN_REPLAY_DURATION,\n  MIN_REPLAY_DURATION_LIMIT,\n} from './constants';\nimport { ReplayContainer } from './replay';\nimport type {\n  InitialReplayPluginOptions,\n  RecordingOptions,\n  ReplayCanvasIntegrationOptions,\n  ReplayConfiguration,\n  ReplayPluginOptions,\n  SendBufferedReplayOptions,\n} from './types';\nimport { getPrivacyOptions } from './util/getPrivacyOptions';\nimport { maskAttribute } from './util/maskAttribute';\n\nconst MEDIA_SELECTORS =\n  'img,image,svg,video,object,picture,embed,map,audio,link[rel=\"icon\"],link[rel=\"apple-touch-icon\"]';\n\nconst DEFAULT_NETWORK_HEADERS = ['content-length', 'content-type', 'accept'];\n\nlet _initialized = false;\n\n/**\n * Sentry integration for [Session Replay](https://sentry.io/for/session-replay/).\n *\n * See the [Replay documentation](https://docs.sentry.io/platforms/javascript/guides/session-replay/) for more information.\n *\n * @example\n *\n * ```\n * Sentry.init({\n *   dsn: '__DSN__',\n *   integrations: [Sentry.replayIntegration()],\n * });\n * ```\n */\nexport const replayIntegration = ((options?: ReplayConfiguration) => {\n  return new Replay(options);\n}) satisfies IntegrationFn;\n\n/**\n * Replay integration\n */\nexport class Replay implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public name: string;\n\n  /**\n   * Options to pass to `rrweb.record()`\n   */\n  private readonly _recordingOptions: RecordingOptions;\n\n  /**\n   * Initial options passed to the replay integration, merged with default values.\n   * Note: `sessionSampleRate` and `errorSampleRate` are not required here, as they\n   * can only be finally set when setupOnce() is called.\n   *\n   * @private\n   */\n  private readonly _initialOptions: InitialReplayPluginOptions;\n\n  private _replay?: ReplayContainer;\n\n  public constructor({\n    flushMinDelay = DEFAULT_FLUSH_MIN_DELAY,\n    flushMaxDelay = DEFAULT_FLUSH_MAX_DELAY,\n    minReplayDuration = MIN_REPLAY_DURATION,\n    maxReplayDuration = MAX_REPLAY_DURATION,\n    stickySession = true,\n    useCompression = true,\n    workerUrl,\n    _experiments = {},\n    maskAllText = true,\n    maskAllInputs = true,\n    blockAllMedia = true,\n\n    mutationBreadcrumbLimit = 750,\n    mutationLimit = 10_000,\n\n    slowClickTimeout = 7_000,\n    slowClickIgnoreSelectors = [],\n\n    networkDetailAllowUrls = [],\n    networkDetailDenyUrls = [],\n    networkCaptureBodies = true,\n    networkRequestHeaders = [],\n    networkResponseHeaders = [],\n\n    mask = [],\n    maskAttributes = ['title', 'placeholder', 'aria-label'],\n    unmask = [],\n    block = [],\n    unblock = [],\n    ignore = [],\n    maskFn,\n\n    beforeAddRecordingEvent,\n    beforeErrorSampling,\n    onError,\n  }: ReplayConfiguration = {}) {\n    this.name = 'Replay';\n\n    const privacyOptions = getPrivacyOptions({\n      mask,\n      unmask,\n      block,\n      unblock,\n      ignore,\n    });\n\n    this._recordingOptions = {\n      maskAllInputs,\n      maskAllText,\n      maskInputOptions: { password: true },\n      maskTextFn: maskFn,\n      maskInputFn: maskFn,\n      maskAttributeFn: (key: string, value: string, el: HTMLElement): string =>\n        maskAttribute({\n          maskAttributes,\n          maskAllText,\n          privacyOptions,\n          key,\n          value,\n          el,\n        }),\n\n      ...privacyOptions,\n\n      // Our defaults\n      slimDOMOptions: 'all',\n      inlineStylesheet: true,\n      // Disable inline images as it will increase segment/replay size\n      inlineImages: false,\n      // collect fonts, but be aware that `sentry.io` needs to be an allowed\n      // origin for playback\n      collectFonts: true,\n      errorHandler: (err: Error & { __rrweb__?: boolean }) => {\n        try {\n          err.__rrweb__ = true;\n        } catch {\n          // ignore errors here\n          // this can happen if the error is frozen or does not allow mutation for other reasons\n        }\n      },\n      // experimental support for recording iframes from different origins\n      recordCrossOriginIframes: Boolean(_experiments.recordCrossOriginIframes),\n    };\n\n    this._initialOptions = {\n      flushMinDelay,\n      flushMaxDelay,\n      minReplayDuration: Math.min(minReplayDuration, MIN_REPLAY_DURATION_LIMIT),\n      maxReplayDuration: Math.min(maxReplayDuration, MAX_REPLAY_DURATION),\n      stickySession,\n      useCompression,\n      workerUrl,\n      blockAllMedia,\n      maskAllInputs,\n      maskAllText,\n      mutationBreadcrumbLimit,\n      mutationLimit,\n      slowClickTimeout,\n      slowClickIgnoreSelectors,\n      networkDetailAllowUrls,\n      networkDetailDenyUrls,\n      networkCaptureBodies,\n      networkRequestHeaders: _getMergedNetworkHeaders(networkRequestHeaders),\n      networkResponseHeaders: _getMergedNetworkHeaders(networkResponseHeaders),\n      beforeAddRecordingEvent,\n      beforeErrorSampling,\n      onError,\n\n      _experiments,\n    };\n\n    if (this._initialOptions.blockAllMedia) {\n      // `blockAllMedia` is a more user friendly option to configure blocking\n      // embedded media elements\n      this._recordingOptions.blockSelector = !this._recordingOptions.blockSelector\n        ? MEDIA_SELECTORS\n        : `${this._recordingOptions.blockSelector},${MEDIA_SELECTORS}`;\n    }\n\n    if (this._isInitialized && isBrowser()) {\n      throw new Error('Multiple Sentry Session Replay instances are not supported');\n    }\n\n    this._isInitialized = true;\n  }\n\n  /** If replay has already been initialized */\n  protected get _isInitialized(): boolean {\n    return _initialized;\n  }\n\n  /** Update _isInitialized */\n  protected set _isInitialized(value: boolean) {\n    _initialized = value;\n  }\n\n  /**\n   * Setup and initialize replay container\n   */\n  public afterAllSetup(client: Client): void {\n    if (!isBrowser() || this._replay) {\n      return;\n    }\n\n    this._setup(client);\n    this._initialize(client);\n  }\n\n  /**\n   * Start a replay regardless of sampling rate. Calling this will always\n   * create a new session. Will log a message if replay is already in progress.\n   *\n   * Creates or loads a session, attaches listeners to varying events (DOM,\n   * PerformanceObserver, Recording, Sentry SDK, etc)\n   */\n  public start(): void {\n    if (!this._replay) {\n      return;\n    }\n    this._replay.start();\n  }\n\n  /**\n   * Start replay buffering. Buffers until `flush()` is called or, if\n   * `replaysOnErrorSampleRate` > 0, until an error occurs.\n   */\n  public startBuffering(): void {\n    if (!this._replay) {\n      return;\n    }\n\n    this._replay.startBuffering();\n  }\n\n  /**\n   * Currently, this needs to be manually called (e.g. for tests). Sentry SDK\n   * does not support a teardown\n   */\n  public stop(): Promise<void> {\n    if (!this._replay) {\n      return Promise.resolve();\n    }\n\n    return this._replay.stop({ forceFlush: this._replay.recordingMode === 'session' });\n  }\n\n  /**\n   * If not in \"session\" recording mode, flush event buffer which will create a new replay.\n   * If replay is not enabled, a new session replay is started.\n   * Unless `continueRecording` is false, the replay will continue to record and\n   * behave as a \"session\"-based replay.\n   *\n   * Otherwise, queue up a flush.\n   */\n  public flush(options?: SendBufferedReplayOptions): Promise<void> {\n    if (!this._replay) {\n      return Promise.resolve();\n    }\n\n    // assuming a session should be recorded in this case\n    if (!this._replay.isEnabled()) {\n      this._replay.start();\n      return Promise.resolve();\n    }\n\n    return this._replay.sendBufferedReplayOrFlush(options);\n  }\n\n  /**\n   * Get the current session ID.\n   */\n  public getReplayId(): string | undefined {\n    if (!this._replay?.isEnabled()) {\n      return;\n    }\n\n    return this._replay.getSessionId();\n  }\n\n  /**\n   * Get the current recording mode. This can be either `session` or `buffer`.\n   *\n   * `session`: Recording the whole session, sending it continuously\n   * `buffer`: Always keeping the last 60s of recording, requires:\n   *   - having replaysOnErrorSampleRate > 0 to capture replay when an error occurs\n   *   - or calling `flush()` to send the replay\n   */\n  public getRecordingMode(): ReplayRecordingMode | undefined {\n    if (!this._replay?.isEnabled()) {\n      return;\n    }\n\n    return this._replay.recordingMode;\n  }\n\n  /**\n   * Initializes replay.\n   */\n  protected _initialize(client: Client): void {\n    if (!this._replay) {\n      return;\n    }\n\n    this._maybeLoadFromReplayCanvasIntegration(client);\n    this._replay.initializeSampling();\n  }\n\n  /** Setup the integration. */\n  private _setup(client: Client): void {\n    // Client is not available in constructor, so we need to wait until setupOnce\n    const finalOptions = loadReplayOptionsFromClient(this._initialOptions, client);\n\n    this._replay = new ReplayContainer({\n      options: finalOptions,\n      recordingOptions: this._recordingOptions,\n    });\n  }\n\n  /** Get canvas options from ReplayCanvas integration, if it is also added. */\n  private _maybeLoadFromReplayCanvasIntegration(client: Client): void {\n    // To save bundle size, we skip checking for stuff here\n    // and instead just try-catch everything - as generally this should all be defined\n    /* eslint-disable @typescript-eslint/no-non-null-assertion */\n    try {\n      const canvasIntegration = client.getIntegrationByName('ReplayCanvas') as Integration & {\n        getOptions(): ReplayCanvasIntegrationOptions;\n      };\n      if (!canvasIntegration) {\n        return;\n      }\n\n      this._replay!['_canvas'] = canvasIntegration.getOptions();\n    } catch {\n      // ignore errors here\n    }\n    /* eslint-enable @typescript-eslint/no-non-null-assertion */\n  }\n}\n\n/** Parse Replay-related options from SDK options */\nfunction loadReplayOptionsFromClient(initialOptions: InitialReplayPluginOptions, client: Client): ReplayPluginOptions {\n  const opt = client.getOptions() as BrowserClientReplayOptions;\n\n  const finalOptions: ReplayPluginOptions = {\n    sessionSampleRate: 0,\n    errorSampleRate: 0,\n    ...initialOptions,\n  };\n\n  const replaysSessionSampleRate = parseSampleRate(opt.replaysSessionSampleRate);\n  const replaysOnErrorSampleRate = parseSampleRate(opt.replaysOnErrorSampleRate);\n\n  if (replaysSessionSampleRate == null && replaysOnErrorSampleRate == null) {\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.warn(\n        'Replay is disabled because neither `replaysSessionSampleRate` nor `replaysOnErrorSampleRate` are set.',\n      );\n    });\n  }\n\n  if (replaysSessionSampleRate != null) {\n    finalOptions.sessionSampleRate = replaysSessionSampleRate;\n  }\n\n  if (replaysOnErrorSampleRate != null) {\n    finalOptions.errorSampleRate = replaysOnErrorSampleRate;\n  }\n\n  return finalOptions;\n}\n\nfunction _getMergedNetworkHeaders(headers: string[]): string[] {\n  return [...DEFAULT_NETWORK_HEADERS, ...headers.map(header => header.toLowerCase())];\n}\n","import { getClient } from '@sentry/core';\nimport type { replayIntegration } from '../integration';\n\n/**\n * This is a small utility to get a type-safe instance of the Replay integration.\n */\nexport function getReplay(): ReturnType<typeof replayIntegration> | undefined {\n  const client = getClient();\n  return client?.getIntegrationByName<ReturnType<typeof replayIntegration>>('Replay');\n}\n"],"names":["GLOBAL_OBJ","isElement","throttle","clearTimeout","closestElementOfNode","normalize","fill","setTimeout","htmlTreeAsString","browserPerformanceTimeOrigin","addPerformanceInstrumentationHandler","addLcpInstrumentationHandler","addClsInstrumentationHandler","addFidInstrumentationHandler","addInpInstrumentationHandler","addBreadcrumb","coreDebug","severityLevelFromString","captureException","getWorkerURL","uuid4","getClient","getLocationHref","getCurrentScope","getActiveSpan","getDynamicSamplingContextFromSpan","isSentryRequestUrl","serializeFormData","stringMatchesSomePattern","getFetchRequestArgBody","getBodyString","SENTRY_XHR_DATA_KEY","addClickKeypressInstrumentationHandler","addHistoryInstrumentationHandler","addEventProcessor","debounceCore","createEnvelope","createEventEnvelopeHeaders","getSdkMetadataForEnvelopeHeader","prepareEvent","getIsolationScope","resolvedSyncPromise","updateRateLimits","isRateLimited","setContext","getRootSpan","spanToJSON","SEMANTIC_ATTRIBUTE_SENTRY_SOURCE","isBrowser","parseSampleRate","consoleSandbox"],"mappings":"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","x_google_ignoreList":[1,9]}